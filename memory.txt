# file opened: src/rd3dmazeV6-sj.asm
   1  0000              ; written by me, richard dodds (dickydodds.com) beginning may 2018
   2  0000
   3  0000              ; some useful info:-
   4  0000              ; the zx81 character based screen is drawn in memory and then copied to the spectrum screen.
   5  0000
   6  0000              ;2nd oct 2018 - layer 6 completed - can print udg and spectrum
   7  0000              ;             character set now.
   8  0000              ;20th oct 2018 - left side completed except for multiple blocks in
   9  0000              ;layer 2, 3 & 4
  10  0000              ;11th oct - left side done and colours added.
  11  0000              ;V3. 22 nov - left side properly fixed - had bugs on top and bottom of maze
  12  0000              ;V4 27 nov. Removed the maze generation code from Malcolm Evans
  13  0000              ;V6 - 20 June 2018 - fixed end wall distance. Started chopping into manageable chunks.
  14  0000              ;2019 - done a load of stuff!
  15  0000              ;Oct 2020 - moved to SJASMPlus and implemented backbuffer
  16  0000              ;Oct 19 2020 - added ULANext colours and removed maze printing routine that used ROM - implemented M/C one.
  17  0000              ;Nov 23rd 2020 - got switch graphics working.
  18  0000              ;dec 4th 2020 - added rudimentary sound and got the maze exit transition working
  19  0000
  20  0000              ;For SJASMPLUS
  21  0000
  22  0000                      ; Allow the Next paging and instructions
  23  0000                      DEVICE ZXSPECTRUMNEXT
  24  0000
  25  0000                      ; Generate a map file for use with Cspect
  26  0000                      CSPECTMAP "project.map"
  27  0000
  28  0000
  29  0000                ;      INCLUDE 1-rd3dmazeV6.asm  ; init and maze itself
  30  0000                ;      INCLUDE 2-rd3dmazeV6.asm ; draw maze on screen, player direction,
  31  0000
  32  0000
  33  0000              ;for info...
  34  0000              ;load "4-rd3dmazeV6.asm" ; draw left side of maze
  35  0000              ;load "5-rd3dmazeV6.asm" ; draw wall in front of player
  36  0000              ;load "6-rd3dmazeV6.asm" ; draw right side of maze
  37  0000
  38  0000
  39  0000              ;##################################################
  40  0000              ;##################################################
  41  0000              ;##################################################
  42  0000              ;##################################################
  43  0000              ;##################################################
  44  0000              ;#                                                #
  45  0000              ;#               main game loop here              #
  46  0000              ;#                                                #
  47  0000              ;##################################################
  48  0000              ;##################################################
  49  0000              ;##################################################
  50  0000              ;##################################################
  51  0000              ;##################################################
  52  0000
  53  0000              main:           org 32768
  54  8000
  55  8000              ;set the player direction based on keypress
  56  8000              ; 0=north, 1=west, 2=south, 3=east
  57  8000
  58  8000 F3           start_game:    di       ;disable interrupts
  59  8001
  60  8001              ;first, clear the 2 ULA bank screens as they are at ROM location 0
  61  8001
  62  8001 ED 91 50 0A                NEXTREG $50,10
  63  8005 CD 96 81                   CALL clsULA
  64  8008 ED 91 50 0E                NEXTREG $50,14
  65  800C CD 96 81                   CALL clsULA
  66  800F
  67  800F              ;setup ULA Plus Palette
  68  800F
  69  800F CD A7 82                   call Setup_palette
  70  8012
  71  8012              ; jump straight into sjasmplus debugger
  72  8012                    ;  BREAK
  73  8012
  74  8012              ;SET DEFAULT PLAYER POSITION AND DIRECTION
  75  8012              ; 0=north, 1=west, 2=south, 3=east
  76  8012 3E 02                      ld a,2            ;set default to be south
  77  8014 32 08 FA                   ld (player_dir),a
  78  8017
  79  8017                            ;make sure our exit door is closed
  80  8017 AF                         xor a                 ;reg a=0
  81  8018 32 2A FA                   ld (show_exit),a
  82  801B                            ;make sure our switch is up = 0 = not pulled
  83  801B 32 2B FA                   ld (switch_pulled),a
  84  801E
  85  801E              ;remember to set maze_highbyte for current maze
  86  801E
  87  801E              ;start on maze map 0
  88  801E              a_map:
  89  801E 3E 02                      ld a,2
  90  8020 CD CE C7                   call set_map      ;set our map
  91  8023
  92  8023              ;              ld h,$71          ;set at maze 1 bottom maze
  93  8023 2E 01                      ld l,01              ;top left of maze
  94  8025
  95  8025 22 00 FA                   ld (player_pos),hl
  96  8028
  97  8028              main_loop:
  98  8028
  99  8028
 100  8028              ;set border to black - the beep sound makes it red so cant use this :(
 101  8028                         ;   ld c,254
 102  8028                          ;  ld a,39  ;black
 103  8028                          ;  ld a,64
 104  8028                          ;  out (c),a
 105  8028              ;0=red
 106  8028              ;32=red
 107  8028              ;34 purple
 108  8028              ;64 = red
 109  8028              ;254 = off white
 110  8028              ;244 cyan
 111  8028              ;234 purple
 112  8028              ;224 red
 113  8028              ;214 whitish
 114  8028              ;204 cyan
 115  8028              ;203 purple
 116  8028
 117  8028              ;set CPU Speed
 118  8028                            ;set CPU Speed Mhz
 119  8028                            ;0 = 3.5
 120  8028                            ;1 = 7
 121  8028                            ;2 = 14
 122  8028                            ;3 = 28
 123  8028 ED 91 07 01                nextreg 7,1
 124  802C
 125  802C                            ;put standard printing back to black text & white paper
 126  802C                          ;  ld a,98
 127  802C                          ;  ld (att),a
 128  802C
 129  802C CD 88 81                   call clear_char_screen    ;clear screen @c000
 130  802F
 131  802F CD BE 8D                   call get_distance ; get distance we can see
 132  8032                                              ; and save depth we can see
 133  8032                            ; load de is done when getting the distance above
 134  8032                            ; we need de to hold the jump value in the maze direction
 135  8032                            ; we are looking
 136  8032
 137  8032 CD 92 8F                   call draw_left_side   ; start drawing the left side of the maze
 138  8035
 139  8035                            ;we need to repopulate var furthest_point
 140  8035
 141  8035 CD BE 8D                   call get_distance     ; get distance we can see
 142  8038                                                  ; and set de accordingly
 143  8038                                                  ; and save depth we can see
 144  8038
 145  8038 CD AB 9B                   call draw_right_side  ; start drawing the right side of the maze
 146  803B
 147  803B CD 35 97                   call draw_front_view  ; draw wall in front of player
 148  803E
 149  803E                            ;check if we are at an end wall. If so, draw walls left
 150  803E                            ;and right to simulate the long outside edge wall
 151  803E
 152  803E CD C1 97                   call draw_side_walls
 153  8041
 154  8041                            ;draw screen at mem location 0000
 155  8041                            ;my print used to print screen @c000 to 16384 inc udg's
 156  8041
 157  8041 CD B9 8C                   call my_print         ;copy to screen from c000
 158  8044
 159  8044                            ;we need to copy the colours to an alternate memory screen then copy them back to the main screen
 160  8044                            ;we do this because we use the alternate colour screen when we transition between levels
 161  8044
 162  8044 CD 43 99                  call draw_colours     ;colourise the display but store at address 'attr_screen'
 163  8047
 164  8047 CD 3D C7                   call copy_colours     ;copy colour map to screen
 165  804A
 166  804A                            ;make sure we point to our character set
 167  804A 21 ED C6                   ld hl,charset_1-256
 168  804D 22 61 8C                   ld (base),hl
 169  8050 CD 0C 8D                   call compass          ; draw compass
 170  8053
 171  8053              ;------------------------------------------------------------------------
 172  8053                            ;see if we need to draw the door or switch
 173  8053 3E 01            ld a,1
 174  8055 32 2B FA         ld (switch_pulled),a
 175  8058
 176  8058 CD F7 8E                   call draw_door        ;see if we need to draw a door
 177  805B CD 4A 8F                   call draw_switch     ;see if we need to draw a switch
 178  805E              ;----------------------------------------------------------------------
 179  805E              ;setup right hand side of the screen
 180  805E CD BE 9A                   call draw_screen_right
 181  8061
 182  8061                            ;do the walking sound
 183  8061 1E 0A        	          ld e,10		;10 for the walk sound
 184  8063 CD 6A C7                   call walk_sound
 185  8066
 186  8066                            ;now flip the screen into the visible screen
 187  8066 CD D3 81                   call FlipULABuffers_peter
 188  8069
 189  8069
 190  8069
 191  8069              ;set CPU Speed
 192  8069                            ;set CPU Speed Mhz
 193  8069                            ;0 = 3.5
 194  8069                            ;1 = 7
 195  8069                            ;2 = 14
 196  8069                            ;4 = 28
 197  8069 ED 91 07 00                nextreg 7,0
 198  806D
 199  806D              ;#######################################
 200  806D              ;now move based on keypress
 201  806D              ;#######################################
 202  806D
 203  806D              ;Now set our view direction based on keypress
 204  806D
 205  806D              ;c bit values: 1 = 0 fire
 206  806D               ;             2 = 5 right
 207  806D               ;             4 = 7 up (forward)
 208  806D               ;             8 = 6 down
 209  806D               ;            16 = 8 left
 210  806D
 211  806D
 212  806D              ;set the player direction based on keypress
 213  806D              ; 0=north, 1=west, 2=south, 3=east
 214  806D
 215  806D
 216  806D              ;######################################
 217  806D              ;speed of game set here
 218  806D              ;######################################
 219  806D
 220  806D CD 73 81                   call pause         ;slow down the game here
 221  8070
 222  8070              wait4key:
 223  8070 CD 80 C7                   call get_keys      ;keypress in C register
 224  8073 79                         ld a,c
 225  8074 B7                         or a               ;clear flags
 226  8075 CA 70 80                   jp z,wait4key      ;wait for a keypress b4 continuing
 227  8078
 228  8078                            ;check if its the map key and have we already pressed it
 229  8078 47                         ld b,a             ;save our key
 230  8079 3A 29 FA                   ld a,(map_show)    ;get our last pressed map key
 231  807C 90                         sub b              ;map key is 0 =1 in reg a
 232  807D                                               ;1= we are already showing the map, 0 says we are not
 233  807D 28 F1                      jr z,wait4key      ;zero flag set if map_show=1 so do nothing
 234  807F
 235  807F AF                         xor a               ;make reg a zero
 236  8080 32 29 FA                   ld (map_show),a
 237  8083 78                         ld a,b              ;now carry on :)
 238  8084
 239  8084 FE 20                      cp $20;16              ; 8 (right) pressed
 240  8086 CA DD 80                   jp z,plus
 241  8089
 242  8089 FE 01        key_x         cp 1;8               ;x pressed. (old) 8=6 (down) pressed
 243  808B C2 B5 80                   jp nz, comp_4      ;carry on if not pressed otherwise return to BASIC
 244  808E ED 91 43 0E                nextreg $43,$0E      ;turn off ulanext
 245  8092 ED 91 69 00                nextreg $69,0      ;turn off ula banking
 246  8096 ED 91 50 FF                NEXTREG $50,$FF
 247  809A ED 91 52 0A                NEXTREG $52,$0A
 248  809E 01 FD 7F                   ld bc,$7ffd
 249  80A1 3E FF                      ld a, $ff
 250  80A3 ED 79                      out (c),a
 251  80A5 21 5C 53                   ld hl, $535c          ;restore this sysvar
 252  80A8 36 00                      ld (hl),0
 253  80AA 21 67 5B                   ld hl, $5b67          ;restore this sysvar
 254  80AD 36 00                      ld (hl),0
 255  80AF FD 21 3A 5C                ld iy,$5c3a
 256  80B3
 257  80B3 FB                         ei
 258  80B4 C9                         ret                ;return to BASIC
 259  80B5
 260  80B5 FE 08        comp_4:       cp 8;4               ;7 (forward) pressed
 261  80B7 CA F8 80                   jp z,move_forward
 262  80BA
 263  80BA FE 04                      cp 4;2               ; 5 (left) pressed
 264  80BC CA EA 80                   jp z,minus
 265  80BF
 266  80BF                            ;0 was pressed or we never get here!
 267  80BF A8                         xor b             ;make b zero
 268  80C0 3A 29 FA                   ld a,(map_show)
 269  80C3 90 97                      sub b,a           ;exit if b=1 as we are already showing the map!
 270  80C5 C2 70 80                   jp nz,wait4key
 271  80C8 3C                         inc a             ;a=1 to show we pressed 6 to show the map
 272  80C9 32 29 FA                   ld (map_show),a   ;save it
 273  80CC E5                         push hl
 274  80CD
 275  80CD 32 29 FA                   ld (map_show),a   ;save that we have pressed 6 - reg a = 1
 276  80D0
 277  80D0 CD 4A 8B                   CALL DRAW_MAP
 278  80D3
 279  80D3 E1                         pop hl
 280  80D4
 281  80D4 C3 70 80                   jp wait4key
 282  80D7
 283  80D7 32 08 FA     go1:          ld (player_dir),a
 284  80DA C3 28 80                   jp main_loop      ;start again
 285  80DD
 286  80DD
 287  80DD              plus:
 288  80DD 3A 08 FA                   ld a,(player_dir)
 289  80E0 3C                         inc a
 290  80E1 FE 04                      cp 4          ;if its 4, make it 0 as it cant be >3
 291  80E3 C2 D7 80                   jp nz,go1     ;start game loop if its not 4
 292  80E6 97                         sub a         ;make it 0 (wraparound
 293  80E7 C3 D7 80                   jp go1
 294  80EA
 295  80EA 3A 08 FA     minus:        ld a,(player_dir)
 296  80ED 3D                         dec a
 297  80EE FE FF                      cp 255
 298  80F0 C2 D7 80                   jp nz,go1         ;continue game if not 0
 299  80F3 3E 03                      ld a,3            ;wraparound
 300  80F5 C3 D7 80                   jp go1
 301  80F8
 302  80F8
 303  80F8              ;how do i implement a less-than/greater-than test in assembly?
 304  80F8
 305  80F8              ;a: to compare stuff, simply do a cp, and if the zero flag is set,
 306  80F8              ;a and the argument were equal, else if the carry is set the argument was greater,
 307  80F8              ;and finally, if neither is set, then reg 'a' must be greater
 308  80F8              ;(cp does nothing to the registers, only the f (flag) register is changed).
 309  80F8
 310  80F8              move_forward:
 311  80F8
 312  80F8              ;----------------------------------------------------------------------------
 313  80F8              ;1st, check if we are trying to enter an open exit door
 314  80F8              ;so, is the door open?
 315  80F8
 316  80F8              ; door will always face NORTH.
 317  80F8              ; show door type = 0 = front, 1 = side
 318  80F8
 319  80F8                         ;  ld (show_exit),a
 320  80F8                           ;are we facing south?
 321  80F8 3A 08 FA                  ld a,(player_dir)
 322  80FB D6 02                     sub 2                  ;2 = south
 323  80FD 20 2C                     jr nz,cont_a           ;if not, just continue in the normal way
 324  80FF
 325  80FF 2A 00 FA                  ld hl,(player_pos)
 326  8102 11 10 00                  ld de, $0010           ; (+16) to go to next line in front of us - south
 327  8105 19                        add hl,de
 328  8106 7E                        ld a,(hl)
 329  8107 FE C0                     cp _me                 ;is it our DOOR block?
 330  8109 20 20                     jr nz,cont_a           ;if not, just continue in the normal way
 331  810B                           ;YES its a door - so exit through it - but only if we are looking south
 332  810B 3A 2B FA                  ld a,(switch_pulled)
 333  810E A7                        and a
 334  810F 28 1A                     jr z,cont_a            ;if not, just continue in the normal way
 335  8111              ;Door is in front of us AND open so lets exit!
 336  8111
 337  8111                         ; reset the switch pulled back to off position
 338  8111 AF                       xor a
 339  8112 32 2B FA                 ld (switch_pulled),a
 340  8115
 341  8115              ;reset switch sound variable
 342  8115 32 2E FA                 ld (switch_sound ),a
 343  8118
 344  8118              ;need to set the player start position now.  - MOVED TO EXIT_ANIM ROUTINE
 345  8118
 346  8118               ;           ld a,(cur_map)
 347  8118               ;           dec a               ;point to our next map
 348  8118               ;           call set_map      ;set our map
 349  8118               ;           ld l,01              ;top left of maze
 350  8118               ;           ld (player_pos),hl
 351  8118
 352  8118              ;draw exit animation
 353  8118                          ;we moved forward and overwrote the door so redraw it
 354  8118 ED 91 07 03              nextreg 7,3             ;set cpu speed to max
 355  811C
 356  811C CD 00 C6                 call exit_anim
 357  811F
 358  811F              ;**********************************************************************
 359  811F              ;GAME EXIT CHECK
 360  811F              ;check if we got past level 0 - if so exit to BASIC
 361  811F 3A 30 FA                 ld a,(game_exit)
 362  8122 FE 00                    cp 0
 363  8124 C8                       ret z
 364  8125              ;**********************************************************************
 365  8125
 366  8125                          ;now flip the screen into the visible screen
 367  8125 CD D3 81                 call FlipULABuffers_peter
 368  8128
 369  8128 C3 70 80                 jp wait4key             ;screen is already drawn so dont draw it again.
 370  812B              ;--------------------------------------------------------------------------------
 371  812B              cont_a:
 372  812B              ;1st, check if we are trying to flick the switch on
 373  812B              ;so, is the door open?
 374  812B
 375  812B              ; switch will always face NORTH.
 376  812B              ; show switch type = 0 = off, 1 = on
 377  812B
 378  812B                           ;are we facing south?
 379  812B 3A 08 FA                  ld a,(player_dir)
 380  812E D6 02                     sub 2                  ;2 = south
 381  8130 20 17                     jr nz,cont_b           ;if not, just continue in the normal way
 382  8132
 383  8132 2A 00 FA                  ld hl,(player_pos)
 384  8135 11 10 00                  ld de, $0010           ; (+16) to go to next line in front of us - south
 385  8138 19                        add hl,de
 386  8139 7E                        ld a,(hl)
 387  813A FE E0                     cp _ms                 ;is it our SWITCH block?
 388  813C 20 0B                     jr nz,cont_b           ;if not, just continue in the normal way
 389  813E                           ;YES its a switch - so mark it as switched on
 390  813E 3E 01                     ld a,1
 391  8140 32 2B FA                  ld (switch_pulled),a
 392  8143
 393  8143              ;draw switch
 394  8143 CD 4A 8F                 call draw_switch      ;draw our switch
 395  8146 C3 28 80                 jp main_loop          ;jump to our next level
 396  8149              ;--------------------------------------------------------------------------------
 397  8149
 398  8149 3A 02 FA     cont_b:       ld a,(maxview)         ;if our maximum view depth = 0 ie we are
 399  814C                                                  ;in front of a wall face
 400  814C                                                  ;then do nothing
 401  814C 3C                         inc a
 402  814D 3D                         dec a
 403  814E CA 70 80                   jp z,wait4key
 404  8151
 405  8151 CD D5 8E                   call load_walk        ; get walk forward value to add
 406  8154 2A 00 FA                   ld hl,(player_pos)    ;get our current position
 407  8157 7C                         ld a,h                ;save our current H value for comparing later
 408  8158 19                         add hl,de              ;move our position forward in our view
 409  8159
 410  8159 BC                         cp h              ;have we crossed 256 byte boundry?
 411  815A C2 28 80                   jp nz,main_loop   ;we have exited our boundry so dont
 412  815D                                              ;move our view anywhere.
 413  815D                            ;now test if l=0
 414  815D              ;              ld a,l
 415  815D 2C                         inc l
 416  815E 2D                         dec l             ;are we at position 0? Exit if yes and do nothing
 417  815F                            ;cp 0
 418  815F CA 28 80                   jp z,main_loop   ;we are at location 0 in the maze, so, again do nothing
 419  8162                                              ;and just exit so we stay at position 1
 420  8162
 421  8162              ;;;;;;;;;;#########################
 422  8162                            ;now check if l=255 ;
 423  8162              ;              cp 255                ;are we at the bottom edge of the maze
 424  8162              ;              jp z,main_loop
 425  8162
 426  8162                            ;we ARE at the bottom row so DO NOT MOVE FORWARD
 427  8162 22 00 FA                   ld (player_pos),hl
 428  8165 C3 28 80                   jp main_loop          ;continue to the game loop
 429  8168
 430  8168
 431  8168
 432  8168
 433  8168              ;we get here as we are not at the bottom of the maze.
 434  8168 FE 10        move_1:       cp 16                 ;are we at the top edge of the maze?
 435  816A D2 28 80                   jp nc,main_loop
 436  816D 22 00 FA                   ld (player_pos),hl    ;save our new position
 437  8170
 438  8170              ;we are at the TOP of the maze so dont saaveour addition to HL
 439  8170 C3 28 80                   jp main_loop          ;continue to the game loop
 440  8173
 441  8173              ;##########################################################################
 442  8173              ;Pause routine for slowing down the game
 443  8173
 444  8173 E5           pause:        push hl
 445  8174 C5                         push bc
 446  8175 06 01                      ld b,1           ;delay loop
 447  8177              loop19:       ;halt             ;no interrupts!
 448  8177 21 10 27                   ld hl,10000
 449  817A 2B           abc:          dec hl
 450  817B 7C                         ld a,h
 451  817C 3D                         dec a
 452  817D                            ;dec h
 453  817D 20 FB                      jr nz,abc
 454  817F 05                         dec b
 455  8180 C2 77 81                   jp nz,loop19
 456  8183 C1                         pop bc
 457  8184 E1                         pop hl
 458  8185 C9                         ret
 459  8186              ;##########################################################################
 460  8186
 461  8186              ;load other programs
 462  8186
 463  8186              ;for SJASMPLUS
 464  8186
 465  8186                  INCLUDE "1-rd3dmazeV6.asm"  ; init and maze itself
# file opened: src/1-rd3dmazeV6.asm
   1+ 8186
   2+ 8186              ;variables
   3+ 8186
   4+ 8186              chan_open: equ 5633
   5+ 8186              cl_line:   equ 3652 ; clear screen not changing print pos
   6+ 8186              print:     equ 8252 ; print text line
   7+ 8186              at         equ 22   ; the 'print 'at' directive
   8+ 8186              paper      equ $11  ; paper directive
   9+ 8186              ink        equ $10  ; ink directive
  10+ 8186              flash      equ $12  ; flash directive
  11+ 8186              bright     equ $13
  12+ 8186              over       equ $15
  13+ 8186              blue       equ $02
  14+ 8186              red        equ $00
  15+ 8186              magenta    equ $06
  16+ 8186              green      equ $80
  17+ 8186              cyan       equ $02
  18+ 8186              yellow     equ 26
  19+ 8186              white      equ 255
  20+ 8186              black      equ 253
  21+ 8186              ;rex_pos    equ 32904
  22+ 8186
  23+ 8186              udg_start  equ 63480+8 ;63488  ;= 1024 less than real address for the display printing routine
  24+ 8186
  25+ 8186
  26+ 8186              screen_add equ 16384
  27+ 8186              screen_atr equ screen_add + 6144
  28+ 8186              screen_bot equ 23659
  29+ 8186              screen_mem equ $c000   ;49152
  30+ 8186              df_cc      equ $5c84
  31+ 8186
  32+ 8186 00 C0        d_file   dw $c000    ;char display in memory at 49152
  33+ 8188
  34+ 8188
  35+ 8188              ;maze_highbyte           equ  $71  ;H value (of HL) of current maze being drawn
  36+ 8188              _hugewall               equ  $b8
  37+ 8188              _chequerboard           equ  $9f
  38+ 8188              _space                  equ  32
  39+ 8188              _bottomblack            equ  $a2
  40+ 8188              _topblack               equ  $a3
  41+ 8188              _topwhitebottomchequer  equ  $a1
  42+ 8188              _topchequerbottomwhite  equ  $a0
  43+ 8188              _topleftwhite           equ  39
  44+ 8188              _bottomleftwhite        equ  40
  45+ 8188              _toprightwhite          equ  41
  46+ 8188              _bottomrightwhite       equ  42
  47+ 8188              _black                  equ  $af
  48+ 8188              _topcorner1             equ  $b0  ;bottom corner left slope to righttop
  49+ 8188              _topcorner2             equ  $b1  ;left corner slope to right bottom from left
  50+ 8188              _topcorner3             equ  $b2  ;bottom corner slope to right top
  51+ 8188              _topcorner4             equ  $b3  ;top corner left slope to right bottom
  52+ 8188              _wall                   equ  $a4  ;wall pattern
  53+ 8188              _leftinnerwall          equ  $a5  ;diagonal brick pattern left
  54+ 8188              _topleft5               equ  $a9  ;next 4 are for far view on layer 5
  55+ 8188              _bottomleft5            equ  $ab  ;
  56+ 8188              _topright5              equ  $aa
  57+ 8188              _bottomright5           equ  $ac
  58+ 8188              _smallwall              equ  $b4  ;far away wall
  59+ 8188              _mediumwall             equ  $b5  ;middle wall
  60+ 8188              _mediumwall_1           equ  $b7  ;middle wall_1
  61+ 8188              _largewall              equ  $b6  ;close view wall
  62+ 8188              _layer5lefttop          equ  $9b  ;layer 5 top left chevron
  63+ 8188              _layer5leftbottom       equ  $9c  ;layer 5 bottom left chevron
  64+ 8188
  65+ 8188
  66+ 8188
  67+ 8188              ;*******  NO MORE CODE HERE PLEASE AS IT WILL SHIFT THE MEMORY UP ****************
  68+ 8188
  69+ 8188              ;################################################################
  70+ 8188              ; some routines here in the 1.5k before the maze data
  71+ 8188              ;################################################################
  72+ 8188
  73+ 8188              ;============================================
  74+ 8188              ;clear the character maze in memory
  75+ 8188              ;============================================
  76+ 8188
  77+ 8188              clear_char_screen:
  78+ 8188
  79+ 8188 21 00 C0             ld hl,$c000
  80+ 818B 01 16 03             ld bc,790;767
  81+ 818E 11 01 C0             ld de,$c001
  82+ 8191 36 20                ld (hl),32      ;space
  83+ 8193 ED B0                ldir
  84+ 8195 C9                   ret
  85+ 8196              ;################################################################
  86+ 8196              ;rom routine for cls of the 2 video pages
  87+ 8196              ;################################################################
  88+ 8196
  89+ 8196              clsULA:                 ;Clear Ula Buffer:
  90+ 8196 21 00 00         ld  hl,$0000
  91+ 8199 11 01 00         ld  de,$0001
  92+ 819C 01 00 18         ld  bc,$1800
  93+ 819F 75               ld  (hl),l
  94+ 81A0 ED B0            ldir
  95+ 81A2 36 F0            ld  (hl),240    ;black was $48    ; black paper, cyan ink
  96+ 81A4 01 FF 02         ld  bc,$02FF
  97+ 81A7 ED B0            ldir
  98+ 81A9 C9               ret
  99+ 81AA
 100+ 81AA              ; ******************************************************************************
 101+ 81AA              ; from Mike Daily
 102+ 81AA              ; Function: Read a next register
 103+ 81AA              ; Out: a = register to read
 104+ 81AA              ; Out: a = value in register
 105+ 81AA
 106+ 81AA              ; call with reg value in reg a
 107+ 81AA              ; ******************************************************************************
 108+ 81AA              readnextreg:
 109+ 81AA 01 3B 24             ld bc,$243b ; select NEXT register
 110+ 81AD ED 79                out (c),a
 111+ 81AF 04                   inc b ; $253b to access (read or write) value
 112+ 81B0 ED 78                in a,(c)
 113+ 81B2 C9                   ret
 114+ 81B3              ;#################################################################################
 115+ 81B3              FlipULABuffers:
 116+ 81B3                              ; Flip ULA/Alt UA screen (double buffer ULA screen)
 117+ 81B3
 118+ 81B3                  ; if A==14, then do NR_69=64 (display Bank7), if A==10: NR_69=0 (display Bank5)
 119+ 81B3
 120+ 81B3 3A D2 81                     ld      a,(ULABank)             ; Get screen to display this frame
 121+ 81B6 FE 0A                        cp      10
 122+ 81B8 28 07                        jr      z,@DisplayAltULA
 123+ 81BA
 124+ 81BA 3E 40                        ld      a,64                    ; set CURRENT screen to Alternate ULA (bit 6
 125+ 81BC 06 0A                        ld      b,10                    ; set target screen to ULA
 126+ 81BE C3 C4 81                     jp      @DisplayULA
 127+ 81C1
 128+ 81C1 06 0E        @DisplayAltULA: ld      b,14                    ; set target screen to Alternate ULA screen
 129+ 81C3 AF                           xor     a                       ; zero the a reg
 130+ 81C4 ED 92 69     @DisplayULA:    nextreg $69,a                   ; Select Timex/ULA screen to show
 131+ 81C7 78                           ld      a,b                     ; get bank to render to next frame
 132+ 81C8 32 D2 81                     ld      (ULABank),a             ; store it...
 133+ 81CB
 134+ 81CB              ; swap the ula bank we are writing out buffer screen to
 135+ 81CB              swap_bank:                          ;load bank 10 or 14 to location 0 to write to
 136+ 81CB 3A D2 81                     ld a,(ULABank)
 137+ 81CE ED 92 52                     nextreg $52,a       ;was $50
 138+ 81D1 C9                           ret
 139+ 81D2
 140+ 81D2 0A           ULABank         defb 10   ;holds current ULA screen in use
 141+ 81D3              ;#################################################################################
 142+ 81D3
 143+ 81D3
 144+ 81D3
 145+ 81D3              ;##################################################################################
 146+ 81D3              FlipULABuffers_peter:     ; Flip ULA/Alt ULA screen (double buffer ULA screen)
 147+ 81D3                                        ; from Peter Ped Helcmanovsky on the Next Team
 148+ 81D3
 149+ 81D3 3A D2 81         ld a,(ULABank)  ; Get screen to display this frame
 150+ 81D6
 151+ 81D6                  ; if A==14, then do NR_69=64 (display Bank7), if A==10: NR_69=0 (display Bank5)
 152+ 81D6                  ; its %0000'1110 vs %0000'1010 in binary, so extract bit2 and move it to bit6
 153+ 81D6
 154+ 81D6 E6 04            and %0000'0100  ; $04 from A=14, $00 from A=10
 155+ 81D8 ED 23            swapnib         ; bit6 set from bit2
 156+ 81DA ED 92 69         nextreg $69,a   ; Select Timex/ULA screen to show
 157+ 81DD
 158+ 81DD                  ; flip the drawing buffer mapped at $4000
 159+ 81DD 3A D2 81         ld a,(ULABank)
 160+ 81E0 EE 04            xor 10^14       ; alternate between 10 and 14
 161+ 81E2 32 D2 81         ld (ULABank),a
 162+ 81E5 ED 92 52         nextreg $52,a   ; map the new "backbuffer" to $4000 (for next drawing)
 163+ 81E8 C9               ret
 164+ 81E9
 165+ 81E9              ;##################################################################################
 166+ 81E9
 167+ 81E9
 168+ 81E9
 169+ 81E9              ;##################################################################
 170+ 81E9              ;print a line of text on screen
 171+ 81E9              ;##################################################################
 172+ 81E9
 173+ 81E9              ; enter with IX pointing to the message
 174+ 81E9
 175+ 81E9              ;message format    row,col,colour,"message",end char
 176+ 81E9
 177+ 81E9              print_message:  ;make sure we point to our character set
 178+ 81E9 DD 46 00                     ld b,(ix)           ;row
 179+ 81EC DD 23                        inc ix
 180+ 81EE DD 4E 00                     ld c,(ix)           ;column
 181+ 81F1 DD 23                        inc ix
 182+ 81F3 DD 7E 00                     ld a,(ix)           ;set attribute colour
 183+ 81F6 32 65 8C                     ld (att),a
 184+ 81F9
 185+ 81F9
 186+ 81F9 CD 47 8C                     call locate
 187+ 81FC DD 23                        inc ix              ;point to characters to print
 188+ 81FE 21 ED C6     mesg_rept:      ld hl,charset_1-256 ; point to our character set
 189+ 8201 22 61 8C                     ld (base),hl
 190+ 8204 DD 7E 00                     ld a,(ix)           ;load our character to print
 191+ 8207
 192+ 8207                              ;check if we are printing a UDG
 193+ 8207                              ;we are currently pointing at the ram char set
 194+ 8207 CB 7F                        bit 7,a                 ;are we printing udg's?
 195+ 8209                                                      ;if bit 7=0 then zero test = false
 196+ 8209 28 09                        jr z,no_udg             ;exit if theres no graphic to print
 197+ 820B D6 80                        sub $80                 ;point to the first character of udg's
 198+ 820D 11 00 FC                     ld de,_chars;           ;start of udg's in memory
 199+ 8210 ED 53 61 8C                  ld (base),de
 200+ 8214
 201+ 8214 FE 7F        no_udg:         cp 127               ;check flags to see if a=zero
 202+ 8216 C8                           ret z               ;quit when char = 0
 203+ 8217 F5                           push af
 204+ 8218 CD 69 8C                     call print1         ;print the message - auto increments the column
 205+ 821B F1                           pop af
 206+ 821C DD 23                        inc ix
 207+ 821E 20 DE                        jr nz,mesg_rept
 208+ 8220 C9                           ret
 209+ 8221
 210+ 8221              ;#################################################################
 211+ 8221
 212+ 8221
 213+ 8221
 214+ 8221
 215+ 8221              ;###############################################################
 216+ 8221              ;Message list
 217+ 8221              ;message format    row,col,colour,"message",end char
 218+ 8221
 219+ 8221 00 19 94 B0  message_border1:      db 0,25,148,$b0,$b1,$b0,$20,$b1,$b0,$b1,$7f
 219+ 8225 B1 B0 20 B1
 219+ 8229 B0 B1 7F
 220+ 822C 01 19 57 88  message_get:          db 1,25,87,$88,"G E T",$89,$7f
 220+ 8230 47 20 45 20
 220+ 8234 54 89 7F
 221+ 8237 02 19 57 88  message_out:          db 2,25,87,$88,"O U T",$89,$7F
 221+ 823B 4F 20 55 20
 221+ 823F 54 89 7F
 222+ 8242 03 19 94 B3  message_border4:      db 3,25,148,$b3,$b2,$b3,$20,$b2,$b3,$b2,$7f
 222+ 8246 B2 B3 20 B2
 222+ 824A B3 B2 7F
 223+ 824D 17 02 3C 20  message_closed:       db 23,2,60," Go flick the switch ",$7F
 223+ 8251 47 6F 20 66
 223+ 8255 6C 69 63 6B
 223+ 8259 20 74 68 65
 223+ 825D 20 73 77 69
 223+ 8261 74 63 68 20
 223+ 8265 7F
 224+ 8266 17 01 48 20  message_switchon:     db 23,1,72," The Door is now Open! ",$7F
 224+ 826A 54 68 65 20
 224+ 826E 44 6F 6F 72
 224+ 8272 20 69 73 20
 224+ 8276 6E 6F 77 20
 224+ 827A 4F 70 65 6E
 224+ 827E 21 20 7F
 225+ 8281 17 01 64 20  message_leave:        db 23,1,100," Woohoo! Time to leave ",$7F
 225+ 8285 57 6F 6F 68
 225+ 8289 6F 6F 21 20
 225+ 828D 54 69 6D 65
 225+ 8291 20 74 6F 20
 225+ 8295 6C 65 61 76
 225+ 8299 65 20 7F
 226+ 829C 0F 19 57 20  message_level         db 15,25,87," LEVEL ",$7f
 226+ 82A0 4C 45 56 45
 226+ 82A4 4C 20 7F
 227+ 82A7
 228+ 82A7
 229+ 82A7              ;##########################################################################
 230+ 82A7              ;setup ULANext palette data - code from Matt Davies early version of Ed.s
 231+ 82A7
 232+ 82A7              Setup_palette:
 233+ 82A7
 234+ 82A7 ED 91 43 01         nextreg $43,%00000001   ; Set ULANext palette ON
 235+ 82AB ED 91 40 00         nextreg $40,%00000000    ; set index to 0 which = start of palette
 236+ 82AF ED 91 42 01         nextreg $42,%00000001   ; Set 2 ink & 254 paper
 237+ 82B3
 238+ 82B3              ;poke in the pallete data
 239+ 82B3 21 C1 82             ld hl, .palette_data    ;get the start of .palette_data
 240+ 82B6 7E           .lp1    ld a, (hl)
 241+ 82B7 FE 01                cp $01                   ;99 is the end of the data
 242+ 82B9 C8                   ret z                   ;exit if a=99
 243+ 82BA ED 92 41             nextreg $41,a           ;this auto increments
 244+ 82BD 23                   inc hl
 245+ 82BE C3 B6 82             jp .lp1
 246+ 82C1
 247+ 82C1              .palette_data:
 248+ 82C1              ;ink colours - only first 16 which are standard spectrum colours
 249+ 82C1
 250+ 82C1 00 FF A0 36      db $0, $ff, $a0, $36, $4a, $cb, $1b, $f9, $df, $0, $7, $e0, $e7, $1f, $fc, $fe
 250+ 82C5 4A CB 1B F9
 250+ 82C9 DF 00 07 E0
 250+ 82CD E7 1F FC FE
 251+ 82D1 E1 00 00 24  	db $e1, $0, $0, $24, $24, $49, $92, $b6, $fe, $db, $96, $6e, $49, $25, $0, $0
 251+ 82D5 24 49 92 B6
 251+ 82D9 FE DB 96 6E
 251+ 82DD 49 25 00 00
 252+ 82E1 00 20 44 88  	db $0, $20, $44, $88, $ad, $f1, $fa, $fe, $f5, $ec, $c8, $84, $e8, $ec, $f4, $f8
 252+ 82E5 AD F1 FA FE
 252+ 82E9 F5 EC C8 84
 252+ 82ED E8 EC F4 F8
 253+ 82F1 FD DD 9D 59  	db $fd, $dd, $9d, $59, $31, $d, $9, $5, $5, $e, $13, $1b, $1f, $9f, $fb, $f3
 253+ 82F5 31 0D 09 05
 253+ 82F9 05 0E 13 1B
 253+ 82FD 1F 9F FB F3
 254+ 8301 C7 63 23 02  	db $c7, $63, $23, $2, $0, $21, $65, $86, $cb, $ca, $f2, $e9, $e4, $c4, $80, $40
 254+ 8305 00 21 65 86
 254+ 8309 CB CA F2 E9
 254+ 830D E4 C4 80 40
 255+ 8311 00 00 00 00  	db $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
 255+ 8315 00 00 00 00
 255+ 8319 00 00 00 00
 255+ 831D 00 00 00 00
 256+ 8321 00 00 00 00      db $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
 256+ 8325 00 00 00 00
 256+ 8329 00 00 00 00
 256+ 832D 00 00 00 00
 257+ 8331 00 00 00 00  	db $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
 257+ 8335 00 00 00 00
 257+ 8339 00 00 00 00
 257+ 833D 00 00
 258+ 833F
 259+ 833F 00 FF A0 36      db $0, $ff, $a0, $36, $4a, $cb, $1b, $f9, $df, $0, $7, $e0, $e7, $1f, $fc, $fe
 259+ 8343 4A CB 1B F9
 259+ 8347 DF 00 07 E0
 259+ 834B E7 1F FC FE
 260+ 834F 00 02 A0 36  	db $0, $2, $a0, $36, $4a, $cb, $1b, $f9, $df, $0, $7, $e0, $e7, $1f, $fc, $fe
 260+ 8353 4A CB 1B F9
 260+ 8357 DF 00 07 E0
 260+ 835B E7 1F FC FE
 261+ 835F E1 00 00 24  	db $e1, $0, $0, $24, $24, $49, $92, $b6, $fe, $db, $96, $6e, $49, $25, $0, $0
 261+ 8363 24 49 92 B6
 261+ 8367 FE DB 96 6E
 261+ 836B 49 25 00 00
 262+ 836F 00 20 44 88  	db $0, $20, $44, $88, $ad, $f1, $fa, $fe, $f5, $ec, $c8, $84, $e8, $ec, $f4, $f8
 262+ 8373 AD F1 FA FE
 262+ 8377 F5 EC C8 84
 262+ 837B E8 EC F4 F8
 263+ 837F FD DD 9D 59  	db $fd, $dd, $9d, $59, $31, $d, $9, $5, $5, $e, $13, $1b, $1f, $9f, $fb, $f3
 263+ 8383 31 0D 09 05
 263+ 8387 05 0E 13 1B
 263+ 838B 1F 9F FB F3
 264+ 838F C7 63 23 02  	db $c7, $63, $23, $2, $0, $21, $65, $86, $cb, $ca, $f2, $e9, $e4, $c4, $80, $40
 264+ 8393 00 21 65 86
 264+ 8397 CB CA F2 E9
 264+ 839B E4 C4 80 40
 265+ 839F
 266+ 839F              ;these are the red wall graduations - 6 colours
 267+ 839F C0 A0 80 60  	db $c0, $a0, $80, $60, $40, $20, $0, $0, $0, $0, $0, $7, $6, $4, $2, $0
 267+ 83A3 40 20 00 00
 267+ 83A7 00 00 00 07
 267+ 83AB 06 04 02 00
 268+ 83AF C0 A0 80 60  	db $c0, $a0, $80, $60, $40, $20, $ff, $ff, $ff, $ff, $0, $0, $0, $0, $ff, $01
 268+ 83B3 40 20 FF FF
 268+ 83B7 FF FF 00 00
 268+ 83BB 00 00 FF 01
 269+ 83BF
 270+ 83BF              palette_end:
 271+ 83BF              ;##################################################################################
 272+ 83BF
 273+ 83BF              draw_exit_door_closed:
 274+ 83BF                             ; exit_closed 20 lines of 17 chars
 275+ 83BF 06 14                        ld b,20
 276+ 83C1 21 2F 84                     ld hl,exit_closed
 277+ 83C4 C5           abcd:           push bc
 278+ 83C5 E5                           push hl
 279+ 83C6 E5 DD E1                     ld ix,hl        ;point to our data to print
 280+ 83C9 CD E9 81                     CALL print_message
 281+ 83CC E1                           pop hl
 282+ 83CD 11 11 00                     ld de,17
 283+ 83D0 19                           add hl,de
 284+ 83D1 E5 DD E1                     ld ix,hl
 285+ 83D4 C1                           pop bc
 286+ 83D5 10 ED                        djnz abcd
 286+ 83D7
 287+ 83D7              ;call the colouring routine
 288+ 83D7 CD 0B 84                     call colour_door
 289+ 83DA              ;print the middle bars again as we overote them above
 290+ 83DA DD 21 E9 83                  ld ix,over1
 291+ 83DE CD E9 81                     CALL print_message
 292+ 83E1 DD 21 FA 83                  ld ix,over2
 293+ 83E5 CD E9 81                     CALL print_message
 294+ 83E8 C9                           ret
 295+ 83E9
 296+ 83E9 09 06 86 80  over1:          db 9,6,134, $80,$81,$80,$81,$80,$81,$80,$81,$80,$81,$80,$81,$80,$7F
 296+ 83ED 81 80 81 80
 296+ 83F1 81 80 81 80
 296+ 83F5 81 80 81 80
 296+ 83F9 7F
 297+ 83FA 0A 06 84 82  over2:          db 10,6,132,$82,$83,$82,$83,$82,$83,$82,$83,$82,$83,$82,$83,$81,$7F
 297+ 83FE 83 82 83 82
 297+ 8402 83 82 83 82
 297+ 8406 83 82 83 81
 297+ 840A 7F
 298+ 840B
 299+ 840B
 300+ 840B              ;this routine below will be used by the right wall closed door drawing routine as well as now
 301+ 840B              ;now colour the bars white ink - this will overwrite the 2 dark bars at line 7 and 8 - will sort later
 302+ 840B 21 A8 58     colour_door:    ld hl,22696         ;start of bar bit at the top of the door
 303+ 840E 11 20 00                     ld de,32            ;to jump 1 line down
 304+ 8411 3E 09                        ld a,9              ;draw 9 characters across
 305+ 8413 32 2E 84                     ld (att_count),a
 306+ 8416 3E C7                        ld a,199
 307+ 8418 4F                           ld c,a              ;set colour to white ink, black paper
 308+ 8419 3E 10                        ld a,16             ;do 16 lines
 309+ 841B E5           rept_5:         push hl
 310+ 841C F5           rept_4:         push af
 311+ 841D 3A 2E 84                     ld a,(att_count)    ;9
 312+ 8420 47                           ld b,a
 313+ 8421 F1                           pop af
 314+ 8422 71           rept_3:         ld (hl),c           ;set the attribute colour
 315+ 8423 23                           inc hl
 316+ 8424 10 FC                        djnz rept_3
 317+ 8426 E1                           pop hl
 318+ 8427 19                           add hl,de           ;jump to next line below
 319+ 8428 E5                           push hl
 320+ 8429 3D                           dec a
 321+ 842A 20 F0                        jr nz,rept_4
 322+ 842C E1                           pop hl
 323+ 842D C9                           ret
 324+ 842E
 325+ 842E 09           att_count       db  9
 326+ 842F
 327+ 842F              ;###############################################################
 328+ 842F              ;door graphic
 329+ 842F              ;message format    row,col,colour,"message",end char (127 ($7f) )
 330+ 842F              exit_closed:    ;20 lines
 331+ 842F 03 06 88 80                  db 3,6,136, $80,$81,$80,$81,$80,$81,$80,$81,$80,$81,$80,$81,$80,$7F
 331+ 8433 81 80 81 80
 331+ 8437 81 80 81 80
 331+ 843B 81 80 81 80
 331+ 843F 7F
 332+ 8440 04 06 86 82                  db 4,6,134, $82,$83,$82,$83,$82,$83,$82,$83,$82,$83,$82,$83,$81,$7F
 332+ 8444 83 82 83 82
 332+ 8448 83 82 83 82
 332+ 844C 83 82 83 81
 332+ 8450 7F
 333+ 8451 05 06 84 80                  db 5,6,132, $80,$81,$84,$84,$84,$84,$84,$84,$84,$84,$84,$81,$80,$7F
 333+ 8455 81 84 84 84
 333+ 8459 84 84 84 84
 333+ 845D 84 84 81 80
 333+ 8461 7F
 334+ 8462 06 06 82 82                  db 6,6,130, $82,$83,$84,$84,$84,$84,$84,$84,$84,$84,$84,$83,$81,$7F
 334+ 8466 83 84 84 84
 334+ 846A 84 84 84 84
 334+ 846E 84 84 83 81
 334+ 8472 7F
 335+ 8473 07 06 80 80                  db 7,6,128, $80,$81,$84,$84,$84,$84,$84,$84,$84,$84,$84,$81,$80,$7F
 335+ 8477 81 84 84 84
 335+ 847B 84 84 84 84
 335+ 847F 84 84 81 80
 335+ 8483 7F
 336+ 8484 08 06 7E 82                  db 8,6,126, $82,$83,$84,$84,$84,$84,$84,$84,$84,$84,$84,$83,$81,$7F
 336+ 8488 83 84 84 84
 336+ 848C 84 84 84 84
 336+ 8490 84 84 83 81
 336+ 8494 7F
 337+ 8495 09 06 86 80                  db 9,6,134, $80,$81,$80,$81,$80,$81,$80,$81,$80,$81,$80,$81,$80,$7F
 337+ 8499 81 80 81 80
 337+ 849D 81 80 81 80
 337+ 84A1 81 80 81 80
 337+ 84A5 7F
 338+ 84A6 0A 06 84 82                  db 10,6,132,$82,$83,$82,$83,$82,$83,$82,$83,$82,$83,$82,$83,$81,$7F
 338+ 84AA 83 82 83 82
 338+ 84AE 83 82 83 82
 338+ 84B2 83 82 83 81
 338+ 84B6 7F
 339+ 84B7 0B 06 82 80                  db 11,6,130,$80,$81,$84,$84,$84,$84,$84,$84,$84,$84,$84,$81,$80,$7F
 339+ 84BB 81 84 84 84
 339+ 84BF 84 84 84 84
 339+ 84C3 84 84 81 80
 339+ 84C7 7F
 340+ 84C8 0C 06 80 82                  db 12,6,128,$82,$83,$84,$84,$84,$84,$84,$84,$84,$84,$84,$83,$81,$7F
 340+ 84CC 83 84 84 84
 340+ 84D0 84 84 84 84
 340+ 84D4 84 84 83 81
 340+ 84D8 7F
 341+ 84D9 0D 06 7E 80                  db 13,6,126,$80,$81,$84,$84,$84,$84,$84,$84,$84,$84,$84,$81,$80,$7F
 341+ 84DD 81 84 84 84
 341+ 84E1 84 84 84 84
 341+ 84E5 84 84 81 80
 341+ 84E9 7F
 342+ 84EA 0E 06 86 82                  db 14,6,134,$82,$83,$84,$84,$84,$84,$84,$84,$84,$84,$84,$83,$81,$7F
 342+ 84EE 83 84 84 84
 342+ 84F2 84 84 84 84
 342+ 84F6 84 84 83 81
 342+ 84FA 7F
 343+ 84FB 0F 06 84 80                  db 15,6,132,$80,$81,$84,$84,$84,$84,$84,$84,$84,$84,$84,$81,$80,$7F
 343+ 84FF 81 84 84 84
 343+ 8503 84 84 84 84
 343+ 8507 84 84 81 80
 343+ 850B 7F
 344+ 850C 10 06 82 82                  db 16,6,130,$82,$83,$84,$84,$84,$84,$84,$84,$84,$84,$84,$83,$81,$7F
 344+ 8510 83 84 84 84
 344+ 8514 84 84 84 84
 344+ 8518 84 84 83 81
 344+ 851C 7F
 345+ 851D 11 06 80 80                  db 17,6,128,$80,$81,$84,$84,$84,$84,$84,$84,$84,$84,$84,$81,$80,$7F
 345+ 8521 81 84 84 84
 345+ 8525 84 84 84 84
 345+ 8529 84 84 81 80
 345+ 852D 7F
 346+ 852E 12 06 7E 82                  db 18,6,126,$82,$83,$84,$84,$84,$84,$84,$84,$84,$84,$84,$83,$81,$7F
 346+ 8532 83 84 84 84
 346+ 8536 84 84 84 84
 346+ 853A 84 84 83 81
 346+ 853E 7F
 347+ 853F 13 06 88 80                  db 19,6,136,$80,$81,$84,$84,$84,$84,$84,$84,$84,$84,$84,$81,$80,$7F
 347+ 8543 81 84 84 84
 347+ 8547 84 84 84 84
 347+ 854B 84 84 81 80
 347+ 854F 7F
 348+ 8550 14 06 86 82                  db 20,6,134,$82,$83,$84,$84,$84,$84,$84,$84,$84,$84,$84,$83,$81,$7F
 348+ 8554 83 84 84 84
 348+ 8558 84 84 84 84
 348+ 855C 84 84 83 81
 348+ 8560 7F
 349+ 8561 15 06 84 80                  db 21,6,132,$80,$81,$80,$81,$80,$81,$80,$81,$80,$81,$80,$81,$80,$7F
 349+ 8565 81 80 81 80
 349+ 8569 81 80 81 80
 349+ 856D 81 80 81 80
 349+ 8571 7F
 350+ 8572 16 06 82 82                  db 22,6,130,$82,$83,$82,$83,$82,$83,$82,$83,$82,$83,$82,$83,$81,$7F
 350+ 8576 83 82 83 82
 350+ 857A 83 82 83 82
 350+ 857E 83 82 83 81
 350+ 8582 7F
 351+ 8583              ;------------------------------------------------------------------------------------
 352+ 8583              draw_exit_door_open:
 353+ 8583                             ; exit_closed 20 lines of 17 chars
 354+ 8583 06 14                        ld b,20
 355+ 8585 21 AF 85                     ld hl,exit_open
 356+ 8588 C5           abcde:          push bc
 357+ 8589 E5                           push hl
 358+ 858A E5 DD E1                     ld ix,hl        ;point to our data to print
 359+ 858D CD E9 81                     CALL print_message
 360+ 8590 E1                           pop hl
 361+ 8591 11 11 00                     ld de,17
 362+ 8594 19                           add hl,de
 363+ 8595 E5 DD E1                     ld ix,hl
 364+ 8598 C1                           pop bc
 365+ 8599 10 ED                        djnz abcde
 366+ 859B
 367+ 859B              ;now colour the attributes in the middle of the door to black paper, white text
 368+ 859B                              ;do white colour bars first
 369+ 859B 21 C9 58                     ld hl,22749-32+5+7     ;start of bar bit at the top of the door
 370+ 859E 11 20 00                     ld de,32            ;to jump 1 line down after each print
 371+ 85A1 3E 07                        ld a,7              ;draw 1 attribute across
 372+ 85A3 32 2E 84                     ld (att_count),a
 373+ 85A6 3E A5                        ld a,165           ; colour to print (199=white)
 374+ 85A8 4F                           ld c,a              ;set colour to white ink, black paper
 375+ 85A9 3E 0E                        ld a,14             ;do 15 lines
 376+ 85AB CD 1B 84                     call rept_5         ;colour our door correctly
 377+ 85AE C9                           ret
 378+ 85AF
 379+ 85AF              exit_open:    ;20 lines
 380+ 85AF 03 06 BF B1                  db 3,6,191, $b1,$af,$af,$af,$af,$af,$af,$af,$af,$af,$af,$af,$b0,$7F
 380+ 85B3 AF AF AF AF
 380+ 85B7 AF AF AF AF
 380+ 85BB AF AF AF B0
 380+ 85BF 7F
 381+ 85C0 04 06 BF 20                  db 4,6,191, $20,$b1,$af,$af,$af,$af,$af,$af,$af,$af,$af,$b0,$20,$7F
 381+ 85C4 B1 AF AF AF
 381+ 85C8 AF AF AF AF
 381+ 85CC AF AF B0 20
 381+ 85D0 7F
 382+ 85D1 05 06 BF 20                  db 5,6,191, $20,$20,$b1,$af,$af,$af,$af,$af,$af,$af,$b0,$20,$20,$7F
 382+ 85D5 20 B1 AF AF
 382+ 85D9 AF AF AF AF
 382+ 85DD AF B0 20 20
 382+ 85E1 7F
 383+ 85E2 06 06 BE 20                  db 6,6,190, $20,$20,$20,$f1,$f2,$f1,$f2,$f1,$f2,$f1,$20,$20,$20,$7F
 383+ 85E6 20 20 F1 F2
 383+ 85EA F1 F2 F1 F2
 383+ 85EE F1 20 20 20
 383+ 85F2 7F
 384+ 85F3 07 06 BE 20                  db 7,6,190, $20,$20,$20,$f2,$f1,$f2,$f1,$f2,$f1,$f2,$20,$20,$20,$7F
 384+ 85F7 20 20 F2 F1
 384+ 85FB F2 F1 F2 F1
 384+ 85FF F2 20 20 20
 384+ 8603 7F
 385+ 8604 08 06 BE 20                  db 8,6,190, $20,$20,$20,$f1,$f2,$f1,$f2,$f1,$f2,$f1,$20,$20,$20,$7F
 385+ 8608 20 20 F1 F2
 385+ 860C F1 F2 F1 F2
 385+ 8610 F1 20 20 20
 385+ 8614 7F
 386+ 8615 09 06 BE 20                  db 9,6,190, $20,$20,$20,$f2,$f1,$f2,$f1,$f2,$f1,$f2,$20,$20,$20,$7F
 386+ 8619 20 20 F2 F1
 386+ 861D F2 F1 F2 F1
 386+ 8621 F2 20 20 20
 386+ 8625 7F
 387+ 8626 0A 06 BE 20                  db 10,6,190,$20,$20,$20,$f1,$f2,$f1,$f2,$f1,$f2,$f1,$20,$20,$20,$7F
 387+ 862A 20 20 F1 F2
 387+ 862E F1 F2 F1 F2
 387+ 8632 F1 20 20 20
 387+ 8636 7F
 388+ 8637 0B 06 BE 20                  db 11,6,190,$20,$20,$20,$f2,$f1,$f2,$f1,$f2,$f1,$f2,$20,$20,$20,$7F
 388+ 863B 20 20 F2 F1
 388+ 863F F2 F1 F2 F1
 388+ 8643 F2 20 20 20
 388+ 8647 7F
 389+ 8648 0C 06 BE 20                  db 12,6,190,$20,$20,$20,$f1,$f2,$f1,$f2,$f1,$f2,$f1,$20,$20,$20,$7F
 389+ 864C 20 20 F1 F2
 389+ 8650 F1 F2 F1 F2
 389+ 8654 F1 20 20 20
 389+ 8658 7F
 390+ 8659 0D 06 BE 20                  db 13,6,190,$20,$20,$20,$f2,$f1,$f2,$f1,$f2,$f1,$f2,$20,$20,$20,$7F
 390+ 865D 20 20 F2 F1
 390+ 8661 F2 F1 F2 F1
 390+ 8665 F2 20 20 20
 390+ 8669 7F
 391+ 866A 0E 06 BE 20                  db 14,6,190,$20,$20,$20,$f1,$f2,$f1,$f2,$f1,$f2,$f1,$20,$20,$20,$7F
 391+ 866E 20 20 F1 F2
 391+ 8672 F1 F2 F1 F2
 391+ 8676 F1 20 20 20
 391+ 867A 7F
 392+ 867B 0F 06 BE 20                  db 15,6,190,$20,$20,$20,$f2,$f1,$f2,$f1,$f2,$f1,$f2,$20,$20,$20,$7F
 392+ 867F 20 20 F2 F1
 392+ 8683 F2 F1 F2 F1
 392+ 8687 F2 20 20 20
 392+ 868B 7F
 393+ 868C 10 06 BE 20                  db 16,6,190,$20,$20,$20,$f1,$f2,$f1,$f2,$f1,$f2,$f1,$20,$20,$20,$7F
 393+ 8690 20 20 F1 F2
 393+ 8694 F1 F2 F1 F2
 393+ 8698 F1 20 20 20
 393+ 869C 7F
 394+ 869D 11 06 BE 20                  db 17,6,190,$20,$20,$20,$f2,$f1,$f2,$f1,$f2,$f1,$f2,$20,$20,$20,$7F
 394+ 86A1 20 20 F2 F1
 394+ 86A5 F2 F1 F2 F1
 394+ 86A9 F2 20 20 20
 394+ 86AD 7F
 395+ 86AE 12 06 BE 20                  db 18,6,190,$20,$20,$20,$f1,$f2,$f1,$f2,$f1,$f2,$f1,$20,$20,$20,$7F
 395+ 86B2 20 20 F1 F2
 395+ 86B6 F1 F2 F1 F2
 395+ 86BA F1 20 20 20
 395+ 86BE 7F
 396+ 86BF 13 06 BE 20                  db 19,6,190,$20,$20,$20,$f2,$f1,$f2,$f1,$f2,$f1,$f2,$20,$20,$20,$7F
 396+ 86C3 20 20 F2 F1
 396+ 86C7 F2 F1 F2 F1
 396+ 86CB F2 20 20 20
 396+ 86CF 7F
 397+ 86D0 14 06 BF 20                  db 20,6,191,$20,$20,$b2,$af,$af,$af,$af,$af,$af,$af,$b3,$20,$20,$7F
 397+ 86D4 20 B2 AF AF
 397+ 86D8 AF AF AF AF
 397+ 86DC AF B3 20 20
 397+ 86E0 7F
 398+ 86E1 15 06 BF 20                  db 21,6,191,$20,$b2,$af,$af,$af,$af,$af,$af,$af,$af,$af,$b3,$20,$7F
 398+ 86E5 B2 AF AF AF
 398+ 86E9 AF AF AF AF
 398+ 86ED AF AF B3 20
 398+ 86F1 7F
 399+ 86F2 16 06 BF B2                  db 22,6,191,$b2,$af,$af,$af,$af,$af,$af,$af,$af,$af,$af,$af,$b3,$7F
 399+ 86F6 AF AF AF AF
 399+ 86FA AF AF AF AF
 399+ 86FE AF AF AF B3
 399+ 8702 7F
 400+ 8703
 401+ 8703              ;--------------------------------------------------------------------------------------
 402+ 8703              draw_door_right_closed:
 403+ 8703                             ; exit_closed 14 lines of 7 chars
 404+ 8703 06 0D                        ld b,13
 405+ 8705 21 80 87                     ld hl,right_door_closed
 406+ 8708 C5           abc_a:          push bc
 407+ 8709 E5                           push hl
 408+ 870A E5 DD E1                     ld ix,hl        ;point to our data to print
 409+ 870D CD E9 81                     CALL print_message
 410+ 8710 E1                           pop hl
 411+ 8711 11 07 00                     ld de,7
 412+ 8714 19                           add hl,de
 413+ 8715 E5 DD E1                     ld ix,hl
 414+ 8718 C1                           pop bc
 415+ 8719 10 ED                        djnz abc_a
 416+ 871B
 417+ 871B              ;draw top angled bit of the door on right wall
 418+ 871B DD 21 67 87                  ld ix,top_right_1        ;point to our data to print
 419+ 871F CD E9 81                     CALL print_message
 420+ 8722 DD 21 6C 87                  ld ix,top_right_2        ;point to our data to print
 421+ 8726 CD E9 81                     CALL print_message
 422+ 8729 DD 21 72 87                  ld ix,top_right_3        ;point to our data to print
 423+ 872D CD E9 81                     CALL print_message
 424+ 8730 DD 21 79 87                  ld ix,top_right_4        ;point to our data to print
 425+ 8734 CD E9 81                     CALL print_message
 426+ 8737
 427+ 8737              ;draw bottom angled bit of the door on right wall
 428+ 8737 DD 21 D4 87                  ld ix,bot_right_1        ;point to our data to print
 429+ 873B CD E9 81                     CALL print_message
 430+ 873E DD 21 DB 87                  ld ix,bot_right_2        ;point to our data to print
 431+ 8742 CD E9 81                     CALL print_message
 432+ 8745 DD 21 E2 87                  ld ix,bot_right_3        ;point to our data to print
 433+ 8749 CD E9 81                     CALL print_message
 434+ 874C DD 21 E8 87                  ld ix,bot_right_4        ;point to our data to print
 435+ 8750 CD E9 81                     CALL print_message
 436+ 8753
 437+ 8753              ;now colour the attributes correctly to look diagonal
 438+ 8753                              ;do white colour bars first
 439+ 8753 21 B6 58                     ld hl,22710         ;start of bar bit at the top of the door
 440+ 8756 11 20 00                     ld de,32            ;to jump 1 line down
 441+ 8759 3E 01                        ld a,1              ;draw 1 attribute across
 442+ 875B 32 2E 84                     ld (att_count),a
 443+ 875E 3E C7                        ld a,199
 444+ 8760 4F                           ld c,a              ;set colour to white ink, black paper
 445+ 8761 3E 0E                        ld a,14             ;do 16 lines
 446+ 8763                             ; push hl
 447+ 8763 CD 1B 84                     call rept_5         ;colour our door correctly
 448+ 8766 C9                           ret
 449+ 8767
 450+ 8767
 451+ 8767              ;top 2 parts of the door
 452+ 8767 02 17 88 D3  top_right_1:    db 2,23,136,         $d3,$7F
 452+ 876B 7F
 453+ 876C 03 16 88 D5  top_right_2:    db 3,22,136,     $d5,$80,$7F
 453+ 8770 80 7F
 454+ 8772 04 15 88 D3  top_right_3:    db 4,21,136, $d3,$83,$82,$7F
 454+ 8776 83 82 7F
 455+ 8779 05 15 88 80  top_right_4:    db 5,21,136, $80,$87,$80,$7F
 455+ 877D 87 80 7F
 456+ 8780              ;middle of the closed door
 457+ 8780              right_door_closed:      ;15 lines
 458+ 8780 06 15 82 82                  db 6,21,130, $82,$87,$82,$7F
 458+ 8784 87 82 7F
 459+ 8787 07 15 80 80                  db 7,21,128, $80,$87,$80,$7F
 459+ 878B 87 80 7F
 460+ 878E 08 15 7E 82                  db 8,21,126, $82,$87,$82,$7F
 460+ 8792 87 82 7F
 461+ 8795 09 15 88 80                  db 9,21,136, $80,$87,$80,$7F
 461+ 8799 87 80 7F
 462+ 879C 0A 15 86 82                  db 10,21,134,$82,$87,$82,$7F
 462+ 87A0 87 82 7F
 463+ 87A3 0B 15 84 80                  db 11,21,132,$80,$87,$80,$7F
 463+ 87A7 87 80 7F
 464+ 87AA 0C 15 82 82                  db 12,21,130,$82,$87,$82,$7F
 464+ 87AE 87 82 7F
 465+ 87B1 0D 15 80 80                  db 13,21,128,$80,$87,$80,$7F
 465+ 87B5 87 80 7F
 466+ 87B8 0E 15 7E 82                  db 14,21,126,$82,$87,$82,$7F
 466+ 87BC 87 82 7F
 467+ 87BF 0F 15 88 80                  db 15,21,136,$80,$87,$80,$7F
 467+ 87C3 87 80 7F
 468+ 87C6 10 15 86 82                  db 16,21,134,$82,$87,$82,$7F
 468+ 87CA 87 82 7F
 469+ 87CD 11 15 84 80                  db 17,21,132,$80,$87,$80,$7F
 469+ 87D1 87 80 7F
 470+ 87D4              ;                db 18,21,130,$82,$87,$82,$7F
 471+ 87D4              ;bottom 2 parts of the door
 472+ 87D4 12 15 80 80  bot_right_1:    db 18,21,128, $80,$87,$80,$7F
 472+ 87D8 87 80 7F
 473+ 87DB 13 15 80 D4  bot_right_2:    db 19,21,128, $d4,$83,$82,$7F
 473+ 87DF 83 82 7F
 474+ 87E2 14 16 80 D6  bot_right_3:    db 20,22,128,     $d6,$80,$7F
 474+ 87E6 80 7F
 475+ 87E8 15 17 80 D4  bot_right_4:    db 21,23,128,         $d4,$7F
 475+ 87EC 7F
 476+ 87ED
 477+ 87ED              ;--------------------------------------------------------------------
 478+ 87ED              draw_door_right_open:
 479+ 87ED                             ; exit_closed 14 lines of 7 chars
 480+ 87ED 06 0D                        ld b,13
 481+ 87EF 21 44 88                     ld hl,right_door_open
 482+ 87F2 C5           abc_b:          push bc
 483+ 87F3 E5                           push hl
 484+ 87F4 E5 DD E1                     ld ix,hl        ;point to our data to print
 485+ 87F7 CD E9 81                     CALL print_message
 486+ 87FA E1                           pop hl
 487+ 87FB 11 07 00                     ld de,7
 488+ 87FE 19                           add hl,de
 489+ 87FF E5 DD E1                     ld ix,hl
 490+ 8802 C1                           pop bc
 491+ 8803 10 ED                        djnz abc_b
 492+ 8805
 493+ 8805              ;draw top angled bit of the door on right wall
 494+ 8805 DD 21 30 88                  ld ix,top_right_op2        ;point to our data to print
 495+ 8809 CD E9 81                     CALL print_message
 496+ 880C DD 21 36 88                  ld ix,top_right_op3        ;point to our data to print
 497+ 8810 CD E9 81                     CALL print_message
 498+ 8813 DD 21 3D 88                  ld ix,top_right_op4        ;point to our data to print
 499+ 8817 CD E9 81                     CALL print_message
 500+ 881A
 501+ 881A              ;draw bottom angled bit of the door on right wall - basically, all spaces so floor colour is drawn
 502+ 881A DD 21 9F 88                  ld ix,bot_right_op1        ;point to our data to print
 503+ 881E CD E9 81                     CALL print_message
 504+ 8821 DD 21 A6 88                  ld ix,bot_right_op2        ;point to our data to print
 505+ 8825 CD E9 81                     CALL print_message
 506+ 8828 DD 21 AD 88                  ld ix,bot_right_op3        ;point to our data to print
 507+ 882C CD E9 81                     CALL print_message
 508+ 882F
 509+ 882F C9                           ret
 510+ 8830
 511+ 8830              ;top 2 parts of the door
 512+ 8830 03 16 C0 B0  top_right_op2:    db 3,22,192,     $b0,$7F,$7F;;$20,$7F
 512+ 8834 7F 7F
 513+ 8836 04 15 C0 B0  top_right_op3:    db 4,21,192, $b0,$20,$7F,$7F;$20,$7F
 513+ 883A 20 7F 7F
 514+ 883D 05 15 BC 20  top_right_op4:    db 5,21,188, $20,$20,$7F,$7F;$20,$7F
 514+ 8841 20 7F 7F
 515+ 8844              ;middle of the open door
 516+ 8844              right_door_open:      ;15 lines
 517+ 8844 06 15 BC 20                  db 6,21,188, $20,$20,$7F,$7F;$20,$7F
 517+ 8848 20 7F 7F
 518+ 884B 07 15 BC 20                  db 7,21,188, $20,$20,$7F,$7F;,$20,$7F
 518+ 884F 20 7F 7F
 519+ 8852 08 15 BC 20                  db 8,21,188, $20,$20,$7F,$7F;,$20,$7F
 519+ 8856 20 7F 7F
 520+ 8859 09 15 BC 20                  db 9,21,188, $20,$20,$7F,$7F;$20,$7F
 520+ 885D 20 7F 7F
 521+ 8860 0A 15 BC 20                  db 10,21,188,$20,$20,$7F,$7F;$20,$7F
 521+ 8864 20 7F 7F
 522+ 8867 0B 15 BC 20                  db 11,21,188,$20,$20,$7F,$7F;$20,$7F
 522+ 886B 20 7F 7F
 523+ 886E 0C 15 BC 20                  db 12,21,188,$20,$20,$7F,$7F;$20,$7F
 523+ 8872 20 7F 7F
 524+ 8875 0D 15 BC 20                  db 13,21,188,$20,$20,$7F,$7F;$20,$7F
 524+ 8879 20 7F 7F
 525+ 887C 0E 15 BC 20                  db 14,21,188,$20,$20,$7F,$7F;$20,$7F
 525+ 8880 20 7F 7F
 526+ 8883 0F 15 BC 20                  db 15,21,188,$20,$20,$7F,$7F;$20,$7F
 526+ 8887 20 7F 7F
 527+ 888A 10 15 BC 20                  db 16,21,188,$20,$20,$7F,$7F;$20,$7F
 527+ 888E 20 7F 7F
 528+ 8891 11 15 BC 20                  db 17,21,188,$20,$20,$7F,$7F;$20,$7F
 528+ 8895 20 7F 7F
 529+ 8898 12 15 BC 20                  db 18,21,188,$20,$20,$7F,$7F;$20,$7F
 529+ 889C 20 7F 7F
 530+ 889F
 531+ 889F              ;bottom 2 parts of the door
 532+ 889F 13 15 BC 20  bot_right_op1:    db 19,21,188, $20,$20,$7F,$7F;$20,$7F
 532+ 88A3 20 7F 7F
 533+ 88A6 14 15 62 20  bot_right_op2:    db 20,21,98, $20,$20,$7F,$7F;$20,$7F
 533+ 88AA 20 7F 7F
 534+ 88AD 15 16 62 20  bot_right_op3:    db 21,22,98,     $20,$7F,$7F;$20,$7F
 534+ 88B1 7F 7F
 535+ 88B3
 536+ 88B3              ;--------------------------------------------------------------------
 537+ 88B3              ;--------------------------------------------------------------------
 538+ 88B3              ;switch animation below - neds to be switched on
 539+ 88B3              ;--------------------------------------------------------------------
 540+ 88B3              ;--------------------------------------------------------------------
 541+ 88B3              ;switch_anim:
 542+ 88B3
 543+ 88B3              draw_switch_off:
 544+ 88B3                             ; exit_closed 13 lines of 5 chars
 545+ 88B3 06 0C                        ld b,12
 546+ 88B5 21 DF 88                     ld hl,switch_off_g      ;start of switch off graphic
 547+ 88B8 C5           abc_b1:          push bc
 548+ 88B9 E5                           push hl
 549+ 88BA E5 DD E1                     ld ix,hl                ;point to our data to print
 550+ 88BD CD E9 81                     CALL print_message
 551+ 88C0 E1                           pop hl
 552+ 88C1 11 07 00                     ld de,7                 ;each line is 9 chars long
 553+ 88C4 19                           add hl,de
 554+ 88C5 E5 DD E1                     ld ix,hl
 555+ 88C8 C1                           pop bc
 556+ 88C9 10 ED                        djnz abc_b1
 557+ 88CB
 558+ 88CB              ;now colour the attributes to show switch is in the OFF position - colour it blue
 559+ 88CB                              ;do white colour bars first
 560+ 88CB 21 0C 59                     ld hl,22764+32   ;start of bar bit at the top of the door
 561+ 88CE 11 20 00                     ld de,32            ;to jump 1 line down after each print
 562+ 88D1 3E 01                        ld a,1              ;draw 1 attribute across
 563+ 88D3 32 2E 84                     ld (att_count),a
 564+ 88D6 3E B8                        ld a,184            ; colour to print (199=white)
 565+ 88D8 4F                           ld c,a              ;set colour to white ink, black paper
 566+ 88D9 3E 04                        ld a,4             ;do 5 lines
 567+ 88DB CD 1B 84                     call rept_5         ;colour our door correctly
 568+ 88DE
 569+ 88DE C9                           ret
 570+ 88DF
 571+ 88DF              ;switch in off position
 572+ 88DF              switch_off_g:      ;13 lines
 573+ 88DF 06 0B 9E DE                  db 6,11,158, $de,$dd,$e1,$7F
 573+ 88E3 DD E1 7F
 574+ 88E6 07 0B 9E E0                  db 7,11,158, $e0," ",$e4,$7F
 574+ 88EA 20 E4 7F
 575+ 88ED 08 0B 9E E0                  db 8,11,158, $e0," ",$e4,$7F
 575+ 88F1 20 E4 7F
 576+ 88F4 09 0B 9E E0                  db 9,11,158, $e0," ",$e4,$7F
 576+ 88F8 20 E4 7F
 577+ 88FB 0A 0B 9E E0                  db 10,11,158,$e0," ",$e4,$7F
 577+ 88FF 20 E4 7F
 578+ 8902 0B 0B 9E E0                  db 11,11,158,$e0," ",$e4,$7F
 578+ 8906 20 E4 7F
 579+ 8909 0C 0B 9E E0                  db 12,11,158,$e0,"|",$e4,$7F
 579+ 890D 7C E4 7F
 580+ 8910 0D 0B 9E E0                  db 13,11,158,$e0,"|",$e4,$7F
 580+ 8914 7C E4 7F
 581+ 8917 0E 0B 9E E0                  db 14,11,158,$e0,"|",$e4,$7F
 581+ 891B 7C E4 7F
 582+ 891E 0F 0B 9E E0                  db 15,11,158,$e0,"|",$e4,$7F
 582+ 8922 7C E4 7F
 583+ 8925 10 0B 9E E0                  db 16,11,158,$e0," ",$e4,$7F
 583+ 8929 20 E4 7F
 584+ 892C 11 0B 9E DF                  db 17,11,158,$df,$e3,$e2,$7F
 584+ 8930 E3 E2 7F
 585+ 8933
 586+ 8933
 587+ 8933              ;--------------------------------------------------------------------
 588+ 8933
 589+ 8933              draw_switch_on:
 590+ 8933
 591+ 8933                             ; exit_closed 13 lines of 5 chars
 592+ 8933 06 0C                        ld b,12
 593+ 8935 21 6E 89                     ld hl,switch_on_g      ;start of switch off graphic
 594+ 8938 C5           abc_b2:         push bc
 595+ 8939 E5                           push hl
 596+ 893A
 597+ 893A E5 DD E1                     ld ix,hl                ;point to our data to print
 598+ 893D CD E9 81                     CALL print_message
 599+ 8940
 600+ 8940 E1                           pop hl
 601+ 8941 11 07 00                     ld de,7                 ;each line is 9 chars long
 602+ 8944 19                           add hl,de
 603+ 8945 E5 DD E1                     ld ix,hl
 604+ 8948 C1                           pop bc
 605+ 8949 10 ED                        djnz abc_b2
 606+ 894B
 607+ 894B              ;now colour the attributes to show switch is in the OFF position - colour it blue
 608+ 894B                              ;do white colour bars first
 609+ 894B 21 8C 59                     ld hl,22924;+32      ;start of bar bit at the top of the door
 610+ 894E 11 20 00                     ld de,32            ;to jump 1 line down after each print
 611+ 8951 3E 01                        ld a,1              ;draw 1 attribute across
 612+ 8953 32 2E 84                     ld (att_count),a
 613+ 8956 3E 82                        ld a,130            ; colour to print (199=white)
 614+ 8958 4F                           ld c,a              ;set colour to white ink, black paper
 615+ 8959 3E 04                        ld a,4             ;do 5 lines
 616+ 895B CD 1B 84                     call rept_5         ;colour our door correctly
 617+ 895E
 618+ 895E                              ;check if the switch has pulled - if yes, dont play the sound again!
 619+ 895E 3A 2E FA                     ld a,(switch_sound )
 620+ 8961 3D                           dec a               ;check if a = 0. Will be 255 if not zero
 621+ 8962 C8                           ret z
 622+ 8963                              ;do the switch on sound
 623+ 8963 1E 9B        	            ld e,155		;10 for the walk sound
 624+ 8965 CD 6A C7                     call walk_sound
 625+ 8968 AF                           xor a
 626+ 8969 3C                           inc a
 627+ 896A 32 2E FA                     ld (switch_sound),a
 628+ 896D C9                           ret
 629+ 896E
 630+ 896E              ;switch in off position
 631+ 896E              switch_on_g:      ;12 lines
 632+ 896E 06 0B 9E DE                  db 6,11,158, $de,$dd,$e1,$7F
 632+ 8972 DD E1 7F
 633+ 8975 07 0B 9E E0                  db 7,11,158, $e0," ",$e4,$7F
 633+ 8979 20 E4 7F
 634+ 897C 08 0B 9E E0                  db 8,11,158, $e0,"|",$e4,$7F
 634+ 8980 7C E4 7F
 635+ 8983 09 0B 9E E0                  db 9,11,158, $e0,"|",$e4,$7F
 635+ 8987 7C E4 7F
 636+ 898A 0A 0B 9E E0                  db 10,11,158,$e0,"|",$e4,$7F
 636+ 898E 7C E4 7F
 637+ 8991 0B 0B 9E E0                  db 11,11,158,$e0,"|",$e4,$7F
 637+ 8995 7C E4 7F
 638+ 8998 0C 0B 9E E0                  db 12,11,158,$e0," ",$e4,$7F
 638+ 899C 20 E4 7F
 639+ 899F 0D 0B 9E E0                  db 13,11,158,$e0," ",$e4,$7F
 639+ 89A3 20 E4 7F
 640+ 89A6 0E 0B 9E E0                  db 14,11,158,$e0," ",$e4,$7F
 640+ 89AA 20 E4 7F
 641+ 89AD 0F 0B 9E E0                  db 15,11,158,$e0," ",$e4,$7F
 641+ 89B1 20 E4 7F
 642+ 89B4 10 0B 9E E0                  db 16,11,158,$e0," ",$e4,$7F
 642+ 89B8 20 E4 7F
 643+ 89BB 11 0B 9E DF                  db 17,11,158,$df,$e3,$e2,$7F
 643+ 89BF E3 E2 7F
 644+ 89C2              ;-----------------------------------------------------------------------------------
 645+ 89C2
 646+ 89C2              draw_switch_right_off:
 647+ 89C2
 648+ 89C2                             ; exit_closed 14 lines of 7 chars
 649+ 89C2 06 06                        ld b,6
 650+ 89C4 21 41 8A                     ld hl,switch_right_off
 651+ 89C7 C5           abc_b3:         push bc
 652+ 89C8 E5                           push hl
 653+ 89C9 E5 DD E1                     ld ix,hl        ;point to our data to print
 654+ 89CC CD E9 81                     CALL print_message
 655+ 89CF E1                           pop hl
 656+ 89D0 11 07 00                     ld de,7         ;7 chars to read
 657+ 89D3 19                           add hl,de
 658+ 89D4 E5 DD E1                     ld ix,hl
 659+ 89D7 C1                           pop bc
 660+ 89D8 10 ED                        djnz abc_b3
 661+ 89DA
 662+ 89DA              ;draw top angled bit of the door on right wall
 663+ 89DA DD 21 26 8A                  ld ix,top_right_1a        ;point to our data to print
 664+ 89DE CD E9 81                     CALL print_message
 665+ 89E1 DD 21 2C 8A                  ld ix,top_right_2a        ;point to our data to print
 666+ 89E5 CD E9 81                     CALL print_message
 667+ 89E8 DD 21 33 8A                  ld ix,top_right_3a        ;point to our data to print
 668+ 89EC CD E9 81                     CALL print_message
 669+ 89EF DD 21 3A 8A                  ld ix,top_right_4a        ;point to our data to print
 670+ 89F3 CD E9 81                     CALL print_message
 671+ 89F6
 672+ 89F6              ;draw bottom angled bit of the door on right wall
 673+ 89F6 DD 21 6B 8A                  ld ix,bot_right_1a        ;point to our data to print
 674+ 89FA CD E9 81                     CALL print_message
 675+ 89FD DD 21 72 8A                  ld ix,bot_right_2a        ;point to our data to print
 676+ 8A01 CD E9 81                     CALL print_message
 677+ 8A04 DD 21 79 8A                  ld ix,bot_right_3a        ;point to our data to print
 678+ 8A08 CD E9 81                     CALL print_message
 679+ 8A0B DD 21 80 8A                  ld ix,bot_right_4a        ;point to our data to print
 680+ 8A0F CD E9 81                     CALL print_message
 681+ 8A12
 682+ 8A12              ;now colour the attributes correctly to look diagonal
 683+ 8A12                              ;do white colour bars first
 684+ 8A12 21 16 59                     ld hl,22710 +96       ;start of bar bit at the top of the door
 685+ 8A15 11 20 00                     ld de,32            ;to jump 1 line down
 686+ 8A18 3E 01                        ld a,1              ;draw 1 attribute across
 687+ 8A1A 32 2E 84                     ld (att_count),a
 688+ 8A1D 3E B8                        ld a,184            ;set colour of switxch
 689+ 8A1F 4F                           ld c,a              ;set colour to white ink, black paper
 690+ 8A20 3E 04                        ld a,4             ; # of lines to do
 691+ 8A22 CD 1B 84                     call rept_5         ;colour our door correctly
 692+ 8A25 C9                           ret
 693+ 8A26
 694+ 8A26
 695+ 8A26              ;top 2 parts of the switch
 696+ 8A26 05 16 9E E5  top_right_1a:    db 5,22,158,    $e5,$e7,$7F
 696+ 8A2A E7 7F
 697+ 8A2C 06 15 9E E5  top_right_2a:    db 6,21,158,$e5,$ea,$e8,$7F
 697+ 8A30 EA E8 7F
 698+ 8A33 07 15 9E E6  top_right_3a:    db 7,21,158,$e6,$e9,$e4,$7F
 698+ 8A37 E9 E4 7F
 699+ 8A3A 08 15 9E E0  top_right_4a:    db 8,21,158,$e0," ",$e4,$7F
 699+ 8A3E 20 E4 7F
 700+ 8A41              ;middle of the OFF switch
 701+ 8A41              switch_right_off:
 702+ 8A41 09 15 9E E0                  db 9,21,158, $e0," ",$e4,$7F
 702+ 8A45 20 E4 7F
 703+ 8A48 0A 15 9E E0                  db 10,21,158,$e0," ",$e4,$7F
 703+ 8A4C 20 E4 7F
 704+ 8A4F 0B 15 9E E0                  db 11,21,158,$e0," ",$e4,$7F
 704+ 8A53 20 E4 7F
 705+ 8A56 0C 15 9E E0                  db 12,21,158,$e0,"|",$e4,$7F
 705+ 8A5A 7C E4 7F
 706+ 8A5D 0D 15 9E E0                  db 13,21,158,$e0,"|",$e4,$7F
 706+ 8A61 7C E4 7F
 707+ 8A64 0E 15 9E E0                  db 14,21,158,$e0,"|",$e4,$7F
 707+ 8A68 7C E4 7F
 708+ 8A6B
 709+ 8A6B              ;bottom 2 parts of the switch
 710+ 8A6B 0F 15 9E E0  bot_right_1a:   db 15,21,158,$e0,"|",$e4,$7F
 710+ 8A6F 7C E4 7F
 711+ 8A72 10 15 9E EE  bot_right_2a:   db 16,21,158,$ee,$ef,$e4,$7F
 711+ 8A76 EF E4 7F
 712+ 8A79 11 15 9E EB  bot_right_3a:   db 17,21,158,$eb,$f0,$ed,$7F
 712+ 8A7D F0 ED 7F
 713+ 8A80 12 16 9E EB  bot_right_4a:   db 18,22,158,    $eb,$ec,$7F
 713+ 8A84 EC 7F
 714+ 8A86
 715+ 8A86              ;--------------------------------------------------------------------------------
 716+ 8A86
 717+ 8A86              draw_switch_right_on:
 718+ 8A86
 719+ 8A86 06 06                        ld b,6
 720+ 8A88 21 05 8B                     ld hl,switch_right_on
 721+ 8A8B C5           abc_b4:         push bc
 722+ 8A8C E5                           push hl
 723+ 8A8D E5 DD E1                     ld ix,hl        ;point to our data to print
 724+ 8A90 CD E9 81                     CALL print_message
 725+ 8A93              ;set border to flash
 726+ 8A93                         ;   ld c,254
 727+ 8A93                         ;   ld a,39       ;set a red border
 728+ 8A93                         ;   out (c),a
 729+ 8A93
 730+ 8A93 E1                           pop hl
 731+ 8A94 11 07 00                     ld de,7         ;7 chars to read
 732+ 8A97 19                           add hl,de
 733+ 8A98 E5 DD E1                     ld ix,hl
 734+ 8A9B C1                           pop bc
 735+ 8A9C 10 ED                        djnz abc_b4
 736+ 8A9E
 737+ 8A9E              ;draw top angled bit of the door on right wall
 738+ 8A9E DD 21 EA 8A                  ld ix,top_right_1b        ;point to our data to print
 739+ 8AA2 CD E9 81                     CALL print_message
 740+ 8AA5 DD 21 F0 8A                  ld ix,top_right_2b        ;point to our data to print
 741+ 8AA9 CD E9 81                     CALL print_message
 742+ 8AAC DD 21 F7 8A                  ld ix,top_right_3b        ;point to our data to print
 743+ 8AB0 CD E9 81                     CALL print_message
 744+ 8AB3 DD 21 FE 8A                  ld ix,top_right_4b        ;point to our data to print
 745+ 8AB7 CD E9 81                     CALL print_message
 746+ 8ABA
 747+ 8ABA              ;draw bottom angled bit of the door on right wall
 748+ 8ABA DD 21 2F 8B                  ld ix,bot_right_1b        ;point to our data to print
 749+ 8ABE CD E9 81                     CALL print_message
 750+ 8AC1 DD 21 36 8B                  ld ix,bot_right_2b        ;point to our data to print
 751+ 8AC5 CD E9 81                     CALL print_message
 752+ 8AC8 DD 21 3D 8B                  ld ix,bot_right_3b        ;point to our data to print
 753+ 8ACC CD E9 81                     CALL print_message
 754+ 8ACF DD 21 44 8B                  ld ix,bot_right_4b        ;point to our data to print
 755+ 8AD3 CD E9 81                     CALL print_message
 756+ 8AD6
 757+ 8AD6              ;now colour the attributes correctly to look diagonal
 758+ 8AD6                              ;do white colour bars first
 759+ 8AD6 21 96 59                     ld hl,22710 +96+96+32       ;start of bar bit at the top of the door
 760+ 8AD9 11 20 00                     ld de,32            ;to jump 1 line down
 761+ 8ADC 3E 01                        ld a,1              ;draw 1 attribute across
 762+ 8ADE 32 2E 84                     ld (att_count),a
 763+ 8AE1 3E 82                        ld a,130            ;set colour of switxch
 764+ 8AE3 4F                           ld c,a              ;set colour to white ink, black paper
 765+ 8AE4 3E 04                        ld a,4             ; # of lines to do
 766+ 8AE6 CD 1B 84                     call rept_5         ;colour our door correctly
 767+ 8AE9 C9                           ret
 768+ 8AEA
 769+ 8AEA
 770+ 8AEA              ;top 2 parts of the switch
 771+ 8AEA 05 16 9E E5  top_right_1b:    db 5,22,158,    $e5,$e7,$7F
 771+ 8AEE E7 7F
 772+ 8AF0 06 15 9E E5  top_right_2b:    db 6,21,158,$e5,$ea,$e8,$7F
 772+ 8AF4 EA E8 7F
 773+ 8AF7 07 15 9E E6  top_right_3b:    db 7,21,158,$e6,$e9,$e4,$7F
 773+ 8AFB E9 E4 7F
 774+ 8AFE 08 15 9E E0  top_right_4b:    db 8,21,158,$e0,"|",$e4,$7F
 774+ 8B02 7C E4 7F
 775+ 8B05              ;middle of the ON switch
 776+ 8B05              switch_right_on:
 777+ 8B05 09 15 9E E0                  db 9,21,158, $e0,"|",$e4,$7F
 777+ 8B09 7C E4 7F
 778+ 8B0C 0A 15 9E E0                  db 10,21,158,$e0,"|",$e4,$7F
 778+ 8B10 7C E4 7F
 779+ 8B13 0B 15 9E E0                  db 11,21,158,$e0,"|",$e4,$7F
 779+ 8B17 7C E4 7F
 780+ 8B1A 0C 15 9E E0                  db 12,21,158,$e0," ",$e4,$7F
 780+ 8B1E 20 E4 7F
 781+ 8B21 0D 15 9E E0                  db 13,21,158,$e0," ",$e4,$7F
 781+ 8B25 20 E4 7F
 782+ 8B28 0E 15 9E E0                  db 14,21,158,$e0," ",$e4,$7F
 782+ 8B2C 20 E4 7F
 783+ 8B2F
 784+ 8B2F              ;bottom 2 parts of the switch
 785+ 8B2F 0F 15 9E E0  bot_right_1b:   db 15,21,158,$e0," ",$e4,$7F
 785+ 8B33 20 E4 7F
 786+ 8B36 10 15 9E EE  bot_right_2b:   db 16,21,158,$ee,$ef,$e4,$7F
 786+ 8B3A EF E4 7F
 787+ 8B3D 11 15 9E EB  bot_right_3b:   db 17,21,158,$eb,$f0,$ed,$7F
 787+ 8B41 F0 ED 7F
 788+ 8B44 12 16 9E EB  bot_right_4b:   db 18,22,158,    $eb,$ec,$7F
 788+ 8B48 EC 7F
 789+ 8B4A
 790+ 8B4A
 791+ 8B4A
 792+ 8B4A
 793+ 8B4A
 794+ 8B4A
 795+ 8B4A
 796+ 8B4A
 797+ 8B4A
# file closed: src/1-rd3dmazeV6.asm
 466  8B4A                  INCLUDE "2-rd3dmazeV6.asm" ; draw maze on screen, player direction,
# file opened: src/2-rd3dmazeV6.asm
   1+ 8B4A
   2+ 8B4A              ;##############################################
   3+ 8B4A              ;Draw the current map on screen
   4+ 8B4A              ;##############################################
   5+ 8B4A
   6+ 8B4A                  ;    org $E000   ; 57344 - top 8k
   7+ 8B4A
   8+ 8B4A              ;max row=21, max column = 31
   9+ 8B4A
  10+ 8B4A              ;will need to change DF_CC position for sjasmplus
  11+ 8B4A              DRAW_MAP:
  12+ 8B4A
  13+ 8B4A                      ;set max speed!
  14+ 8B4A ED 91 07 03          nextreg 7,3
  15+ 8B4E
  16+ 8B4E                      ;turn off the buffering so we
  17+ 8B4E ED 91 52 0A          nextreg $52,10      ;page in the spectrum screen
  18+ 8B52                      ;now redraw our current screen in case we need to as we draw the map over the top
  19+ 8B52 CD 4F C6                 call redraw_screen
  20+ 8B55 CD 3D C7                 call copy_colours
  21+ 8B58 CD BE 9A                 call draw_screen_right
  22+ 8B5B 21 ED C6                 ld hl,charset_1-256
  23+ 8B5E 22 61 8C                 ld (base),hl
  24+ 8B61 CD 0C 8D                 call compass          ; draw compass
  25+ 8B64
  26+ 8B64
  27+ 8B64                      ;set our colours
  28+ 8B64 3E B2                ld a,178            ;red
  29+ 8B66 32 3D 99             ld (wallcol),a
  30+ 8B69
  31+ 8B69              ;first draw a top wall line
  32+ 8B69 3E 11                ld a,17          ;draw 16 wall chars
  33+ 8B6B 01 04 02             ld bc,$0204      ;print at 2,4;
  34+ 8B6E CD 17 8C             call topbotline
  35+ 8B71
  36+ 8B71              ;now draw the map data
  37+ 8B71 01 04 03             ld bc,$0304      ;set row and column to 2,4
  38+ 8B74 2A 23 FA             ld hl,(map_start)
  39+ 8B77 22 18 FA             ld (var7),hl   ;save it
  40+ 8B7A              rep1:
  41+ 8B7A C5                   push bc
  42+ 8B7B CD 47 8C             call locate
  43+ 8B7E C1                   pop bc           ;restore our counter
  44+ 8B7F C5                   push bc          ;resave it
  45+ 8B80
  46+ 8B80 CD C1 8B             call get_maze_data
  47+ 8B83 CD 69 8C             call print1      ;print character
  48+ 8B86 C1                   pop bc
  49+ 8B87 0C                   inc c
  50+ 8B88 79                   ld a,c
  51+ 8B89 D6 14                sub 20          ;just draw 16 characters (we start at loc 4)
  52+ 8B8B C2 7A 8B             jp nz,rep1
  53+ 8B8E
  54+ 8B8E              ;now draw a final wall at the end of the line
  55+ 8B8E C5                   push bc
  56+ 8B8F 11 00 F8             ld de,udg_start  ;point to udg chars
  57+ 8B92 ED 53 61 8C          ld (base),de
  58+ 8B96 CD 47 8C             call locate      ;set print position
  59+ 8B99 CD 4D 9A             call set_wall_col   ;set our wall colour
  60+ 8B9C 3A 3D 99             ld a,(wallcol)
  61+ 8B9F 32 65 8C             ld (att),a
  62+ 8BA2 3E B4                ld a,_smallwall  ;draw wall char
  63+ 8BA4 CD 69 8C             call print1
  64+ 8BA7 C1                   pop bc
  65+ 8BA8 78                   ld a,b
  66+ 8BA9 FE 12                cp 18            ;draw 18 lines (starting at line 2)
  67+ 8BAB 28 05                jr z,ret2        ;exit after 18 lines
  68+ 8BAD 04                   inc b
  69+ 8BAE 0E 04                ld c,4           ;start row from pos 4 again
  70+ 8BB0 18 C8                jr rep1          ;start again
  71+ 8BB2
  72+ 8BB2              ;now draw a bottom line wall
  73+ 8BB2 3E 11        ret2:   ld a,17          ;draw 16 wall chars
  74+ 8BB4 01 04 13             ld bc,$1304      ;print at 2,4;
  75+ 8BB7 CD 17 8C             call topbotline
  76+ 8BBA
  77+ 8BBA              ;put our char set back to normal!
  78+ 8BBA 21 ED C6             ld hl,charset_1-256
  79+ 8BBD 22 61 8C             ld (base),hl
  80+ 8BC0 C9                   ret
  81+ 8BC1
  82+ 8BC1              ;cycle through the maze drawing blocks, player, exit etc
  83+ 8BC1              get_maze_data:
  84+ 8BC1 2A 18 FA             ld hl,(var7)    ;get our current map position
  85+ 8BC4 3E 28                ld a,40         ;cyan paper, black ink
  86+ 8BC6 32 65 8C             ld (att),a
  87+ 8BC9
  88+ 8BC9              ;set charset to non udg
  89+ 8BC9 11 ED C7             ld de,charset_1
  90+ 8BCC 15                   dec d
  91+ 8BCD ED 53 61 8C          ld (base),de    ;set char set start for ptint1 routine
  92+ 8BD1 7E                   ld a,(hl)       ;get our character to print
  93+ 8BD2 23                   inc hl           ;jump to next maze location
  94+ 8BD3 22 18 FA             ld (var7),hl
  95+ 8BD6 67                   ld h,a          ;save reg a - we dont need reg h anymore
  96+ 8BD7
  97+ 8BD7              ;Now check if its a player, a wall or an Exit or switch,
  98+ 8BD7 ED 5B 00 FA          ld de,(player_pos)      ;get player location
  99+ 8BDB 2D                   dec l                   ;put back hl as we inc'd it earlier
 100+ 8BDC 7B                   ld a,e                  ;go back 1 position as we already incremented it
 101+ 8BDD BD                   cp l
 102+ 8BDE 7C                   ld a,h             ;restore reg a for further compares
 103+ 8BDF 20 02                jr nz,go_1          ;no match for a player
 104+ 8BE1 3E A6                ld a,$a6           ;set a to  our little man character which is a graphic
 105+ 8BE3 FE 20        go_1:   cp ' '
 106+ 8BE5 C8                   ret z
 107+ 8BE6
 108+ 8BE6              ;its a graphic character - assume its a wall no matter what
 109+ 8BE6 67                   ld h,a             ;save reg a
 110+ 8BE7 3E 0A                ld a,10             ;yellow paper, black ink
 111+ 8BE9 32 65 8C             ld (att),a         ;red ink, blue background
 112+ 8BEC 7C                   ld a,h
 113+ 8BED
 114+ 8BED
 115+ 8BED              ;Now check if its a player, a wall or an Exit or switch
 116+ 8BED 1E A6                ld e, $a6           ;our little man graphic
 117+ 8BEF BB                   cp e
 118+ 8BF0 28 1B                jr z,go_on          ;do next check
 119+ 8BF2
 120+ 8BF2              ;check for an exit....
 121+ 8BF2 1E C0                ld e,_me            ;exit char = 192
 122+ 8BF4 7C                   ld a,h
 123+ 8BF5 BB                   cp e               ;needs to be a compare so a is left intact
 124+ 8BF6 3E A8                ld a,$a8            ;load exit character
 125+ 8BF8 28 13                jr z,go_on
 126+ 8BFA              ;
 127+ 8BFA              ;a7 check for a switch...
 128+ 8BFA 1E E0                ld e,_ms           ;exit char = 192
 129+ 8BFC 7C                   ld a,h
 130+ 8BFD BB                   cp e               ;needs to be a compare so a is left intact
 131+ 8BFE 3E A7                ld a,$a7            ;load exit character
 132+ 8C00 28 0B                jr z,go_on
 133+ 8C02
 134+ 8C02              ;default to a wall....
 135+ 8C02              carry_on1:
 136+ 8C02 CD 4D 9A             call set_wall_col   ;set our wall colour
 137+ 8C05 3A 3D 99             ld a,(wallcol)
 138+ 8C08 32 65 8C             ld (att),a         ;red ink, blue background
 139+ 8C0B 3E B4                ld a,_smallwall         ;return wall char
 140+ 8C0D
 141+ 8C0D
 142+ 8C0D              go_on:
 143+ 8C0D D6 80                sub $80          ;subtract 128 to point to correct graphic char
 144+ 8C0F              ;set char set to udg's
 145+ 8C0F 11 00 FC             ld de,_chars;$fc00
 146+ 8C12 ED 53 61 8C          ld (base),de
 147+ 8C16 C9                   ret
 148+ 8C17
 149+ 8C17              topbotline:
 150+ 8C17              ;draws a single line of 16 wall chars
 151+ 8C17              ;set char set to udg's
 152+ 8C17 11 00 FC             ld de,$fc00             ;point to udg's
 153+ 8C1A ED 53 61 8C          ld (base),de
 154+ 8C1E
 155+ 8C1E F5           rep3:   push af
 156+ 8C1F CD 47 8C             call locate             ;set print position
 157+ 8C22              ;set wall colour. Print 1 uses whats stored in (att)
 158+ 8C22 CD 4D 9A             call set_wall_col   ;set our wall colour
 159+ 8C25 3A 3D 99             ld a,(wallcol)
 160+ 8C28 32 65 8C             ld (att),a
 161+ 8C2B 3E B4                ld a,_smallwall
 162+ 8C2D D6 80                sub $80
 163+ 8C2F C5                   push bc
 164+ 8C30 CD 69 8C             call print1      ;print the character
 165+ 8C33 C1                   pop bc
 166+ 8C34 0C                   inc c
 167+ 8C35 F1                   pop af
 168+ 8C36 3D                   dec a
 169+ 8C37 20 E5                jr nz,rep3        ;exit when a=0
 170+ 8C39
 171+ 8C39 ED 91 69 00          nextreg $69,0       ;turn off screen buffering so we write directly to the screen
 172+ 8C3D 3E 0E                ld a,14
 173+ 8C3F 32 D2 81             ld (ULABank),a    ;tell the flip ula routine which page is being viewed
 174+ 8C42                      ;set min speed!
 175+ 8C42 ED 91 07 00          nextreg 7,0
 176+ 8C46
 177+ 8C46 C9                   ret
 178+ 8C47
 179+ 8C47
 180+ 8C47              ;==================================================
 181+ 8C47              ;from advanced spectrum machine code book
 182+ 8C47              ;==================================================
 183+ 8C47
 184+ 8C47              ;locate routine for use with print routine
 185+ 8C47
 186+ 8C47              ;   entry: b=line  c=column
 187+ 8C47              ;   preserved = bc
 188+ 8C47              ;   on exit -   hl = display file address
 189+ 8C47              ;               de = attr address
 190+ 8C47              ;               a  = attr (b,c)
 191+ 8C47              ;   df_cc is altered
 192+ 8C47
 193+ 8C47
 194+ 8C47 78           locate: ld a,b
 195+ 8C48 E6 18                and $18
 196+ 8C4A 67                   ld h,a
 197+ 8C4B CB F4                set 6,h
 198+ 8C4D 0F                   rrca
 199+ 8C4E 0F                   rrca
 200+ 8C4F 0F                   rrca
 201+ 8C50 F6 58                or $58
 202+ 8C52 57                   ld d,a
 203+ 8C53 78                   ld a,b
 204+ 8C54 E6 07                and 7
 205+ 8C56 0F                   rrca
 206+ 8C57 0F                   rrca
 207+ 8C58 0F                   rrca
 208+ 8C59 81                   add a,c
 209+ 8C5A 6F                   ld l,a
 210+ 8C5B 5F                   ld e,a
 211+ 8C5C 1A                   ld a,(de)
 212+ 8C5D 22 84 5C             ld (df_cc),hl
 213+ 8C60 C9                   ret
 214+ 8C61
 215+ 8C61              ;here is the new print routine
 216+ 8C61
 217+ 8C61              ;   entry: a=char code to be printed
 218+ 8C61              ;   preserved = c
 219+ 8C61              ;   exit -  b=0
 220+ 8C61              ;           de = attribute address
 221+ 8C61
 222+ 8C61              ; variable base is initialised to 3c00h = normal spectrum character set
 223+ 8C61              ; att is place immediately before mask so that
 224+ 8C61              ; the two can be accessed with one ld instuction
 225+ 8C61
 226+ 8C61 00 3C        base    dw $3c00 ; start of speccy characer set
 227+ 8C63 00 40        dfcc    dw $4000 ;start of spectrum screen mem
 228+ 8C65              ;dfcc    dw $0000 ;start of spectrum screen mem slot 0
 229+ 8C65 38 00        att     dw $38
 230+ 8C67 00 00        mask    dw 0
 231+ 8C69
 232+ 8C69
 233+ 8C69
 234+ 8C69              print1: ; construct character data address
 235+ 8C69
 236+ 8C69
 237+ 8C69 6F                   ld l,a
 238+ 8C6A 26 00                ld h,0
 239+ 8C6C 29                   add hl,hl
 240+ 8C6D 29                   add hl,hl
 241+ 8C6E 29                   add hl,hl
 242+ 8C6F ED 5B 61 8C          ld de,(base)                ;char set data
 243+ 8C73 19                   add hl,de
 244+ 8C74
 245+ 8C74                      ; take display file address
 246+ 8C74 ED 5B 84 5C          ld de,(df_cc)
 247+ 8C78 06 08                ld b,8
 248+ 8C7A
 249+ 8C7A                      ; print character row by row
 250+ 8C7A 7E           nxtrow: ld a,(hl)
 251+ 8C7B 12                   ld (de),a
 252+ 8C7C 23                   inc hl
 253+ 8C7D 14                   inc d
 254+ 8C7E 10 FA                djnz nxtrow
 255+ 8C80
 256+ 8C80                      ; construct attribute address
 257+ 8C80 7A                   ld a,d
 258+ 8C81 0F                   rrca
 259+ 8C82 0F                   rrca
 260+ 8C83 0F                   rrca
 261+ 8C84 3D                   dec a
 262+ 8C85 E6 03                and 3
 263+ 8C87 F6 58                or $58
 264+ 8C89 57                   ld d,a
 265+ 8C8A 2A 65 8C             ld hl,(att)    ; h=mask, l=attribute
 266+ 8C8D
 267+ 8C8D                      ; take old attribute
 268+ 8C8D 1A                   ld a,(de)
 269+ 8C8E
 270+ 8C8E                      ; construct new one
 271+ 8C8E AD                   xor l
 272+ 8C8F A4                   and h
 273+ 8C90 AD                   xor l
 274+ 8C91
 275+ 8C91                      ; replace attribute
 276+ 8C91 12                   ld (de),a
 277+ 8C92
 278+ 8C92                      ; finally, set dfcc to next print position
 279+ 8C92 21 84 5C             ld hl,df_cc
 280+ 8C95 34                   inc (hl)
 281+ 8C96 C0                   ret nz
 282+ 8C97 23                   inc hl
 283+ 8C98 7E                   ld a,(hl)
 284+ 8C99 C6 08                add a,8
 285+ 8C9B 77                   ld (hl),a
 286+ 8C9C C9                   ret
 287+ 8C9D
 288+ 8C9D
 289+ 8C9D              ; print routine - print screen at c000 to 16384
 290+ 8C9D              ; uses locate routine
 291+ 8C9D
 292+ 8C9D              my_print_info:  ; set dfcc to line , column
 293+ 8C9D
 294+ 8C9D              ;1st, check if we are printing a udg
 295+ 8C9D              ;reg a holds our character to print. udg's are char $90 onwards
 296+ 8C9D
 297+ 8C9D              ; the carry will be set if the cp argument > than a
 298+ 8C9D
 299+ 8C9D
 300+ 8C9D              setbase:
 301+ 8C9D F5                   push af
 302+ 8C9E C5                   push bc
 303+ 8C9F E5                   push hl
 304+ 8CA0
 305+ 8CA0              ;point to our character set
 306+ 8CA0 21 ED C7             ld hl,charset_1
 307+ 8CA3 25                   dec h
 308+ 8CA4 22 61 8C             ld (base),hl
 309+ 8CA7
 310+ 8CA7                      ;we are now pointing at the rom char set
 311+ 8CA7 0A                   ld a,(bc)               ;get our char to print
 312+ 8CA8               ;       nop ;or a
 313+ 8CA8 CB 7F                bit 7,a                 ;are we printing udg's?
 314+ 8CAA                      ; bit 7=1 so zero =false
 315+ 8CAA 28 09                jr z,ret_1              ;exit if theres no graphic to print
 316+ 8CAC D6 80                sub $80                 ;point to the first character of udg's
 317+ 8CAE 01 00 F8             ld bc,udg_start         ;start of udg's in memory
 318+ 8CB1 ED 43 61 8C          ld (base),bc
 319+ 8CB5                      ;ld hl,(base)
 320+ 8CB5 E1           ret_1   pop hl
 321+ 8CB6 C1                   pop bc
 322+ 8CB7 F1                   pop af
 323+ 8CB8
 324+ 8CB8 C9                   ret
 325+ 8CB9
 326+ 8CB9              my_print:           ;bc=line,col
 327+ 8CB9 06 00        lp4:    ld b,0
 328+ 8CBB 0E 00                ld c,0
 329+ 8CBD CD 47 8C             call locate ; set print pos and attribute
 330+ 8CC0 97                   sub a       ;make reg a=0
 331+ 8CC1 32 0B 8D             ld (lc),a   ;line counter
 332+ 8CC4
 333+ 8CC4                      ; remember, print1 preserves the c register
 334+ 8CC4 01 FF BF             ld bc, $bfff ;c000  ; 1 less than display in memory
 335+ 8CC7 2E 00                ld l,0
 336+ 8CC9              lp3:
 337+ 8CC9
 338+ 8CC9 C5                   push bc
 339+ 8CCA E5                   push hl
 340+ 8CCB 03                   inc bc
 341+ 8CCC 0A                   ld a,(bc)
 342+ 8CCD CD 9D 8C             call setbase ; set char set
 343+ 8CD0 3E F0                ld a,240
 344+ 8CD2 32 65 8C             ld (att),a          ;set black ink and paper
 345+ 8CD5 0A                   ld a,(bc)           ;reload our character to print
 346+ 8CD6 2A 61 8C             ld hl,(base)
 347+ 8CD9
 348+ 8CD9              ;charset test
 349+ 8CD9 2A ED C7             ld hl,(charset_1)
 350+ 8CDC
 351+ 8CDC CD 69 8C             call print1  ; print char in a
 352+ 8CDF E1                   pop hl
 353+ 8CE0 C1                   pop bc
 354+ 8CE1
 355+ 8CE1 03                   inc bc
 356+ 8CE2 2C                   inc l
 357+ 8CE3 7D                   ld a,l
 358+ 8CE4 FE 19                cp 25       ; print 26 chars
 359+ 8CE6 C2 C9 8C             jp nz,lp3
 360+ 8CE9
 361+ 8CE9 C5                   push bc
 362+ 8CEA E1                   pop hl
 363+ 8CEB 16 00                ld d,0
 364+ 8CED 1E 08                ld e,8
 365+ 8CEF 19                   add hl,de
 366+ 8CF0
 367+ 8CF0 E5                   push hl
 368+ 8CF1 C1                   pop bc
 369+ 8CF2 2E 00                ld l,0       ;start at 0 for the next line
 370+ 8CF4 3A 0B 8D             ld a,(lc)
 371+ 8CF7 3C                   inc  a
 372+ 8CF8
 373+ 8CF8              ;we only draw the first 24 columns x 24 lines
 374+ 8CF8 FE 18                cp 24      ; x lines to print
 375+ 8CFA
 376+ 8CFA C8                   ret z
 377+ 8CFB
 378+ 8CFB              ; reset position to next line. locate can do attributes too
 379+ 8CFB D9                   exx
 380+ 8CFC E5                   push hl
 381+ 8CFD 32 0B 8D             ld (lc),a  ; save counter
 382+ 8D00 47                   ld b,a
 383+ 8D01 0E 00                ld c,0
 384+ 8D03 CD 47 8C             call locate
 385+ 8D06 E1                   pop hl
 386+ 8D07 D9                   exx
 387+ 8D08 C3 C9 8C             jp lp3
 388+ 8D0B
 389+ 8D0B
 390+ 8D0B 00           lc      db 0
 391+ 8D0C
 392+ 8D0C
 393+ 8D0C              ;============================================
 394+ 8D0C              ; draw player direction text on screen
 395+ 8D0C              ;===========================================
 396+ 8D0C
 397+ 8D0C              ; loop 7 times for 7 lines
 398+ 8D0C              ; start at column 14
 399+ 8D0C              ; print 7 characters
 400+ 8D0C
 401+ 8D0C              compass:
 402+ 8D0C              ;first colour in the background - 7 lines starting at 17,25
 403+ 8D0C              ;              ld b,17           ;row 21
 404+ 8D0C              ;              ld c,25           ;col 25
 405+ 8D0C
 406+ 8D0C              ;loc_1:        push bc
 407+ 8D0C              ;              call locate    ;set print position
 408+ 8D0C              ;              pop bc
 409+ 8D0C              ;              ;de holds the attribute position
 410+ 8D0C              ;              ld a,151          ;set colour
 411+ 8D0C              ;              call colour1
 412+ 8D0C              ;              ld a,23
 413+ 8D0C              ;              sub b
 414+ 8D0C              ;              inc b
 415+ 8D0C              ;              jr nz,loc_1
 416+ 8D0C              ;              jr draw_compass
 417+ 8D0C
 418+ 8D0C              ;colour1:      ld l,7
 419+ 8D0C              ;colour2:      ld (de),a
 420+ 8D0C              ;              inc de
 421+ 8D0C              ;              dec l
 422+ 8D0C              ;              ret z
 423+ 8D0C              ;              jr colour2
 424+ 8D0C
 425+ 8D0C              ;now draw the compass
 426+ 8D0C 06 17        draw_compass: ld b,23           ;row 21
 427+ 8D0E 0E 19                      ld c,25           ;col 25
 428+ 8D10
 429+ 8D10 C5                         push bc
 430+ 8D11 CD 3B 8D                   call print_pos    ;set print position
 431+ 8D14 C1                         pop bc
 432+ 8D15
 433+ 8D15              ; now print our characters
 434+ 8D15 11 82 8D                   ld de,c_dat-1       ;data start
 435+ 8D18 1A           loop1:        ld a,(de)
 436+ 8D19 FE 78                      cp 'x';120            ; = "x" data end
 437+ 8D1B CA 2D 8D                   jp z,nxt_line
 438+ 8D1E FE 46                      cp 'F';70             ; "F" finished so exit
 439+ 8D20 CA 46 8D                   jp z, do_exit
 440+ 8D23
 441+ 8D23 D5                         push de
 442+ 8D24 C5                         push bc
 443+ 8D25 CD 69 8C                   call print1       ; print the character
 444+ 8D28 C1                         pop bc
 445+ 8D29 D1                         pop de
 446+ 8D2A
 447+ 8D2A 1B                         dec de
 448+ 8D2B 18 EB                      jr loop1
 449+ 8D2D
 450+ 8D2D C5           nxt_line:     push bc
 451+ 8D2E D5                         push de
 452+ 8D2F 0E 19                      ld c,25
 453+ 8D31 05                         dec b
 454+ 8D32 CD 3B 8D                   call print_pos
 455+ 8D35 D1                         pop de
 456+ 8D36 C1                         pop bc
 457+ 8D37 1B                         dec de
 458+ 8D38 05                         dec b
 459+ 8D39 18 DD                      jr loop1
 460+ 8D3B
 461+ 8D3B              ; set print position
 462+ 8D3B C5           print_pos:    push bc
 463+ 8D3C CD 47 8C                   call locate
 464+ 8D3F 3E A5                      ld a,165          ;set ink and paper colour
 465+ 8D41 32 65 8C                   ld (att),a
 466+ 8D44 C1                         pop bc
 467+ 8D45 C9                         ret
 468+ 8D46
 469+ 8D46 CD 83 8D     do_exit:  call show_dir     ; highlight player direction
 470+ 8D49
 471+ 8D49 C9                         ret
 472+ 8D4A
 473+ 8D4A
 474+ 8D4A 46                   db "F"
 475+ 8D4B              ;        db "x       "
 476+ 8D4B 78 73 73 61          db "xssapmoC"
 476+ 8D4F 70 6D 6F 43
 477+ 8D53 78 20 20 20          db "x       "
 477+ 8D57 20 20 20 20
 478+ 8D5B 78 20 20 20          db "x   N   "
 478+ 8D5F 4E 20 20 20
 479+ 8D63 78 20 20 20          db "x   |   "
 479+ 8D67 7C 20 20 20
 480+ 8D6B 78 20 45 2D          db "x E-+-W "
 480+ 8D6F 2B 2D 57 20
 481+ 8D73 78 20 20 20          db "x   |   "
 481+ 8D77 7C 20 20 20
 482+ 8D7B 78 20 20 20          db "x   S   "
 482+ 8D7F 53 20 20 20
 483+ 8D83              c_dat:
 484+ 8D83
 485+ 8D83
 486+ 8D83              ;===========================================
 487+ 8D83              ; highlight player direction
 488+ 8D83              ;===========================================
 489+ 8D83
 490+ 8D83              ;l4085 holdsplayer view  direction
 491+ 8D83
 492+ 8D83              ;00= north, 01=west, 02=south, 03=east
 493+ 8D83
 494+ 8D83 3E A5        show_dir:     ld a,165;185             ;white txt, brown background
 495+ 8D85              ;now clear the settings to none
 496+ 8D85 21 FC 5A                   ld hl,23228+64       ;s
 497+ 8D88 77                         ld (hl),a
 498+ 8D89 21 BE 5A                   ld hl,23166+64       ;e
 499+ 8D8C 77                         ld (hl),a
 500+ 8D8D 21 BA 5A                   ld hl,23162+64       ;w
 501+ 8D90 77                         ld (hl),a
 502+ 8D91 21 7C 5A                   ld hl,23100+64       ;n
 503+ 8D94 77                         ld (hl),a
 504+ 8D95
 505+ 8D95
 506+ 8D95              ;now colour the direction indicator
 507+ 8D95
 508+ 8D95 3A 08 FA                   ld a,(player_dir)
 509+ 8D98 FE 00                      cp 0              ;n
 510+ 8D9A C2 A3 8D                   jp nz,c1
 511+ 8D9D 21 7C 5A                   ld hl,23100+64       ;n
 512+ 8DA0 C3 BA 8D                   jp poke_it
 513+ 8DA3 FE 01        c1:           cp 1              ;w
 514+ 8DA5 20 06                      jr nz,c2
 515+ 8DA7 21 BA 5A                   ld hl,23162+64       ;w
 516+ 8DAA C3 BA 8D                   jp poke_it
 517+ 8DAD FE 02        c2:           cp 2              ;s
 518+ 8DAF 20 06                      jr nz,c3
 519+ 8DB1 21 FC 5A                   ld hl,23228+64       ;s
 520+ 8DB4 C3 BA 8D                   jp poke_it
 521+ 8DB7              ;it must be east                ;e
 522+ 8DB7 21 BE 5A     c3            ld hl,23166+64       ;e
 523+ 8DBA
 524+ 8DBA 3E 96        poke_it:      ld a,150          ;cyan paper, black writing
 525+ 8DBC 77                         ld(hl),a
 526+ 8DBD C9           q1:           ret
 527+ 8DBE
# file closed: src/2-rd3dmazeV6.asm
 467  8DBE                  INCLUDE "3-rd3dmazeV6.asm" ; check walls in front of player
# file opened: src/3-rd3dmazeV6.asm
   1+ 8DBE
   2+ 8DBE
   3+ 8DBE              ;##################################################
   4+ 8DBE              ; Start to draw the maze in memory
   5+ 8DBE              ;##################################################
   6+ 8DBE
   7+ 8DBE              ;hl will hold the player location in the maze
   8+ 8DBE
   9+ 8DBE              ;now draw the maze position
  10+ 8DBE
  11+ 8DBE              ;1 get our location from player_pos 16 bit but only the low byte used
  12+ 8DBE              ;  since our maze is max 256 bytes.
  13+ 8DBE              ;2 get our direction from player_dir 0 - 3 only.
  14+ 8DBE              ;  0=north
  15+ 8DBE              ;  1=west
  16+ 8DBE              ;  2=south
  17+ 8DBE              ;  3=east
  18+ 8DBE              ;3 work out how far away the wall is in front of our view-
  19+ 8DBE              ;  if its greater or less that 6 blocks since thats the max depth
  20+ 8DBE              ;  we will draw on screen (6 blocks)
  21+ 8DBE              ;4 start drawing from the back to the front
  22+ 8DBE              ;  so everything is overwritten (separate routine).
  23+ 8DBE              ;
  24+ 8DBE
  25+ 8DBE
  26+ 8DBE              ;screen is built in memory from c000 (49152) using characters
  27+ 8DBE
  28+ 8DBE              get_distance:
  29+ 8DBE
  30+ 8DBE 2A 00 FA                   ld hl,(player_pos)    ;get player location
  31+ 8DC1
  32+ 8DC1 3A 08 FA                   ld a,(player_dir)     ; get player direction
  33+ 8DC4
  34+ 8DC4
  35+ 8DC4              ;00= north, 01=west, 02=south, 03=east
  36+ 8DC4
  37+ 8DC4              ;if 0 decrease by -16 n
  38+ 8DC4              ;if 1 decrease by -1  w
  39+ 8DC4              ;if 2 increase by +16 s
  40+ 8DC4              ;if 3 increase by +1  e
  41+ 8DC4
  42+ 8DC4              ;when checking distance, if you are looking south and your current location
  43+ 8DC4              ;is >240 then you are at the south wall.
  44+ 8DC4
  45+ 8DC4
  46+ 8DC4              ;if you are at the top of the maze facing north, and you current location
  47+ 8DC4              ; is <16 you are at the far north wall of the maze
  48+ 8DC4
  49+ 8DC4              ;for east amd west you can detect a wall is chr $80 except for 255 (bottom
  50+ 8DC4              ; right) as the next  right location is outside the maze.
  51+ 8DC4
  52+ 8DC4              ; find out how far away we are from a wall
  53+ 8DC4                      ;are we facing north?
  54+ 8DC4 FE 00                      cp 0
  55+ 8DC6 CA 6E 8E                   jp z, north2
  56+ 8DC9 FE 01                      cp 1
  57+ 8DCB CA 68 8E                   jp z, west2
  58+ 8DCE FE 02                      cp 2
  59+ 8DD0 CA 74 8E                   jp z, south2
  60+ 8DD3                      ;it must be facing east if we get heret
  61+ 8DD3
  62+ 8DD3                      ;check if were at the bottom right hand corner (255)
  63+ 8DD3                      ;if so we implicitly have a wall.
  64+ 8DD3
  65+ 8DD3
  66+ 8DD3
  67+ 8DD3                      ;we are facing east
  68+ 8DD3 11 01 00                   ld de, $0001      ; (+1) to go to next line in front of us
  69+ 8DD6
  70+ 8DD6              ;clear maxview flag and data
  71+ 8DD6              check_dist:
  72+ 8DD6 3E 06                      ld a,6
  73+ 8DD8 32 02 FA                   ld (maxview),a
  74+ 8DDB 3A 03 FA                   ld a,(flags)
  75+ 8DDE CB 87                      res 0,a
  76+ 8DE0 32 03 FA                   ld (flags),a
  77+ 8DE3
  78+ 8DE3 06 FF                      ld b,255            ;make accum 1 - counter
  79+ 8DE5
  80+ 8DE5              ;check if maxview set - if so, dont check for wall
  81+ 8DE5              ;in front of player anymore as there alreay is a wall set
  82+ 8DE5
  83+ 8DE5 3A 03 FA     loop2:        ld a,(flags)
  84+ 8DE8 CB 47                      bit 0,a           ;if 1, then already set
  85+ 8DEA C2 0D 8E                   jp nz,check_mh
  86+ 8DED
  87+ 8DED 7E                         ld a,(hl)         ; this is the furthest point we can see
  88+ 8DEE FE 80                      cp _mw ;=128      ;is it a wall here
  89+ 8DF0 28 0A                      jr z,j2
  90+ 8DF2
  91+ 8DF2              ;check for an exit wall and treat as if its a wall
  92+ 8DF2 FE C0                      cp _me
  93+ 8DF4 CA FC 8D                   jp z, j2   ;if no wall check for end wall
  94+ 8DF7
  95+ 8DF7              ;check for an switch wall and treat as if its a wall
  96+ 8DF7 FE E0                      cp _ms
  97+ 8DF9 C2 0D 8E                   jp nz, check_mh   ;if no wall check for end wall
  98+ 8DFC
  99+ 8DFC 78           j2:           ld a,b            ;there is a wall if we get here
 100+ 8DFD                            ;is it 255? if so make it 0
 101+ 8DFD 3C                         inc a             ;if a=0, it was 255
 102+ 8DFE CA 02 8E                   jp z,j1
 103+ 8E01 3D                         dec a             ;put back to original value
 104+ 8E02
 105+ 8E02 32 02 FA     j1:           ld (maxview),a    ;save how far we can actually see
 106+ 8E05 3A 03 FA                   ld a,(flags)
 107+ 8E08 CB C7                      set 0,a
 108+ 8E0A 32 03 FA                   ld (flags),a      ;set that we have set the flag
 109+ 8E0D
 110+ 8E0D
 111+ 8E0D 7E           check_mh:     ld a,(hl)
 112+ 8E0E FE 81                      cp _mh ;=129      ; is it an end wall?
 113+ 8E10 28 39                      jr z, end_loop    ; if yes, exit now
 114+ 8E12 04                         inc b
 115+ 8E13
 116+ 8E13              ;check if we are at location 0 in the maze - if so do nothing
 117+ 8E13 7D                         ld a,l
 118+ 8E14 3C                         inc a
 119+ 8E15 3D                         dec a             ;zero flag set if = to zero
 120+ 8E16 CA 48 8E                   jp z,end_loop2
 121+ 8E19
 122+ 8E19              ;##########################################################
 123+ 8E19
 124+ 8E19              ;now check if we are at the top end of the maze or the bottom
 125+ 8E19              ;end of the maze as there are no blocks to check for there.
 126+ 8E19              ;do bottom end first.
 127+ 8E19
 128+ 8E19
 129+ 8E19 3A 08 FA                   ld a,(player_dir)
 130+ 8E1C 3D                         dec a                 ;is it 0 which = north
 131+ 8E1D 3C                         inc a
 132+ 8E1E C2 2C 8E                   jp nz,cont_6a          ;carry on if not at north wall
 133+ 8E21
 134+ 8E21                            ;are we trying to read data outside the 256 byte boundary?
 135+ 8E21 7D                         ld a,l
 136+ 8E22 FE 11                      cp 17
 137+ 8E24 D2 3F 8E                   jp nc,cont_9
 138+ 8E27
 139+ 8E27 19                         add hl,de         ;now jump to next location in front of us
 140+ 8E28 78                         ld a,b            ;get our depth
 141+ 8E29 C3 4B 8E                   jp end_loop       ;exit routine
 142+ 8E2C
 143+ 8E2C
 144+ 8E2C 3A 08 FA     cont_6a       ld a,(player_dir)
 145+ 8E2F D6 02                      sub 2              ;are we facing south?
 146+ 8E31 C2 3F 8E                   jp nz,cont_9        ;z means yes
 147+ 8E34
 148+ 8E34 7D                         ld a,l
 149+ 8E35 FE F0                      cp 240
 150+ 8E37 DA 3F 8E                   jp c,cont_9      ;carry set if cp >a
 151+ 8E3A
 152+ 8E3A 19                         add hl,de         ;now jump to next location in front of us
 153+ 8E3B 78                         ld a,b            ;get our depth
 154+ 8E3C C3 4B 8E                   jp end_loop       ;exit routine
 155+ 8E3F
 156+ 8E3F
 157+ 8E3F              ;###########################################################
 158+ 8E3F
 159+ 8E3F 78           cont_9        ld a,b
 160+ 8E40 FE 06                      cp 6              ;only do a max of 6 loops as
 161+ 8E42 19                         add hl,de         ;now jump to next location in front of
 162+ 8E43 20 A0                      jr nz,loop2
 163+ 8E45 C3 4B 8E                   jp end_loop
 164+ 8E48                      ;we have hit a wall or 6 loops
 165+ 8E48
 166+ 8E48 06 FF        end_loop2:    ld b,255          ;we are here as we are at the end wall
 167+ 8E4A                                              ;top and bottom of the maze so make our
 168+ 8E4A                                              ;depth 0
 169+ 8E4A 04           end_loop1:    inc b
 170+ 8E4B
 171+ 8E4B              end_loop:
 172+ 8E4B              ;first check if we hit an end wall - our maxview flag will =0
 173+ 8E4B 3A 03 FA                   ld a,(flags)
 174+ 8E4E CB 47                      bit 0,a
 175+ 8E50 C2 57 8E                   jp nz,cont_8      ;continue on if not 0
 176+ 8E53 78                         ld a,b
 177+ 8E54 32 02 FA                   ld (maxview),a    ;if it is make maxview 0
 178+ 8E57              cont_8:
 179+ 8E57              ;check if b=255, if so, make it 0
 180+ 8E57 04                         inc b
 181+ 8E58 CA 5C 8E                   jp z,here1
 182+ 8E5B 05                         dec b             ;put back original value
 183+ 8E5C 78           here1:        ld a,b
 184+ 8E5D 32 06 FA                   ld (depth),a         ; -save how far we can see
 185+ 8E60 ED 53 09 FA                ld (de_count),de     ;save the de value for adding / subtracting later
 186+ 8E64 22 25 FA                   ld (furthest_point),hl
 187+ 8E67 C9                         ret
 188+ 8E68
 189+ 8E68              west2:
 190+ 8E68 11 FF FF                   ld de, $ffff      ; (-1) to go to next line to the left
 191+ 8E6B C3 D6 8D                   jp check_dist
 192+ 8E6E
 193+ 8E6E              north2:
 194+ 8E6E 11 F0 FF                   ld de, $fff0      ; (-16) to go to next line behind
 195+ 8E71 C3 D6 8D                   jp check_dist
 196+ 8E74              south2:
 197+ 8E74 11 10 00                   ld de, $0010      ; (+16) to go to next line to the left
 198+ 8E77 C3 D6 8D                   jp check_dist
 199+ 8E7A
 200+ 8E7A C9                         ret
 201+ 8E7B
 202+ 8E7B
 203+ 8E7B              ;############################################
 204+ 8E7B              ; ld de with the value to use to check the walls in front
 205+ 8E7B              ; or the sides of the player
 206+ 8E7B              ;############################################
 207+ 8E7B
 208+ 8E7B              ; reg a must contain the direction you want to look at
 209+ 8E7B
 210+ 8E7B              load_de:
 211+ 8E7B 3A 08 FA                 ld a,(player_dir)     ; get player direction
 212+ 8E7E              ; 00= north, 01=west, 02=south, 03=east
 213+ 8E7E
 214+ 8E7E              ;if 0 decrease by -16 n
 215+ 8E7E              ;if 1 decrease by -1  w
 216+ 8E7E              ;if 2 increase by +16 s
 217+ 8E7E              ;if 3 increase by +1  e
 218+ 8E7E
 219+ 8E7E              ;when checking distance, if you are looking south and your current location
 220+ 8E7E              ;is >240 then you are at the south wall.
 221+ 8E7E
 222+ 8E7E
 223+ 8E7E              ;if you are at the top of the maze facing north, and you current location
 224+ 8E7E              ; is <16 you are at the far north wall of the maze
 225+ 8E7E
 226+ 8E7E              ;for east and west you can detect a wall is $80 except for 255 (bottom
 227+ 8E7E              ; right) as the next  right location is outside the maze.
 228+ 8E7E
 229+ 8E7E              ; find out how far away we are from a wall
 230+ 8E7E                      ;are we facing north?
 231+ 8E7E FE 00                      cp 0
 232+ 8E80 C2 95 8E                   jp nz,de_1
 233+ 8E83 11 FF FF                   ld de, $ffff  ; (-1) to go to the left of north
 234+ 8E86 ED 53 0B FA                ld (left),de
 235+ 8E8A 11 01 00                   ld de, $0001  ; (+1) to go to next line right  - north
 236+ 8E8D ED 53 0D FA                ld (right),de
 237+ 8E91 11 10 00                   ld de, $0010  ; (+16) to go to next line behind - north
 238+ 8E94 C9                         ret
 239+ 8E95
 240+ 8E95 FE 01        de_1:         cp 1          ;west
 241+ 8E97 C2 AC 8E                   jp nz,de_2
 242+ 8E9A 11 10 00                   ld de, $0010  ; (+16) to go to next line to the left - west
 243+ 8E9D ED 53 0B FA                ld (left),de
 244+ 8EA1 11 F0 FF                   ld de, $fff0  ; (-16) to go to next line to the right - west
 245+ 8EA4 ED 53 0D FA                ld (right),de
 246+ 8EA8 11 01 00                   ld de, $0001  ; (+1) to go to next line behind - west
 247+ 8EAB C9                         ret
 248+ 8EAC
 249+ 8EAC FE 02        de_2:         cp 2          ; south
 250+ 8EAE C2 C3 8E                   jp nz,de_3
 251+ 8EB1 11 01 00                   ld de, $001  ; (+1) to go to next line to the left - south
 252+ 8EB4 ED 53 0B FA                ld (left),de
 253+ 8EB8 11 FF FF                   ld de, $ffff      ; (-1) to go to next line to the right - south
 254+ 8EBB ED 53 0D FA                ld (right),de
 255+ 8EBF 11 F0 FF                   ld de, $fff0      ; (-16) to go to next line behind - south
 256+ 8EC2 C9                         ret
 257+ 8EC3
 258+ 8EC3                            ;we must be facing east if we get here
 259+ 8EC3 11 F0 FF     de_3:         ld de, $fff0      ; (-16) to go to next line left - east
 260+ 8EC6 ED 53 0B FA                ld (left),de
 261+ 8ECA 11 10 00                   ld de, $0010      ; (+16) to go to next line right - east
 262+ 8ECD ED 53 0D FA                ld (right),de
 263+ 8ED1 11 FF FF                   ld de, $ffff      ; (-1) to go to next line behind - east
 264+ 8ED4 C9                         ret
 265+ 8ED5
 266+ 8ED5
 267+ 8ED5              ;#######################################################
 268+ 8ED5              ;load walk - load de with the amount to jump in the maze
 269+ 8ED5              ;as we walk forward
 270+ 8ED5              ;#######################################################
 271+ 8ED5
 272+ 8ED5              load_walk:
 273+ 8ED5 3A 08 FA                   ld a,(player_dir)   ;find out which way we are looking
 274+ 8ED8
 275+ 8ED8                            ;are we facing north?
 276+ 8ED8 FE 00                      cp 0
 277+ 8EDA C2 E1 8E                   jp nz,de1
 278+ 8EDD 11 F0 FF                   ld de, $fff0 ; (-16) to go to next line behind - north
 279+ 8EE0 C9                         ret
 280+ 8EE1
 281+ 8EE1 FE 01        de1:          cp 1          ;west
 282+ 8EE3 C2 EA 8E                   jp nz,de2
 283+ 8EE6 11 FF FF                   ld de, $ffff  ; (-1) to go to next line behind - west
 284+ 8EE9 C9                         ret
 285+ 8EEA
 286+ 8EEA FE 02        de2:          cp 2          ; south
 287+ 8EEC C2 F3 8E                   jp nz,de3
 288+ 8EEF 11 10 00                   ld de, $0010     ; (+16) to go to next line behind - south
 289+ 8EF2 C9                         ret
 290+ 8EF3
 291+ 8EF3                            ;we must be facing east if we get here
 292+ 8EF3 11 01 00     de3:          ld de, $0001      ; (+1) to go to next line behind - east
 293+ 8EF6 C9                         ret
 294+ 8EF7
 295+ 8EF7
 296+ 8EF7
 297+ 8EF7              ;#################################################################################
 298+ 8EF7              ;DOOR & SWITCH DRAWING ROUTINES
 299+ 8EF7
 300+ 8EF7              ;#################################################################################
 301+ 8EF7              ;see if we need to draw an open or closed door
 302+ 8EF7
 303+ 8EF7              ; show door type = 0 = front, 1 = side
 304+ 8EF7
 305+ 8EF7              draw_door:   ;check to see if we need to show the exit door
 306+ 8EF7                           ;door will always face NORTH.
 307+ 8EF7 AF                        xor a                  ;make reg a zero to say no door
 308+ 8EF8 32 2A FA                  ld (show_exit),a
 309+ 8EFB                           ;are we facing south?
 310+ 8EFB 3A 08 FA                  ld a,(player_dir)
 311+ 8EFE D6 02                     sub 2                  ;2 = south
 312+ 8F00 20 28                     jr nz,check_east      ;if not check if door is to our right hand side
 313+ 8F02                           ;we must be facing south and be in front of the door
 314+ 8F02                           ;dec a
 315+ 8F02                           ;ld (show_exit),a
 316+ 8F02 2A 00 FA                  ld hl,(player_pos)
 317+ 8F05 11 10 00                  ld de, $0010           ; (+16) to go to next line in front of us - south
 318+ 8F08 19                        add hl,de
 319+ 8F09 7E                        ld a,(hl)
 320+ 8F0A FE C0                     cp _me                 ;is it our DOOR?
 321+ 8F0C 20 1C                     jr nz,check_east      ;if not check if door is to our right hand side
 322+ 8F0E                           ;YES its a door - so draw it - but only if we are looking south
 323+ 8F0E 3A 2B FA                  ld a,(switch_pulled)
 324+ 8F11 A7                        and a
 325+ 8F12 28 0B                     jr z,not_open
 326+ 8F14 CD 83 85                  call  draw_exit_door_open
 327+ 8F17                           ;print the door message
 328+ 8F17 DD 21 81 82               ld ix,message_leave
 329+ 8F1B CD E9 81                  CALL print_message
 330+ 8F1E C9                        ret
 331+ 8F1F CD BF 83     not_open:    call draw_exit_door_closed
 332+ 8F22
 333+ 8F22                           ;print the door message
 334+ 8F22 DD 21 4D 82               ld ix,message_closed        ;exit_closed
 335+ 8F26 CD E9 81                  CALL print_message
 336+ 8F29 C9                        ret
 337+ 8F2A
 338+ 8F2A              ;theres no door immediately in front of us but now check if theres a door 1 space in front and to the right of us
 339+ 8F2A              check_east:
 340+ 8F2A                           ;1st check if we are facing East as door will be on our right, 1 space ahead of us
 341+ 8F2A                           ; so we have to be facing EAST
 342+ 8F2A 3A 08 FA                  ld a,(player_dir)
 343+ 8F2D D6 03                     sub 3              ;EAST = 3
 344+ 8F2F C0                        ret nz             ;exit as theres no door to our right
 345+ 8F30
 346+ 8F30 2A 00 FA                  ld hl,(player_pos)
 347+ 8F33 23                        inc hl             ;move test point to 1 place in front of us
 348+ 8F34 11 10 00                  ld de, $0010      ; (+16) to go to next line in front of us - EAST
 349+ 8F37 19                        add hl,de
 350+ 8F38 7E                        ld a,(hl)
 351+ 8F39 FE C0                     cp _me             ;;is it our DOOR?
 352+ 8F3B C0                        ret nz
 353+ 8F3C                           ;there IS a door and it will always face NORTH and be on our right
 354+ 8F3C                           ;yes its our door - so draw it
 355+ 8F3C
 356+ 8F3C                           ;determine if its open or closed
 357+ 8F3C 3A 2B FA                  ld a,(switch_pulled)
 358+ 8F3F A7                        and a
 359+ 8F40 20 04                     jr nz,_open           ;0=closed 1 = open
 360+ 8F42 CD 03 87                  call draw_door_right_closed
 361+ 8F45 C9                        ret
 362+ 8F46 CD ED 87     _open:       call draw_door_right_open
 363+ 8F49 C9                        ret
 364+ 8F4A
 365+ 8F4A              ;#########################################################################################
 366+ 8F4A              ;SWITCH Drawing Routine - I am being very lazy here and copying the code from the door
 367+ 8F4A              ;drawing as its the same thing to do for both the door and switch and  cant be bothered atm to
 368+ 8F4A              ;modify the dor routine and save bytes! (nov 2020)
 369+ 8F4A              ;-----------------------------------------------------------------------------------------
 370+ 8F4A
 371+ 8F4A              draw_switch:
 372+ 8F4A
 373+ 8F4A               ;check to see if we need to show the Switch
 374+ 8F4A                           ;switch will always face NORTH.
 375+ 8F4A                         ;  xor a                  ;make reg a zero to say no switch
 376+ 8F4A                         ;  ld (show_switch),a
 377+ 8F4A                           ;are we facing south?
 378+ 8F4A
 379+ 8F4A 3A 08 FA                  ld a,(player_dir)
 380+ 8F4D D6 02                     sub 2                  ;2 = south
 381+ 8F4F 20 21                     jr nz,check_sw_east      ;if not check if switch is to our right hand side
 382+ 8F51 2A 00 FA                  ld hl,(player_pos)
 383+ 8F54 11 10 00                  ld de, $0010           ; (+16) to go to next line in front of us - south
 384+ 8F57 19                        add hl,de
 385+ 8F58 7E                        ld a,(hl)
 386+ 8F59 FE E0                     cp _ms                 ;is it our SWITCH?
 387+ 8F5B 20 15                     jr nz,check_sw_east      ;if not check if the SWITCH is to our right hand side
 388+ 8F5D                           ;YES its a switch - so draw it - but only if we are looking south
 389+ 8F5D 3A 2B FA                  ld a,(switch_pulled)
 390+ 8F60 A7                        and a
 391+ 8F61 28 0B                     jr z,switch_off
 392+ 8F63 CD 33 89                  call  draw_switch_on
 393+ 8F66                           ;print the switch on message
 394+ 8F66 DD 21 66 82               ld ix,message_switchon
 395+ 8F6A CD E9 81                  CALL print_message
 396+ 8F6D C9                        ret
 397+ 8F6E
 398+ 8F6E CD B3 88     switch_off:  call draw_switch_off
 399+ 8F71 C9                        ret
 400+ 8F72
 401+ 8F72              ;theres no door immediately in front of us but now check if theres a door 1 space in front and to the right of us
 402+ 8F72              check_sw_east:
 403+ 8F72                           ;1st check if we are facing East as door will be on our right, 1 space ahead of us
 404+ 8F72                           ; so we have to be facing EAST
 405+ 8F72 3A 08 FA                  ld a,(player_dir)
 406+ 8F75 D6 03                     sub 3              ;EAST = 3
 407+ 8F77 C0                        ret nz             ;exit as theres no door to our right
 408+ 8F78
 409+ 8F78 2A 00 FA                  ld hl,(player_pos)
 410+ 8F7B 23                        inc hl             ;move test point to 1 place in front of us
 411+ 8F7C 11 10 00                  ld de, $0010      ; (+16) to go to next line in front of us - EAST
 412+ 8F7F 19                        add hl,de
 413+ 8F80 7E                        ld a,(hl)
 414+ 8F81 FE E0                     cp _ms             ;;is it our DOOR?
 415+ 8F83 C0                        ret nz
 416+ 8F84                           ;there IS a door and it will always face NORTH and be on our right
 417+ 8F84                           ;yes its our door - so draw it
 418+ 8F84
 419+ 8F84                           ;determine if its open or closed
 420+ 8F84 3A 2B FA                  ld a,(switch_pulled)
 421+ 8F87 A7                        and a
 422+ 8F88 20 04                     jr nz,open_a           ;0=closed 1 = open
 423+ 8F8A CD C2 89                  call draw_switch_right_off
 424+ 8F8D C9                        ret
 425+ 8F8E CD 86 8A     open_a:      call draw_switch_right_on
 426+ 8F91 C9                        ret
 427+ 8F92
 428+ 8F92
 429+ 8F92
# file closed: src/3-rd3dmazeV6.asm
 468  8F92                  INCLUDE "4-rd3dmazeV6.asm" ; draw left side of maze
# file opened: src/4-rd3dmazeV6.asm
   1+ 8F92
   2+ 8F92              ;============================================
   3+ 8F92              ;start to draw the maze from current location
   4+ 8F92              ;============================================
   5+ 8F92
   6+ 8F92
   7+ 8F92              draw_left_side:
   8+ 8F92
   9+ 8F92
  10+ 8F92
  11+ 8F92              ;       (depth) will hold how far we can see - max 6 squares in front of our view
  12+ 8F92
  13+ 8F92              ;              ld hl,(player_pos)    ;get player position
  14+ 8F92
  15+ 8F92              ;              ld a,l
  16+ 8F92                      ; if l=255  we are at the bottom right hand corner facing east to a end wall
  17+ 8F92                      ; if l>240 we are at the south wall
  18+ 8F92                      ; if l<16 we are at the north wall
  19+ 8F92
  20+ 8F92
  21+ 8F92              ;how do i implement a less-than/greater-than test in assembly?
  22+ 8F92
  23+ 8F92              ;a: to compare stuff, simply do a cp, and if the zero flag is set,
  24+ 8F92              ;a and the argument were equal, else if the carry is set the argument was greater,
  25+ 8F92              ;and finally, if neither is set, then a must be greater
  26+ 8F92              ;(cp does nothing to the registers, only the f (flag) register is changed).
  27+ 8F92
  28+ 8F92              ;we need to draw from the furthest distance so
  29+ 8F92              ;point hl to furthest position - only need to use l reg in the subtraction
  30+ 8F92              ;              ld a,l
  31+ 8F92              ;              sub a,b           ;will never be >255 or less than 1
  32+ 8F92              ;hl now points to furthest visible point in front of the player
  33+ 8F92
  34+ 8F92
  35+ 8F92              ;no matter what, always draw layer 6 view so theres always a wall in front of us
  36+ 8F92
  37+ 8F92              ;        ld   de,$C177
  38+ 8F92              ;        ld   a,_topblack
  39+ 8F92              ;;        ld   a,_topwhitebottomchequer
  40+ 8F92              ;        ld   (de),a                             ; insert the top of the wall face.
  41+ 8F92              ;        ld   hl,$0021
  42+ 8F92              ;        add  hl,de                              ; advance to the next row of the display file.
  43+ 8F92              ;        ld   (hl),_bottomblack        ; insert the bottom of the wall face.
  44+ 8F92              ;;        ld   (hl),_topchequerbottomwhite        ; insert the bottom of the wall face.
  45+ 8F92
  46+ 8F92              ;draw a complete line of chequerboard to emulate seeing the outside
  47+ 8F92              ;maze wall regardless of what blocks are seen.
  48+ 8F92
  49+ 8F92 21 6A C1             ld hl,$c16A
  50+ 8F95 11 6B C1             ld de,$C16b              ; offset to row 11, col 0
  51+ 8F98 01 19 00             ld bc,25
  52+ 8F9B                    ; ld (hl),_topwhitebottomchequer
  53+ 8F9B 36 A2                ld (hl),_bottomblack        ; insert the bottom of the wall face.
  54+ 8F9D
  55+ 8F9D ED B0                ldir
  56+ 8F9F 21 8B C1             ld hl,$c18b
  57+ 8FA2 11 8C C1             ld de,$C18c              ; offset to row 12, col 0
  58+ 8FA5 01 19 00             ld bc,25
  59+ 8FA8                    ; ld (hl),_topchequerbottomwhite
  60+ 8FA8 36 A3                ld (hl),_topblack        ; insert the bottom of the wall face.
  61+ 8FAA ED B0                ldir
  62+ 8FAC
  63+ 8FAC              ;now draw the rest of the left side
  64+ 8FAC
  65+ 8FAC 3A 06 FA                   ld a,(depth)
  66+ 8FAF FE 06                      cp 6
  67+ 8FB1 CA D1 8F                   jp z,draw_6	;just draw end middle block perhaps??
  68+ 8FB4 FE 05                      cp 5
  69+ 8FB6 CA 15 90                   jp z,draw_5	;only need to draw 3 block + 1 part
  70+ 8FB9 FE 04                      cp 4
  71+ 8FBB CA BF 91                   jp z,draw_4	;only need to draw 2 block + 1 part
  72+ 8FBE FE 03                      cp 3
  73+ 8FC0 CA D8 93                   jp z,draw_3	;only need to draw 1 block + 1 part
  74+ 8FC3 FE 02                      cp 2
  75+ 8FC5 CA 6A 95                   jp z,draw_2	;only need to draw 1 block
  76+ 8FC8 FE 01                      cp 1
  77+ 8FCA CA 22 96                   jp z,draw_1	;only need to draw 1 block
  78+ 8FCD C3 CB 96                   jp draw_0		;only need to draw edge blocks
  79+ 8FD0              ;end of routine
  80+ 8FD0 C9                         ret
  81+ 8FD1
  82+ 8FD1              draw_6:
  83+ 8FD1
  84+ 8FD1              draw_layer_6:
  85+ 8FD1
  86+ 8FD1
  87+ 8FD1              ;now draw the maze starting at the furthest point we can see
  88+ 8FD1              ; i.e. the middle of the display
  89+ 8FD1
  90+ 8FD1              ; draw section 6
  91+ 8FD1              ; --------------
  92+ 8FD1              ; hl=maze location being drawn.
  93+ 8FD1              ; now determine what to draw for this section.
  94+ 8FD1
  95+ 8FD1 2A 25 FA             ld hl,(furthest_point)
  96+ 8FD4 CD 7B 8E             call load_de
  97+ 8FD7 19                   add hl,de
  98+ 8FD8 22 25 FA             ld (furthest_point),hl  ;increment for the next layer to draw
  99+ 8FDB
 100+ 8FDB 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
 101+ 8FDE 11 77 01             ld   de,$0177           ; offset to row 11 column 12 - the centre of the 3d view.
 102+ 8FE1 19                   add  hl,de
 103+ 8FE2 E5                   push hl                 ;save it
 104+ 8FE3
 105+ 8FE3 ED 5B 25 FA          ld   de,(furthest_point); retrieve the maze location.
 106+ 8FE7 EB                   ex   de,hl              ; transfer de to hl.
 107+ 8FE8
 108+ 8FE8 ED 5B 09 FA          ld de,(de_count)
 109+ 8FEC 19                   add hl,de               ;get the block in front of us from the maze.
 110+ 8FED
 111+ 8FED              loop6:
 112+ 8FED
 113+ 8FED 7E                   ld a,(hl)
 114+ 8FEE 17                   rla
 115+ 8FEF DA F5 8F             jp c,do_wall            ;bit 7 (128)
 116+ 8FF2
 117+ 8FF2 C3 0B 90             jp do_no_wall         ; otherwise draw no wall
 118+ 8FF5
 119+ 8FF5
 120+ 8FF5              do_wall:
 121+ 8FF5                      ;check if bit 2 is set as thats an end wall
 122+ 8FF5                      ;and b must then be changed to 1 to stop drawing more than 1 wall.
 123+ 8FF5 17                   rla                     ;rotate next bit into carry.
 124+ 8FF6 D2 FF 8F             jp nc, draw7
 125+ 8FF9 CB 4F                bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
 126+ 8FFB 28 02                jr z,draw7
 127+ 8FFD 06 01                ld b,1                  ;set b so we exit on return
 128+ 8FFF
 129+ 8FFF D1           draw7   pop de
 130+ 9000 3E A2                ld   a,_bottomblack
 131+ 9002 12                   ld   (de),a             ; insert the top of the wall.
 132+ 9003 21 21 00             ld   hl,$0021
 133+ 9006 19                   add  hl,de              ; advance to the next row of the display file.
 134+ 9007 36 A3                ld   (hl),_topblack     ; insert the bottom of the wall.
 135+ 9009 18 0A                jr draw_5              ; jump to draw layer 5
 136+ 900B
 137+ 900B              ; there is a wall so insert chequerboard for the wall face.
 138+ 900B
 139+ 900B              do_no_wall:
 140+ 900B D1                   pop de
 141+ 900C                      ;push de
 142+ 900C 3E A2                ld   a,_bottomblack;_topwhitebottomchequer
 143+ 900E 12                   ld   (de),a                             ; insert the top of the wall face.
 144+ 900F 21 21 00             ld   hl,$0021
 145+ 9012 19                   add  hl,de                              ; advance to the next row of the display file.
 146+ 9013 36 A3                ld   (hl),_topblack;_topchequerbottomwhite        ; insert the bottom of the wall face.
 147+ 9015
 148+ 9015              ;now got to draw the 5th row of data
 149+ 9015
 150+ 9015
 151+ 9015              ;############################################
 152+ 9015              ;############################################
 153+ 9015              ;draw section 5 left
 154+ 9015              ;############################################
 155+ 9015              ;############################################
 156+ 9015
 157+ 9015              draw_5:
 158+ 9015              ;ret
 159+ 9015              ; hl=maze location being drawn.
 160+ 9015              ; now determine what to draw for this section.
 161+ 9015
 162+ 9015              ;first we need to decrement how far we can see to the layer
 163+ 9015              ;we are working on
 164+ 9015
 165+ 9015 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
 166+ 9018
 167+ 9018 CD 7B 8E             call load_de            ;get left and right and front jump into de reg
 168+ 901B 19                   add hl,de               ;jump backwards along the user view 1 space
 169+ 901C
 170+ 901C 22 25 FA             ld (furthest_point),hl ;re save it
 171+ 901F
 172+ 901F 11 FF FF             ld de,$ffff             ;to move the display position -1
 173+ 9022 ED 53 11 FA          ld (var4),de
 174+ 9026
 175+ 9026 ED 5B 0B FA          ld de,(left)
 176+ 902A
 177+ 902A              ;move the maze location pointer 1 to the left - used for all
 178+ 902A              ;remaining blocks to test if there is a wall there or not.
 179+ 902A
 180+ 902A 19                   add hl,de
 181+ 902B 22 15 FA             ld (var6),hl
 182+ 902E
 183+ 902E ED 53 0F FA          ld (var3),de
 184+ 9032 11 75 01             ld   de,$0175           ; offset to row 11 column 10 - left of  centre of the 3d view.
 185+ 9035
 186+ 9035 CD 3B 90             call do_draw_5
 187+ 9038
 188+ 9038 C3 BF 91              jp draw_4               ;now draw the 4th level
 189+ 903B
 190+ 903B              do_draw_5:
 191+ 903B
 192+ 903B 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
 193+ 903E 19                   add  hl,de
 194+ 903F
 195+ 903F
 196+ 903F              ; draw left half then right half of the display.
 197+ 903F
 198+ 903F 06 04                ld b,4                ; count for 4 columns left  of maze
 199+ 9041
 200+ 9041 ED 5B 15 FA          ld de,(var6); retrieve the maze location.
 201+ 9045
 202+ 9045
 203+ 9045
 204+ 9045              ;check if we are at the bottom right of the maze
 205+ 9045              ;if so, there is no wall after position 255 so point us to
 206+ 9045              ;position 240 and fake the wall!
 207+ 9045              ;;;        ld a,e
 208+ 9045              ;;;        cp 255
 209+ 9045              ;;;        jp nz,cont_3  ;continue if we are not at position 255
 210+ 9045              ;;;        ld e,240      ;fake where we are so we draw a wall :)
 211+ 9045
 212+ 9045
 213+ 9045              ;now move the maze pointer left (-1) 1 position
 214+ 9045              ;so we can read the type of walls to our left
 215+ 9045
 216+ 9045              cont_3:
 217+ 9045              ;*         push hl
 218+ 9045              ;*        ld hl,(left)
 219+ 9045              ;*        add hl,de
 220+ 9045              ;*        ex de,hl
 221+ 9045              ;*        pop hl
 222+ 9045
 223+ 9045 EB                   ex   de,hl              ; transfer de to hl.
 224+ 9046
 225+ 9046              ;       hl = furthest point in the maze
 226+ 9046              ;       de = d_file location to store byte to display
 227+ 9046
 228+ 9046              ;we have to load the first plot position with a corner bit to show
 229+ 9046              ;the end of the wall at the position we can see next to the center
 230+ 9046              ;plot position on section 6
 231+ 9046              ;then, while we draw the other blocks we can see we just want top and
 232+ 9046              ;bottom blacks pointed so will use var1 and var 2 to hold the
 233+ 9046              ;character block we need to print.
 234+ 9046
 235+ 9046
 236+ 9046 3E B4                ld a,_smallwall;_topleft5          ; load with top left char $a9
 237+ 9048 32 04 FA             ld (var1),a
 238+ 904B 3C                   inc a
 239+ 904C 3E B4                ld a,_smallwall;_topleft5          ; load with top left char $a9
 240+ 904E
 241+ 904E 32 05 FA             ld (var2),a             ;ld with bottom left char
 242+ 9051
 243+ 9051              loop8:
 244+ 9051 E5                   push hl
 245+ 9052
 246+ 9052
 247+ 9052              ;############################################################################
 248+ 9052              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
 249+ 9052
 250+ 9052 3A 28 FA             ld a,(maze_highbyte)
 251+ 9055 BC                   cp h                    ;are we at the top part of the maze?
 252+ 9056 CA 89 90             jp z,cont_1s
 253+ 9059                                              ;if we are on a different maze boundary
 254+ 9059                                              ;then draw a maze wall as we are the top
 255+ 9059                                              ;or north wall but maze data has no
 256+ 9059                                              ;wall data.
 257+ 9059              ;4 = 2nd left wall
 258+ 9059              ;3 = 2nd left wall
 259+ 9059              ;2 = 3rd left wall
 260+ 9059              ;1 = 4th left wall
 261+ 9059
 262+ 9059 78                   ld a,b                  ;our current wall counter
 263+ 905A FE 04                cp 4
 264+ 905C C2 67 90             jp nz,a5_1                 ;its not wall 4
 265+ 905F 3E 01                ld a,1
 266+ 9061 47                   ld b,a
 267+ 9062 C6 80                add a,128               ;make sure we set a wall!
 268+ 9064 C3 BF 90             jp draw_5S             ;jump straight to making an end wall
 269+ 9067
 270+ 9067 FE 03        a5_1:   cp 3
 271+ 9069 C2 74 90             jp nz,a5_2             ;its not wall 3
 272+ 906C 3E 01                ld a,1
 273+ 906E 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 274+ 906F C6 80                add a,128               ;make sure we set a wall!
 275+ 9071 C3 E6 90             jp do_2ndwall_l        ;draw the 2nd block to the left
 276+ 9074
 277+ 9074 FE 02        a5_2:   cp 2
 278+ 9076 C2 81 90             jp nz,a5_3             ;its not wall 3
 279+ 9079 3E 01                ld a,1
 280+ 907B 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 281+ 907C C6 80                add a,128               ;make sure we set a wall!
 282+ 907E C3 26 91             jp do_3rdwall_l       ;draw the 2nd block to the left
 283+ 9081
 284+ 9081              ;a must = 1 if we get here.
 285+ 9081 3E 01        a5_3:   ld a,1
 286+ 9083 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 287+ 9084 C6 80                add a,128               ;make sure we set a wall!
 288+ 9086 C3 73 91             jp do_4thwall_l       ;draw the cnd block to the left
 289+ 9089
 290+ 9089              ;############################################################################
 291+ 9089
 292+ 9089              ;are we at a maze edge wall = clear flag?
 293+ 9089              cont_1s:
 294+ 9089 97                   sub a
 295+ 908A 32 17 FA             ld (end_wall),a         ;save that we are NOT at an end wall
 296+ 908D
 297+ 908D
 298+ 908D 7E                   ld a,(hl)               ;otherwise, check if there is a wall
 299+ 908E
 300+ 908E FE 81                cp _mh                  ;maze_wall = 129
 301+ 9090 20 07                jr nz,cont9
 302+ 9092 F5                   push af
 303+ 9093 3E 01                ld a,1
 304+ 9095 32 17 FA             ld (end_wall),a         ;save that we are NOT at an end wall
 305+ 9098 F1                   pop af
 306+ 9099
 307+ 9099 17           cont9:  rla
 308+ 909A DA AD 90             jp c,do_wall5            ;bit 7 (128)
 309+ 909D
 310+ 909D
 311+ 909D              go_back5:
 312+ 909D 2A 11 FA             ld hl,(var4)            ;used for left and right drawing
 313+ 90A0 19                   add hl,de               ; holds current screen position
 314+ 90A1 EB                   ex de,hl
 315+ 90A2 E1                   pop hl
 316+ 90A3 D5                   push de
 317+ 90A4 ED 5B 0F FA          ld de,(var3)            ;used for left and right drawing
 318+ 90A8 19                   add hl,de                ; go left 1 block in the maze
 319+ 90A9 D1                   pop de
 320+ 90AA 10 A5                djnz loop8
 321+ 90AC C9                   ret
 322+ 90AD
 323+ 90AD
 324+ 90AD              ; there is not a wall so insert black to show that the location is too far away to see its detail.
 325+ 90AD
 326+ 90AD              do_wall5:
 327+ 90AD
 328+ 90AD              ;check if b=2 - if so we are not at a wall immediately next to our left
 329+ 90AD              ;nor are we at an and wall. We are drawing the 2nd block to the left
 330+ 90AD              ;b=3 for 3rd block to the left.
 331+ 90AD
 332+ 90AD 78                   ld a,b
 333+ 90AE D6 01                sub 1
 334+ 90B0 CA 73 91             jp z,do_4thwall_l       ;draw the cnd block to the left
 335+ 90B3
 336+ 90B3 78                   ld a,b                  ;b is our loop count
 337+ 90B4 D6 02                sub 2                   ;check if a=2
 338+ 90B6 CA 26 91             jp z,do_3rdwall_l       ;draw the 2nd block to the left
 339+ 90B9
 340+ 90B9 78                   ld a,b
 341+ 90BA D6 03                sub 3
 342+ 90BC CA E6 90             jp z,do_2ndwall_l       ;draw the cnd block to the left
 343+ 90BF
 344+ 90BF
 345+ 90BF
 346+ 90BF              ;b must = 4 if we get here, so draw the first wall
 347+ 90BF
 348+ 90BF                        ;check if bit 2 is set as thats an end
 349+ 90BF                      ;and b must then be changed to 1 to stop drawing.
 350+ 90BF              draw_5S:
 351+ 90BF CB 4F                bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
 352+ 90C1 28 04                jr z,draw8
 353+ 90C3
 354+ 90C3 97                   sub a                   ;we do NOT have an ouside maze wall
 355+ 90C4 32 17 FA             ld (end_wall),a         ;save that we are NOT at an end wall
 356+ 90C7              ;b must be 1 if we get here!
 357+ 90C7
 358+ 90C7 D5           draw8:  push de
 359+ 90C8 3A 04 FA             ld   a,(var1)           ;holds _smallwall
 360+ 90CB 12                   ld   (de),a             ; insert the top of the wall.
 361+ 90CC
 362+ 90CC 1B                   dec de
 363+ 90CD 12                   ld   (de),a             ; insert the top of the wall.
 364+ 90CE 13                   inc de                  ;put plot position back to start of wall
 365+ 90CF
 366+ 90CF              ;now check if we need to draw a black side on the right
 367+ 90CF              ;by looking to the character to the right of the wall
 368+ 90CF              ;and if there is not a wall already drawn, then draw a
 369+ 90CF              ;black side
 370+ 90CF
 371+ 90CF 3E A9                ld a,_topleft5          ;draw the top left side
 372+ 90D1 13                   inc de                  ;jump ahead 1 char in the display
 373+ 90D2 12                   ld (de),a               ;draw a black and chevron side
 374+ 90D3 1B                   dec de                  ;go back 1 space again
 375+ 90D4
 376+ 90D4              ;NOW DO THE NEXT LINE BELOW
 377+ 90D4
 378+ 90D4              ;_x1:
 379+ 90D4 21 21 00             ld   hl,$0021           ;jump to the next line below
 380+ 90D7 19                   add  hl,de
 381+ 90D8 3A 05 FA             ld a,(var2)             ;draw our wall bottom.
 382+ 90DB 77                   ld   (hl),a             ; insert the bottom of the wall.
 383+ 90DC 2B                   dec hl
 384+ 90DD 77                   ld   (hl),a             ; insert the bottom of the wall.
 385+ 90DE 23                   inc hl
 386+ 90DF 23                   inc hl
 387+ 90E0 3E AB                ld a,_bottomleft5
 388+ 90E2 77                   ld (hl),a
 389+ 90E3
 390+ 90E3              ;_x2
 391+ 90E3 D1                    pop de
 392+ 90E4 18 B7                jr go_back5              ; jump back to main loop
 393+ 90E6
 394+ 90E6
 395+ 90E6              ;************************************
 396+ 90E6
 397+ 90E6              ;draw the wall for 2nd LEFT layer
 398+ 90E6
 399+ 90E6              ;***********************************
 400+ 90E6
 401+ 90E6              do_2ndwall_l:
 402+ 90E6
 403+ 90E6 D5                   push de                 ;save the current acreen position
 404+ 90E7
 405+ 90E7              ;1st check if theres a wall where we need to draw the black side
 406+ 90E7
 407+ 90E7 1B                   dec de
 408+ 90E8 1B                   dec de                  ;move 3 place left to position us correctly
 409+ 90E9
 410+ 90E9              ;now draw a red wall to the right of section 2
 411+ 90E9 13                   inc de
 412+ 90EA 3E B4                ld a,_smallwall
 413+ 90EC 12                   ld (de),a
 414+ 90ED 1B                   dec de
 415+ 90EE 12                   ld (de),a               ;draw 2nd one (4 wide)
 416+ 90EF 1B                   dec de
 417+ 90F0 12                   ld (de),a               ;draw 3rd one (4 wide)
 418+ 90F1
 419+ 90F1 13                   inc de
 420+ 90F2 13                   inc de
 421+ 90F3 13                   inc de
 422+ 90F4                               ;put us back to our start position ready
 423+ 90F4                                              ;to start drawing the black side
 424+ 90F4
 425+ 90F4              ;now check if we need to draw a black side on the right
 426+ 90F4              ;by looking to the character to the right of the wall
 427+ 90F4              ;and if there is not a wall already drawn, then draw a
 428+ 90F4              ;black side
 429+ 90F4
 430+ 90F4 13                   inc de
 431+ 90F5 1A                   ld a,(de)               ;read whats there
 432+ 90F6 FE B4                cp _smallwall           ;is it a wall
 433+ 90F8 CA 02 91             jp z,_x1r_2_l           ;if yes, do NOT draw a black side.
 434+ 90FB 1B                   dec de
 435+ 90FC 3E 95                ld a,$95                ;draw top left side
 436+ 90FE 12                   ld (de),a               ;draw middle top bit
 437+ 90FF 3C                   inc a
 438+ 9100 13                   inc de
 439+ 9101 12                   ld (de),a               ;draw middle top bit
 440+ 9102
 441+ 9102
 442+ 9102              ;top line done
 443+ 9102
 444+ 9102              ;now do the bottom line underneath
 445+ 9102
 446+ 9102              ;REMEMBER - 1 block is 2 8 bit squares at the section
 447+ 9102              _x1r_2_l:
 448+ 9102 1B                   dec de
 449+ 9103 1B                   dec de
 450+ 9104 1B                   dec de                  ;move left 3 places in the display
 451+ 9105 21 21 00             ld  hl,$0021           ;jump to the next line below + 1 char right
 452+ 9108 19                   add hl,de
 453+ 9109
 454+ 9109
 455+ 9109              ;now draw a red wall to the right of section 2
 456+ 9109 23                   inc hl
 457+ 910A 3E B4                ld a,_smallwall
 458+ 910C 77                   ld (hl),a
 459+ 910D 2B                   dec hl
 460+ 910E 77                   ld (hl),a
 461+ 910F 2B                   dec hl
 462+ 9110 77                   ld (hl),a               ;draw 3rd one (3 wide)
 463+ 9111
 464+ 9111 23                   inc hl
 465+ 9112 23                   inc hl
 466+ 9113 23                   inc hl
 467+ 9114
 468+ 9114              ;now check if we need to draw a black side on the left of the lower half wall
 469+ 9114              ;do this by checking if the next block is already a wall just like above
 470+ 9114
 471+ 9114 23                   inc hl      ;look at the right block
 472+ 9115 7E                   ld a,(hl)
 473+ 9116 FE B4                cp _smallwall           ;is there a bottom wall5 here?
 474+ 9118 CA 22 91             jp z,_x2r_2_l
 475+ 911B 3E 98                ld a,$98            ;draw rightmost bottom
 476+ 911D 2B                   dec hl
 477+ 911E 77                   ld (hl),a
 478+ 911F
 479+ 911F 3C                  inc a
 480+ 9120 23                   inc hl
 481+ 9121 77                   ld (hl),a
 482+ 9122
 483+ 9122 D1           _x2r_2_l  pop de
 484+ 9123 C3 9D 90             jp go_back5              ; jump back to main loop
 485+ 9126
 486+ 9126              ;##########################################
 487+ 9126
 488+ 9126              ;draw the wall for 3rd LEFT layer
 489+ 9126
 490+ 9126              ;##########################################
 491+ 9126
 492+ 9126              do_3rdwall_l:
 493+ 9126
 494+ 9126 D5                   push de                 ;save the current acreen position
 495+ 9127              ;1st check if theres a wall where we need to draw the black side
 496+ 9127
 497+ 9127 1B                  dec de
 498+ 9128 1B                   dec de
 499+ 9129 1B                   dec de
 500+ 912A 1B                   dec de
 501+ 912B 1B                   dec de
 502+ 912C 1B                   dec de
 503+ 912D
 504+ 912D
 505+ 912D              ;now draw a red wall to the left of section 2,  top half
 506+ 912D
 507+ 912D 3E B4                ld a,_smallwall;$8e                ;8e - 3rd wall graphic
 508+ 912F 12                   ld (de),a
 509+ 9130 13                   inc de
 510+ 9131 12                   ld (de),a
 511+ 9132 13                   inc de
 512+ 9133 12                   ld (de),a
 513+ 9134 13                   inc de
 514+ 9135 12                   ld (de),a               ;draw 4th one (4 wide)
 515+ 9136
 516+ 9136
 517+ 9136              ;now check if we need to draw a black side on the right
 518+ 9136              ;by looking to the character to the right of the wall
 519+ 9136              ;and if there is not a wall already drawn, then draw a
 520+ 9136              ;black side
 521+ 9136
 522+ 9136 13                   inc de
 523+ 9137 1A                   ld a,(de)               ;read whats there
 524+ 9138                     ; dec de                  ;put our pointer back to the original position
 525+ 9138 FE B4                cp _smallwall           ;is it a wall
 526+ 913A CA 4A 91             jp z,_x1r_3l               ;if yes, do NOT draw a black side.
 527+ 913D 1B                   dec de
 528+ 913E 13                   inc de
 529+ 913F 13                   inc de
 530+ 9140 13                   inc de
 531+ 9141 3E C5                ld a,$c5             ;draw top right side
 532+ 9143 12                   ld (de),a
 533+ 9144 1B                   dec de
 534+ 9145 3C                   inc a
 535+ 9146 12                   ld (de),a
 536+ 9147 3C                   inc a
 537+ 9148 1B                   dec de
 538+ 9149 12                   ld (de),a
 539+ 914A
 540+ 914A              ;Top line done
 541+ 914A              ;now do the bottom line
 542+ 914A
 543+ 914A              _x1r_3l:
 544+ 914A 1B                   dec de
 545+ 914B 1B                   dec de
 546+ 914C 1B                   dec de
 547+ 914D 1B                   dec de
 548+ 914E
 549+ 914E 21 21 00             ld   hl,$0021           ;jump to the next line below + 1 char right
 550+ 9151 19                   add  hl,de
 551+ 9152 3E B4                ld a,_smallwall;$8e
 552+ 9154 77                   ld (hl),a
 553+ 9155 23                   inc hl
 554+ 9156 77                   ld (hl),a
 555+ 9157 23                   inc hl
 556+ 9158 77                   ld (hl),a
 557+ 9159 23                   inc hl
 558+ 915A 77                   ld (hl),a
 559+ 915B
 560+ 915B 23                   inc hl
 561+ 915C
 562+ 915C
 563+ 915C              ;now check if we need to draw a black side on the left of the lower half wall
 564+ 915C              ;do this by checking if the next block is already a wall just like above
 565+ 915C
 566+ 915C 23                   inc hl      ;look at the right block
 567+ 915D 7E                   ld a,(hl)
 568+ 915E 2B                   dec hl
 569+ 915F FE B4                cp _smallwall           ;is there a bottom wall5 here?
 570+ 9161 CA 6F 91             jp z,_x2r_3l
 571+ 9164 2B                   dec hl
 572+ 9165              ;inc hl
 573+ 9165 3E C3                ld a,$c3            ;draw leftmost bottom
 574+ 9167 23                   inc hl
 575+ 9168 77                   ld (hl),a
 576+ 9169 23                   inc hl
 577+ 916A 3D                   dec a
 578+ 916B 77                   ld (hl),a
 579+ 916C 23                   inc hl
 580+ 916D 3D                   dec a
 581+ 916E 77                   ld (hl),a
 582+ 916F
 583+ 916F D1           _x2r_3l  pop de
 584+ 9170 C3 9D 90             jp go_back5              ; jump back to main loop
 585+ 9173
 586+ 9173              ;##########################################
 587+ 9173
 588+ 9173              ;draw the wall for 4th (and last!) LEFT layer
 589+ 9173
 590+ 9173              ;##########################################
 591+ 9173
 592+ 9173              do_4thwall_l:
 593+ 9173
 594+ 9173              ;draw top half of wall
 595+ 9173
 596+ 9173 D5                   push de                 ;save the current acreen position
 597+ 9174              ;1st check if theres a wall where we need to draw the black side
 598+ 9174 1B                   dec de
 599+ 9175 1B                   dec de
 600+ 9176 1B                   dec de
 601+ 9177 1B                   dec de
 602+ 9178 1B                   dec de
 603+ 9179 1B                   dec de
 604+ 917A              ;now draw a red wall to the right of section 2,  top half
 605+ 917A
 606+ 917A 3E B4                ld a,_smallwall;$8d
 607+ 917C 12                   ld (de),a
 608+ 917D 1B                   dec de
 609+ 917E 12                   ld (de),a
 610+ 917F 13                   inc de                  ;move print position back for black wall
 611+ 9180
 612+ 9180              ;now check if we need to draw a black side on the right
 613+ 9180              ;by looking to the character to the right of the wall
 614+ 9180              ;and if there is not a wall already drawn, then draw a
 615+ 9180              ;black side
 616+ 9180
 617+ 9180 13                   inc de                  ;jump left 1 char in the display
 618+ 9181 1A                   ld a,(de)               ;read whats there
 619+ 9182 1B                   dec de                  ;put our pointer back to the original position
 620+ 9183 FE B4                cp _smallwall;$8e                 ;is it a wall
 621+ 9185 CA 99 91             jp z,_x1r_31_l               ;if yes, do NOT draw a black side.
 622+ 9188              ;        dec de
 623+ 9188 3E B9                ld a,$b9              ;draw top right side
 624+ 918A 13                   inc de
 625+ 918B 13                   inc de
 626+ 918C 13                   inc de
 627+ 918D 13                   inc de
 628+ 918E 12                   ld (de),a           ;draw 4 black sides
 629+ 918F 1B                   dec de
 630+ 9190 3C                   inc a
 631+ 9191 12                   ld (de),a
 632+ 9192 3C                   inc a
 633+ 9193 1B                   dec de
 634+ 9194 12                   ld (de),a
 635+ 9195 3C                   inc a
 636+ 9196 1B                   dec de
 637+ 9197 12                   ld (de),a
 638+ 9198
 639+ 9198 1B                   dec de              ;move to wall start
 640+ 9199
 641+ 9199
 642+ 9199              ;top line done
 643+ 9199
 644+ 9199              ;now do the bottom line underneath
 645+ 9199
 646+ 9199              _x1r_31_l
 647+ 9199 21 21 00      ld   hl,$0021           ;jump to the next line below + 1 char right
 648+ 919C 19                   add  hl,de
 649+ 919D
 650+ 919D 3E B4                ld a,_smallwall;$8d
 651+ 919F 77                   ld (hl),a
 652+ 91A0 2B                   dec hl
 653+ 91A1 77                   ld (hl),a
 654+ 91A2
 655+ 91A2 23                   inc hl
 656+ 91A3
 657+ 91A3
 658+ 91A3              ;now check if we need to draw a black side on the left of the lower half wall
 659+ 91A3              ;do this by checking if the next block is already a wall just like above
 660+ 91A3
 661+ 91A3 23                   inc hl      ;look at the left block
 662+ 91A4 7E                   ld a,(hl)
 663+ 91A5 2B                   dec hl
 664+ 91A6 FE B4                cp _smallwall;$8e           ;is there a bottom wall5 here?
 665+ 91A8 CA BB 91             jp z,_x2r_31_l
 666+ 91AB
 667+ 91AB                   ;  dec hl
 668+ 91AB 3E BD                ld a,$bd            ;draw leftmost bottom
 669+ 91AD 23                   inc hl
 670+ 91AE 23                   inc hl
 671+ 91AF 23                   inc hl
 672+ 91B0 23                   inc hl
 673+ 91B1
 674+ 91B1 77                   ld (hl),a
 675+ 91B2 2B                   dec hl
 676+ 91B3 3C                   inc a
 677+ 91B4 77                   ld (hl),a
 678+ 91B5 2B                   dec hl
 679+ 91B6 3C                   inc a
 680+ 91B7 77                   ld (hl),a
 681+ 91B8 2B                   dec hl
 682+ 91B9 3C                   inc a
 683+ 91BA 77                   ld (hl),a
 684+ 91BB
 685+ 91BB D1           _x2r_31_l  pop de
 686+ 91BC C3 9D 90             jp go_back5              ; jump back to main loop
 687+ 91BF
 688+ 91BF
 689+ 91BF              ;############################################
 690+ 91BF              ;############################################
 691+ 91BF              ;draw LEFT layer 4
 692+ 91BF              ;############################################
 693+ 91BF              ;############################################
 694+ 91BF
 695+ 91BF              draw_4
 696+ 91BF
 697+ 91BF              ; hl=maze location being drawn.
 698+ 91BF              ; now determine what to draw for this section.
 699+ 91BF
 700+ 91BF
 701+ 91BF 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
 702+ 91C2
 703+ 91C2 CD 7B 8E             call load_de            ;get left and right and front jump into de reg
 704+ 91C5 19                   add hl,de               ;jump backwards along the user view 1 space
 705+ 91C6 22 25 FA             ld (furthest_point),hl  ;re save it
 706+ 91C9
 707+ 91C9              ;we should also move our pointer left to read where the walls are.
 708+ 91C9              ;this will be from this point onwards as we can see the blocks more fully
 709+ 91C9
 710+ 91C9 11 FF FF             ld de,$ffff              ;to move the printed position -3
 711+ 91CC ED 53 11 FA          ld (var4),de            ;as block is 3 chars wide
 712+ 91D0
 713+ 91D0              ;we need to move pointer 1 to the left for wall checking
 714+ 91D0 ED 5B 0B FA          ld de,(left)
 715+ 91D4 19                   add hl,de
 716+ 91D5 22 15 FA             ld (var6),hl ;re save it
 717+ 91D8
 718+ 91D8
 719+ 91D8 ED 53 0F FA          ld (var3),de
 720+ 91DC 11 51 01             ld de,$0151            ; offset to row 10 column 16 - left of  centre of the 3d view.
 721+ 91DF CD E5 91             call do_draw_4
 722+ 91E2
 723+ 91E2
 724+ 91E2 C3 D8 93             jp draw_3              ;now draw the 4th level
 725+ 91E5
 726+ 91E5              do_draw_4:
 727+ 91E5
 728+ 91E5 2A 86 81             ld hl,(d_file)         ; fetch the location of the display file.
 729+ 91E8 19                   add hl,de
 730+ 91E9 06 04                ld b,4                 ; count for 3 blocks left of display file
 731+ 91EB                                             ; 0 is not counted so loops 3 times
 732+ 91EB ED 5B 15 FA          ld de,(var6)           ; retrieve the maze location.
 733+ 91EF EB                   ex de,hl
 734+ 91F0
 735+ 91F0              ;       hl = furthest point in the maze
 736+ 91F0              ;       de = d_file location to store byte to display
 737+ 91F0
 738+ 91F0              loop9:
 739+ 91F0 E5                   push hl
 740+ 91F1
 741+ 91F1              ;#############################################################################
 742+ 91F1              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
 743+ 91F1
 744+ 91F1 3A 28 FA             ld a,(maze_highbyte)
 745+ 91F4 BC                   cp h                    ;are weoutside of our maze?
 746+ 91F5 CA 28 92             jp z,cont_5
 747+ 91F8
 748+ 91F8                       ;if we are on a different maze boundary
 749+ 91F8                                              ;then draw a maze wall as we are the top
 750+ 91F8                                              ;or north wall but maze data has no
 751+ 91F8                                              ;wall data.
 752+ 91F8
 753+ 91F8              ;4 = 1st LEFT wall
 754+ 91F8              ;3 = 2nd LEFT wall
 755+ 91F8              ;2 = 3rd LEFT wall
 756+ 91F8              ;1 = 4th LEFT wall
 757+ 91F8
 758+ 91F8 78                   ld a,b                  ;our current wall counter
 759+ 91F9 FE 04                cp 4
 760+ 91FB C2 06 92             jp nz,a4_1              ;its not a wall
 761+ 91FE 3E 01                ld a,1
 762+ 9200 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 763+ 9201 C6 80                add a,128               ;make sure we set a wall!
 764+ 9203 C3 57 92             jp draw_9               ;draw the 1st block to the left
 765+ 9206
 766+ 9206              ;        ld a,b
 767+ 9206 FE 03        a4_1:   cp 3
 768+ 9208 C2 13 92             jp nz,a4_2              ;its not wall
 769+ 920B 3E 01                ld a,1
 770+ 920D 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 771+ 920E C6 80                add a,128               ;make sure we set a wall!
 772+ 9210 C3 97 92             jp draw_9_2L           ;draw the 2nd block to the left
 773+ 9213
 774+ 9213 FE 02        a4_2:   cp 2
 775+ 9215 C2 20 92             jp nz,a4_3              ;its not wall
 776+ 9218 3E 01                ld a,1
 777+ 921A 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 778+ 921B C6 80                add a,128               ;make sure we set a wall!
 779+ 921D C3 09 93             jp draw_9_3L           ;draw the 3rd block to the left
 780+ 9220
 781+ 9220              ;a must = 1 if we get here.
 782+ 9220 3E 01        a4_3:   ld a,1
 783+ 9222 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 784+ 9223 C6 80                add a,128               ;make sure we set a wall!
 785+ 9225 C3 68 93             jp draw_9_4L           ;draw the 4th block to the left
 786+ 9228
 787+ 9228              ;############################################################################
 788+ 9228
 789+ 9228
 790+ 9228              ;now check if we are on the south wall and frig it to draw the
 791+ 9228              ;walls we need.
 792+ 9228              ;reg a already contains l
 793+ 9228
 794+ 9228              ;cont_4s:
 795+ 9228
 796+ 9228
 797+ 9228              cont_5:
 798+ 9228 7E                   ld a,(hl)
 799+ 9229 17                   rla
 800+ 922A DA 3D 92             jp c,do_wall4            ;bit 7 (128)
 801+ 922D
 802+ 922D               ;       call do_no_wall4         ; otherwise draw no wall
 803+ 922D
 804+ 922D              go_back4:
 805+ 922D 2A 11 FA             ld hl,(var4)            ;used for left and right drawing
 806+ 9230 19                   add hl,de
 807+ 9231 EB                   ex de,hl
 808+ 9232 E1                   pop hl
 809+ 9233 D5                   push de
 810+ 9234 ED 5B 0F FA          ld de,(var3)            ;hold address of next block in the maze we test
 811+ 9238 19                   add hl,de               ; move to the start of the next block to print
 812+ 9239                                              ;we need to move back 4 blocks
 813+ 9239                                              ;as the first block obscures the view
 814+ 9239                                              ;of the next 3 blocks.
 815+ 9239 D1                   pop de
 816+ 923A 10 B4                djnz loop9
 817+ 923C C9                   ret
 818+ 923D
 819+ 923D              do_wall4:
 820+ 923D
 821+ 923D              draw_4s:
 822+ 923D
 823+ 923D              ;Draw wall based on b count
 824+ 923D
 825+ 923D              wall4L_start:
 826+ 923D
 827+ 923D 78                   ld a,b
 828+ 923E D6 01                sub 1                   ;4th wall  to the left
 829+ 9240 CA 68 93             jp z,draw_9_4L
 830+ 9243
 831+ 9243 78                   ld a,b
 832+ 9244 D6 02                sub 2                   ;3rd wall to the left
 833+ 9246 CA 09 93             jp z,draw_9_3L
 834+ 9249
 835+ 9249 78                   ld a,b
 836+ 924A D6 03                sub 3                   ;2nd wall immediately wall to the left
 837+ 924C CA 97 92             jp z,draw_9_2L
 838+ 924F
 839+ 924F 78                   ld a,b
 840+ 9250 D6 04                sub 4                   ;1st wall immediately wall to the left
 841+ 9252 CA 57 92             jp z,draw_9
 842+ 9255
 843+ 9255 E1                   pop hl
 844+ 9256 C9                   ret
 845+ 9257
 846+ 9257              draw_9:
 847+ 9257 C5                   push bc
 848+ 9258 D5                   push de                 ;save our display pointer
 849+ 9259 06 04                ld b,4                  ;block is 4 blocks high
 850+ 925B 21 21 00             ld   hl,$0021           ;load with 32 to jump to line below us
 851+ 925E 1B                   dec de
 852+ 925F
 853+ 925F 3E B7        loop10: ld   a,_mediumwall_1      ;grey sides facing us
 854+ 9261 12                   ld (de),a               ; insert thepart of the wall.
 855+ 9262 13                   inc de
 856+ 9263 12                   ld (de),a               ;put grey side to our right
 857+ 9264 13                   inc de
 858+ 9265 12                   ld (de),a
 859+ 9266 13                   inc de
 860+ 9267 12                   ld (de),a
 861+ 9268 1B                   dec de
 862+ 9269 1B                   dec de
 863+ 926A 1B                   dec de                  ;go left 1 again
 864+ 926B EB                   ex de,hl
 865+ 926C 19                   add  hl,de              ; advance to the next row of the display file.
 866+ 926D EB                   ex de,hl
 867+ 926E 10 EF                djnz loop10             ;do this 3 times
 868+ 9270
 869+ 9270                      ;now draw the blank face
 870+ 9270 D1                   pop de                  ;back to our original position
 871+ 9271 D5                   push de
 872+ 9272 13                   inc de
 873+ 9273 13                   inc de                  ;move ahead 3 spaces in the display
 874+ 9274 13                   inc de
 875+ 9275              ;        inc de
 876+ 9275
 877+ 9275              ;check if the char to our right is a wall block.
 878+ 9275              ;if so, do not draw a black face as we need to hide it or it will
 879+ 9275              ;ovewrite the already drawn block
 880+ 9275
 881+ 9275 1A                   ld a,(de)
 882+ 9276 FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
 883+ 9278 C2 7F 92             jp nz,cont_1            ;there is no block so draw black edge
 884+ 927B D1                   pop de
 885+ 927C C1                   pop bc
 886+ 927D 18 AE                jr go_back4             ;otherwise quit this draw
 887+ 927F
 888+ 927F EB           cont_1  ex  de,hl
 889+ 9280 11 21 00             ld de,$0021
 890+ 9283 3E B3                ld  a,_topcorner4      ;triangle sloping to right bottom
 891+ 9285 77                   ld  (hl),a
 892+ 9286 19                   add hl,de
 893+ 9287 3E AF                ld  a,_black      ;triangle sloping to right bottom
 894+ 9289 77                   ld  (hl),a
 895+ 928A 19                   add hl,de
 896+ 928B 3E AF                ld  a,_black      ;triangle sloping to right bottom
 897+ 928D 77                   ld  (hl),a
 898+ 928E 19                   add hl,de
 899+ 928F
 900+ 928F 77                   ld  (hl),a
 901+ 9290 3E B0                ld  a,_topcorner1
 902+ 9292 77                   ld  (hl),a
 903+ 9293 D1                   pop de
 904+ 9294 C1                   pop bc
 905+ 9295 18 96                jr go_back4              ; jump back to main loop
 906+ 9297
 907+ 9297              ;************************************
 908+ 9297              ;*Draw the 2nd LEFT block of section 4
 909+ 9297              ;************************************
 910+ 9297
 911+ 9297              draw_9_2L:
 912+ 9297 C5                   push bc
 913+ 9298 21 FF FF             ld hl,$ffff                 ;move start point (-1) `to correct position
 914+ 929B 19                   add hl,de
 915+ 929C EB                   ex de,hl
 916+ 929D D5                   push de
 917+ 929E
 918+ 929E              ;now draw the 2nd wall itself
 919+ 929E 06 04                ld b,4                  ;block is 4 blocks high
 920+ 92A0 21 21 00             ld hl,$0021           ;load with 32 to jump to line below us
 921+ 92A3 3E B7                ld a,_mediumwall_1      ;grey sides facing us
 922+ 92A5
 923+ 92A5              loop10r_2L:
 924+ 92A5 12                   ld (de),a             ; insert thepart of the wall.
 925+ 92A6 1B                   dec de
 926+ 92A7 12                   ld (de),a               ;put grey side to our right
 927+ 92A8 1B                   dec de
 928+ 92A9 12                   ld (de),a
 929+ 92AA 1B                   dec de
 930+ 92AB 12                   ld (de),a
 931+ 92AC 1B                   dec de
 932+ 92AD 12                   ld (de),a
 933+ 92AE 13                   inc de
 934+ 92AF 13                   inc de
 935+ 92B0 13                   inc de
 936+ 92B1 13                   inc de                  ;go left 1 again
 937+ 92B2 EB                   ex de,hl
 938+ 92B3 19                   add  hl,de              ; advance to the next row of the display file.
 939+ 92B4 EB                   ex de,hl
 940+ 92B5 10 EE                djnz loop10r_2L             ;do this 3 times
 941+ 92B7
 942+ 92B7                      ;now draw the blank face
 943+ 92B7 D1                   pop de                  ;back to our original position
 944+ 92B8 D5                   push de
 945+ 92B9 13                   inc de                  ;move left 3 space left in the display
 946+ 92BA 13                   inc de
 947+ 92BB 13                   inc de
 948+ 92BC
 949+ 92BC              ;check if the char to our right is a wall block.
 950+ 92BC              ;if so, do not draw a black face as we need to hide it or it will
 951+ 92BC              ;ovewrite the already drawn block
 952+ 92BC
 953+ 92BC 1A                   ld a,(de)
 954+ 92BD FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
 955+ 92BF C2 C7 92             jp nz,cont_1r_2L           ;there is no block so draw black edge
 956+ 92C2 D1                   pop de
 957+ 92C3 C1                   pop bc
 958+ 92C4 C3 2D 92             jp go_back4             ;otherwise quit this draw
 959+ 92C7
 960+ 92C7              cont_1r_2L:
 961+ 92C7 EB                   ex  de,hl
 962+ 92C8 11 21 00             ld de,$0021
 963+ 92CB
 964+ 92CB              ;need to loop 2 times drawing 2 lots of 3 top
 965+ 92CB              ;& bottom chars- move down 1after 1st 3 top chars drawn
 966+ 92CB              ;
 967+ 92CB
 968+ 92CB 3E 02                ld a,2
 969+ 92CD 32 18 FA             ld (var7),a             ;save initial count for 2 draws
 970+ 92D0
 971+ 92D0              ;loop for 2 black wall columns
 972+ 92D0 3E 03                ld a,3                  ;column start height
 973+ 92D2 32 04 FA             ld (var1),a             ;save the count for the column hight minus the top corners
 974+ 92D5
 975+ 92D5 06 03                ld b,3                  ;loop 3 times for 3 columns
 976+ 92D7 22 13 FA             ld (var5),hl            ;address of first face block after corner chamfer
 977+ 92DA 3E 97                ld a,$97
 978+ 92DC 32 05 FA             ld (var2),a             ;ld var2 with top right sloping corner black
 979+ 92DF
 980+ 92DF              loop10br_2L:
 981+ 92DF C5                   push bc                 ;save count
 982+ 92E0 3A 04 FA             ld a,(var1)             ;column height
 983+ 92E3 47                   ld b,a                  ;holds the column height in chars
 984+ 92E4 3A 05 FA             ld  a,(var2)            ;triangle sloping to right bottom
 985+ 92E7 F5                   push af                 ;save a for bottom corners
 986+ 92E8 77                   ld  (hl),a
 987+ 92E9
 988+ 92E9              loop10ar_2L:
 989+ 92E9 19                   add hl,de
 990+ 92EA 3E AF                ld  a,_black            ;black wall fill
 991+ 92EC 77                   ld  (hl),a              ;draw 6 black blocks and3 edges
 992+ 92ED 10 FA                djnz loop10ar_2L
 993+ 92EF
 994+ 92EF F1                   pop af                  ;retrivetop corner
 995+ 92F0 3D                   dec a                   ;prep for next top corner
 996+ 92F1 32 05 FA             ld (var2),a             ;re-save it for next corner
 997+ 92F4 C6 04                add a,4                 ;get the correct char to print
 998+ 92F6 77                   ld  (hl),a              ;draw the bottom of the wall
 999+ 92F7
1000+ 92F7                      ;now change column count
1001+ 92F7 3A 04 FA             ld a,(var1)
1002+ 92FA C1                   pop bc
1003+ 92FB
1004+ 92FB 2A 13 FA             ld hl,(var5)
1005+ 92FE 2B                   dec hl                  ;move print position to the left
1006+ 92FF 22 13 FA             ld (var5),hl
1007+ 9302
1008+ 9302 10 DB                djnz loop10br_2L
1009+ 9304
1010+ 9304 D1                   pop de
1011+ 9305 C1                   pop bc
1012+ 9306 C3 2D 92             jp go_back4             ; jump back to main loop
1013+ 9309
1014+ 9309              ;#############################################
1015+ 9309              ;*Draw the 3rd LEFT block of section 4
1016+ 9309              ;#############################################
1017+ 9309
1018+ 9309              draw_9_3L:
1019+ 9309 C5                   push bc
1020+ 930A D5                   push de                 ;save our display pointer
1021+ 930B 06 04                ld b,4                  ;block is 4 blocks high
1022+ 930D 21 21 00             ld hl,$0021             ;load with 32 to jump to line below us
1023+ 9310 11 4A C1             ld de,$C162-24              ;start of drawing
1024+ 9313
1025+ 9313              loop10r_3L:
1026+ 9313 3E B7                ld a,_mediumwall_1      ;grey sides facing us
1027+ 9315 12                   ld (de),a               ; insert thepart of the wall.
1028+ 9316 EB                   ex de,hl
1029+ 9317 19                   add  hl,de              ; advance to the next row of the display file.
1030+ 9318 EB                   ex de,hl
1031+ 9319 10 F8                djnz loop10r_3L             ;do this 3 times
1032+ 931B
1033+ 931B                      ;now draw the blank face
1034+ 931B D1                   pop de                  ;back to our original position
1035+ 931C D5                   push de
1036+ 931D
1037+ 931D              ;check if the char to our right is a wall block.
1038+ 931D              ;if so, do not draw a black face as we need to hide it or it will
1039+ 931D              ;ovewrite the already drawn block
1040+ 931D
1041+ 931D 1A                   ld a,(de)
1042+ 931E FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
1043+ 9320 C2 28 93             jp nz,cont_1r_3L            ;there is no block so draw black edge
1044+ 9323
1045+ 9323 D1                   pop de
1046+ 9324 C1                   pop bc
1047+ 9325 C3 2D 92             jp go_back4             ;otherwise quit this draw
1048+ 9328
1049+ 9328              cont_1r_3L:
1050+ 9328 EB                   ex de,hl
1051+ 9329 11 21 00             ld de,$0021
1052+ 932C 21 4B C1             ld hl,$c161-22
1053+ 932F
1054+ 932F              ;need to loop 2 times drawing 2 lots of 3 top
1055+ 932F              ;& bottom chars- move down 1after 1st 3 top chars drawn
1056+ 932F              ;
1057+ 932F
1058+ 932F              ;loop for 5 black wall columns
1059+ 932F 3E 03                ld a,3                  ;column start height
1060+ 9331 32 04 FA             ld (var1),a           ;save the count for the column hight minus the top corners
1061+ 9334
1062+ 9334 06 05                ld b,5                  ;loop 5 times for 3 columns
1063+ 9336 22 13 FA             ld (var5),hl            ;address of first face block after corner chamfer
1064+ 9339 3E CD                ld a,$cd ;91
1065+ 933B 32 05 FA             ld (var2),a             ;ld var2 with top right sloping corner black
1066+ 933E
1067+ 933E              loop10br_2aL:
1068+ 933E C5                   push bc                 ;save count
1069+ 933F 3A 04 FA             ld a,(var1)             ;column height
1070+ 9342 47                   ld b,a                  ;holds the column height in chars
1071+ 9343 3A 05 FA             ld  a,(var2)            ;triangle sloping to right bottom
1072+ 9346 F5                   push af                 ;save a for bottom corners
1073+ 9347 77                   ld  (hl),a
1074+ 9348
1075+ 9348              loop10ar_2aL:
1076+ 9348 19                   add hl,de
1077+ 9349 3E AF                ld  a,_black            ;black wall fill
1078+ 934B 77                   ld  (hl),a              ;draw 6 black blocks and3 edges
1079+ 934C 10 FA                djnz loop10ar_2aL
1080+ 934E
1081+ 934E F1                   pop af                  ;retrivetop corner
1082+ 934F 3D                   dec a                   ;prep for next top corner
1083+ 9350 32 05 FA             ld (var2),a             ;re-save it for next corner
1084+ 9353 C6 06                add a,6                 ;get the correct char to print
1085+ 9355 77                   ld  (hl),a              ;draw the bottom of the wall
1086+ 9356
1087+ 9356                      ;now change column count
1088+ 9356 3A 04 FA             ld a,(var1)
1089+ 9359 C1                   pop bc
1090+ 935A
1091+ 935A 2A 13 FA             ld hl,(var5)
1092+ 935D 23                   inc hl                  ;move print position to the right
1093+ 935E 22 13 FA             ld (var5),hl
1094+ 9361
1095+ 9361 10 DB                djnz loop10br_2aL
1096+ 9363
1097+ 9363 D1                   pop de
1098+ 9364 C1                   pop bc
1099+ 9365 C3 2D 92             jp go_back4              ; jump back to main loop
1100+ 9368
1101+ 9368              ;#############################################
1102+ 9368              ;*Draw the 4th LEFT block of section 4
1103+ 9368              ;#############################################
1104+ 9368
1105+ 9368              ; we only need to draw 2 columns of black sides.
1106+ 9368
1107+ 9368              draw_9_4L:
1108+ 9368
1109+ 9368              ; we only need to draw up to 2 columns of black sides.
1110+ 9368
1111+ 9368
1112+ 9368 C5                   push bc
1113+ 9369 D5                   push de                 ;save our display pointer
1114+ 936A
1115+ 936A              ;check if the char to our left is a wall block.
1116+ 936A              ;if so, do not draw a black face as we need to hide it or it will
1117+ 936A              ;ovewrite the already drawn block
1118+ 936A
1119+ 936A 21 4A C1             ld hl,$C151-7              ;start of drawing
1120+ 936D 7E                   ld a,(hl)
1121+ 936E FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
1122+ 9370 C2 78 93             jp nz,cont_3L            ;there is no block so draw black edge
1123+ 9373
1124+ 9373 D1                   pop de
1125+ 9374 C1                   pop bc
1126+ 9375 C3 2D 92             jp go_back4             ;otherwise quit this draw
1127+ 9378
1128+ 9378              cont_3L:
1129+ 9378 11 21 00             ld de,33                ;to jump to next line below
1130+ 937B 3E CA                ld a,$ca                ;top of the wall
1131+ 937D E5                   push hl                 ;save for drawing 2nd black wall
1132+ 937E 77                   ld (hl),a               ;to cover up wall 5
1133+ 937F 19                   add hl,de               ;jump to next line
1134+ 9380 3E AF                ld a,_black
1135+ 9382 77                   ld (hl),a
1136+ 9383 19                   add hl,de
1137+ 9384 77                   ld (hl),a
1138+ 9385 19                   add hl,de
1139+ 9386 3E CF                ld a,$cf                ;draw bottom of the line
1140+ 9388 77                   ld (hl),a
1141+ 9389
1142+ 9389              ;now check if we need to cover wall 5 with a 2nd black line to the left
1143+ 9389              ;hl points to top of the 4 blocks
1144+ 9389 E1                   pop hl                  ;restore our pointer in char ram
1145+ 938A 23                   inc hl                  ;go left 1 place
1146+ 938B E5                   push hl
1147+ 938C 19                   add hl,de               ;now we are at the wall 5 top position
1148+ 938D 7E                   ld a,(hl)
1149+ 938E FE B4                cp _smallwall
1150+ 9390 E1                   pop hl
1151+ 9391 20 0B                jr nz,exit3L
1152+ 9393              ;draw the second wall over section 5 wall
1153+ 9393 36 C9                ld (hl),$c9             ;top of the wall
1154+ 9395 19                   add hl,de
1155+ 9396 36 AF                ld (hl),_black
1156+ 9398 19                   add hl,de
1157+ 9399 36 AF                ld (hl),_black
1158+ 939B 19                   add hl,de
1159+ 939C 36 CE                ld (hl),$ce             ;bottom of the wall
1160+ 939E
1161+ 939E D1           exit3L:  pop de                  ;now exit
1162+ 939F C1                   pop bc
1163+ 93A0 C3 2D 92             jp go_back4
1164+ 93A3
1165+ 93A3              ;###################################################
1166+ 93A3              ;not needed down here
1167+ 93A3
1168+ 93A3 C5                   push bc
1169+ 93A4 D5                   push de                 ;save our display pointer
1170+ 93A5
1171+ 93A5              ;check if the char to our right is a wall block.
1172+ 93A5              ;if so, do not draw a black face as we need to hide it or it will
1173+ 93A5              ;ovewrite the already drawn block
1174+ 93A5
1175+ 93A5 21 4A C1             ld hl,$C151-7              ;start of drawing
1176+ 93A8 7E                   ld a,(hl)
1177+ 93A9 FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
1178+ 93AB C2 B3 93             jp nz,cont_3L_l            ;there is no block so draw black edge
1179+ 93AE
1180+ 93AE D1                   pop de
1181+ 93AF C1                   pop bc
1182+ 93B0 C3 2D 92             jp go_back4             ;otherwise quit this draw
1183+ 93B3
1184+ 93B3              cont_3L_l:
1185+ 93B3 06 04                ld b,4                  ;block is 4 blocks high
1186+ 93B5 3E CA                ld a,$ca
1187+ 93B7 77                   ld (hl),a
1188+ 93B8 23                   inc hl
1189+ 93B9 3D                   dec a
1190+ 93BA 77                   ld (hl),a
1191+ 93BB
1192+ 93BB              ;need 2 black walls now!
1193+ 93BB 3E AF                ld a,_black
1194+ 93BD 11 21 00             ld de,33;34                ;1 line width
1195+ 93C0
1196+ 93C0 CD D3 93             CALL black_wall_1         ;draw 2 black blocks
1197+ 93C3 13                   inc de                        ;jump to next line below
1198+ 93C4
1199+ 93C4 CD D3 93             CALL black_wall_1         ;draw 2 black blocks
1200+ 93C7 19                   add hl,de               ;jump to next line below
1201+ 93C8
1202+ 93C8
1203+ 93C8              ;top half done - so do bottom half - 2 blacks first
1204+ 93C8
1205+ 93C8              ;de already holds 34  -1 line plus 2 chars to the right
1206+ 93C8
1207+ 93C8 3E CE                ld a,$ce
1208+ 93CA 77                   ld (hl),a
1209+ 93CB 2B                   dec hl
1210+ 93CC 3C                   inc a
1211+ 93CD 77                   ld (hl),a
1212+ 93CE
1213+ 93CE D1                   pop de
1214+ 93CF C1                   pop bc
1215+ 93D0 C3 2D 92             jp go_back4
1216+ 93D3
1217+ 93D3              ;draw 2 black walls across 1 line
1218+ 93D3              black_wall_1:
1219+ 93D3 19                   add hl,de      ;jump 1 line below
1220+ 93D4 77                   ld (hl),a
1221+ 93D5 2B                   dec hl
1222+ 93D6 77                   ld (hl),a
1223+ 93D7 C9                   ret
1224+ 93D8
1225+ 93D8
1226+ 93D8
1227+ 93D8              ;#############################################
1228+ 93D8              ;#############################################
1229+ 93D8              ;# draw LEFT wall 3
1230+ 93D8              ;#############################################
1231+ 93D8              ;#############################################
1232+ 93D8
1233+ 93D8              draw_3:
1234+ 93D8              ;ret
1235+ 93D8              ; hl=maze location being drawn.
1236+ 93D8              ; now determine what to draw for this section.
1237+ 93D8
1238+ 93D8
1239+ 93D8 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
1240+ 93DB
1241+ 93DB CD 7B 8E             call load_de            ;get left and right and front jump into de reg
1242+ 93DE
1243+ 93DE 19                   add hl,de               ;jump backwards along the user view 1 space
1244+ 93DF 22 25 FA             ld (furthest_point),hl ;re save it
1245+ 93E2
1246+ 93E2 11 FF FF             ld de,$ffff             ;to move the display position -1
1247+ 93E5 ED 53 11 FA          ld (var4),de
1248+ 93E9
1249+ 93E9 ED 5B 0B FA          ld de,(left)            ;move our check position left -1
1250+ 93ED 19                   add hl,de
1251+ 93EE 22 15 FA             ld (var6),hl
1252+ 93F1
1253+ 93F1
1254+ 93F1 ED 53 0F FA          ld (var3),de
1255+ 93F5 11 0A 01             ld de,$10a;10b           ; offset to row 8 column5 - left of  centre of the 3d view.
1256+ 93F8
1257+ 93F8              ;2nd block starts at $109 and is 3 wall chars wide
1258+ 93F8 CD FE 93             call do_draw_3
1259+ 93FB
1260+ 93FB C3 6A 95             jp draw_2           ;now draw the 2nd level
1261+ 93FE
1262+ 93FE              do_draw_3:
1263+ 93FE
1264+ 93FE 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
1265+ 9401 19                   add  hl,de
1266+ 9402
1267+ 9402
1268+ 9402              ; draw left half of the display.
1269+ 9402
1270+ 9402 06 03                ld b,3                 ; count for 1 blocks left of display file
1271+ 9404 ED 5B 15 FA          ld de,(var6)           ; retrieve the maze location.
1272+ 9408
1273+ 9408
1274+ 9408 EB                   ex   de,hl              ; transfer de to hl.
1275+ 9409
1276+ 9409              ;       hl = furthest point in the maze
1277+ 9409              ;       de = d_file location to store byte to display
1278+ 9409
1279+ 9409              loop11:
1280+ 9409 E5                   push hl
1281+ 940A
1282+ 940A              ;################################################################
1283+ 940A
1284+ 940A              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
1285+ 940A              ;and stop drrawing anything else.
1286+ 940A
1287+ 940A 3A 28 FA             ld a,(maze_highbyte)
1288+ 940D BC                   cp h                    ;are we at the top part of the maze?
1289+ 940E CA 35 94             jp z,cont_3s
1290+ 9411                                              ;if we are on a different maze boundary
1291+ 9411                                              ;then draw a maze wall as we are the top
1292+ 9411                                              ;or north wall but maze data has no
1293+ 9411                                              ;wall data.
1294+ 9411              ;see which wall we are at and draw the correct one before jumping out
1295+ 9411              ;of the loop and stop drawing past the maze wall.
1296+ 9411
1297+ 9411              ;3 = first left wall
1298+ 9411              ;2 = 2nd left wall
1299+ 9411              ;1 = 4rd left wall
1300+ 9411
1301+ 9411 78                   ld a,b                  ;our current wall counter
1302+ 9412 D6 03                sub 3
1303+ 9414 C2 1F 94             jp nz,a3                 ;its not wall 1
1304+ 9417 3E 01                ld a,1
1305+ 9419 47                   ld b,a
1306+ 941A C6 80                add a,128               ;make sure we set a wall!
1307+ 941C C3 5A 94             jp draw_10             ;jump straight to making an end wall
1308+ 941F
1309+ 941F
1310+ 941F 78           a3:     ld a,b                  ;our current wall counter
1311+ 9420 D6 02                sub 2
1312+ 9422 C2 2D 94             jp nz,a3_1                 ;its not wall 1
1313+ 9425 3E 01                ld a,1
1314+ 9427 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
1315+ 9428 C6 80                add a,128               ;make sure we set a wall!
1316+ 942A C3 CC 94             jp draw_10_2L	       	;draw the 2nd wall to the right
1317+ 942D
1318+ 942D 3E 01        a3_1:   ld a,1
1319+ 942F 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
1320+ 9430 C6 80                add a,128               ;make sure we set a wall!
1321+ 9432 C3 3E 95             jp draw_10_3L	       	;draw the 2nd wall to the right
1322+ 9435
1323+ 9435              ;################################################################
1324+ 9435
1325+ 9435
1326+ 9435              ;now check if we are on the south wall and frig it to draw the
1327+ 9435              ;walls we need.
1328+ 9435              ;reg a already contains l
1329+ 9435
1330+ 9435              cont_3s:
1331+ 9435              ;        ld a,l
1332+ 9435              ;        cp $FA  ;250
1333+ 9435              ;        jp nz,cont_6
1334+ 9435              ;        ld l,240                ;fake it that we are at
1335+ 9435              ;        jp draw_10             ;the south wall
1336+ 9435
1337+ 9435
1338+ 9435 7E           cont_6: ld a,(hl)
1339+ 9436 17                   rla
1340+ 9437 DA 46 94             jp c,do_wall3            ;bit 7 (128)
1341+ 943A
1342+ 943A                     ; call do_no_wall3         ; otherwise draw no wall
1343+ 943A
1344+ 943A              go_back3:
1345+ 943A                    ;  ld hl,(var4)            ;used for left and right drawing
1346+ 943A                    ;  add hl,de               ; holds current screen position
1347+ 943A                    ;  ex de,hl
1348+ 943A              ;we move the start position of block number 2 to the left of the display
1349+ 943A              ;and although we overwrite the next block, we can still do the
1350+ 943A              ;check to see if a block is already drawn.
1351+ 943A
1352+ 943A                      ;dec de                  ;move our start print position
1353+ 943A                      ;dec de                  ;of block 2 back 3 spaces in the
1354+ 943A 1B                   dec de ;only 1 space back  ;display file
1355+ 943B E1                   pop hl
1356+ 943C D5                   push de
1357+ 943D ED 5B 0F FA          ld de,(var3)            ;used for left and right drawing
1358+ 9441 19                   add hl,de                ; go left 1 block in the maze
1359+ 9442 D1                   pop de
1360+ 9443 10 C4                djnz loop11
1361+ 9445 C9                   ret
1362+ 9446              ;now do the 2nd position
1363+ 9446
1364+ 9446
1365+ 9446
1366+ 9446              ; there is not a wall so insert black to show that the location is too far away to see its detail.
1367+ 9446
1368+ 9446              do_wall3:
1369+ 9446
1370+ 9446                      ;check if bit 2 is set as thats an end
1371+ 9446                      ;and b must then be changed to 1 to stop drawing.
1372+ 9446
1373+ 9446              ;        bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
1374+ 9446              ;        jr z,draw_10
1375+ 9446              ;        ld b,1                  ;set b so we exit on return
1376+ 9446
1377+ 9446              ;now draw the wall based on bc value
1378+ 9446              ;wall3_start:
1379+ 9446
1380+ 9446
1381+ 9446 78                   ld a,b			               ;b is the loop count i.e # of walls to draw
1382+ 9447 D6 03               	sub 3			               ;3 = the wall imediately right
1383+ 9449 CA 5A 94             jp z,draw_10          ;draw an end wall if blockid=16
1384+ 944C
1385+ 944C 78                   ld a,b
1386+ 944D D6 02                sub 2
1387+ 944F CA CC 94             jp z,draw_10_2L         		;draw the 1st wall to the right
1388+ 9452
1389+ 9452 78                   ld a,b
1390+ 9453 D6 01                sub 1
1391+ 9455 CA 3E 95             jp z,draw_10_3L	       	;draw the 2nd wall to the right
1392+ 9458
1393+ 9458 E1                   pop hl                  ;nothing to draw so return
1394+ 9459 C9                   ret
1395+ 945A
1396+ 945A
1397+ 945A              draw_10:
1398+ 945A C5                   push bc
1399+ 945B D5                   push de                 ;save our display pointer
1400+ 945C 1B                   dec de
1401+ 945D 1B                   dec de
1402+ 945E
1403+ 945E 06 08                ld b,8                  ;block is 8 blocks high
1404+ 9460 21 21 00             ld hl,$0021             ;load with 32 to jump to line below us
1405+ 9463 3E B5                ld a, _mediumwall       ;wall on sides facing us
1406+ 9465 12           loop12: ld (de),a               ; insert the part of the wall.
1407+ 9466 13                   inc de
1408+ 9467 12                   ld (de),a               ; insert the part of the wall.
1409+ 9468 13                   inc de
1410+ 9469 12                   ld (de),a               ; insert the part of the wall.
1411+ 946A 13                   inc de
1412+ 946B 12                   ld (de),a               ; insert the part of the wall.
1413+ 946C 13                   inc de
1414+ 946D 12                   ld (de),a               ; insert the part of the wall.
1415+ 946E 13                   inc de
1416+ 946F 12                   ld (de),a               ; insert the part of the wall.
1417+ 9470 13                   inc de
1418+ 9471 12                   ld (de),a
1419+ 9472 13                   inc de
1420+ 9473 12                   ld (de),a
1421+ 9474 1B                   dec de
1422+ 9475 1B                   dec de
1423+ 9476 1B                   dec de
1424+ 9477 1B                   dec de
1425+ 9478 1B                   dec de
1426+ 9479 1B                   dec de
1427+ 947A 1B                   dec de
1428+ 947B EB                   ex de,hl
1429+ 947C 19                   add  hl,de              ; advance to the next row of the display file.
1430+ 947D EB                   ex de,hl
1431+ 947E 10 E5                djnz loop12             ;do this 3 times
1432+ 9480
1433+ 9480                      ;now draw the blank face to the right of the block
1434+ 9480                      ;create first column of right face characters
1435+ 9480 D1                   pop de                  ;back to our original position
1436+ 9481 D5                   push de
1437+ 9482 13                   inc de
1438+ 9483 13                   inc de
1439+ 9484 13                   inc de
1440+ 9485 13                   inc de                  ;move ahead 5 spaces in the display (right)
1441+ 9486 13                   inc de
1442+ 9487 13                   inc de
1443+ 9488
1444+ 9488                  ;    inc de
1445+ 9488                  ;    inc de
1446+ 9488                  ;    inc de
1447+ 9488              ;check if the char to our right is a wall block.
1448+ 9488              ;if so, do not draw a black face as we need to hide it or it will
1449+ 9488              ;ovewrite the already drawn block
1450+ 9488              ;jp cont_2
1451+ 9488 1A                   ld a,(de)
1452+ 9489 FE B5                cp _mediumwall        ;is there an already drawn screen block here?
1453+ 948B C2 92 94             jp nz,cont_2            ;there is no block so draw black edge
1454+ 948E D1                   pop de
1455+ 948F C1                   pop bc
1456+ 9490 18 A8                jr go_back3             ;otherwise quit this draw
1457+ 9492
1458+ 9492 EB           cont_2: ex  de,hl
1459+ 9493 11 21 00             ld de,$0021
1460+ 9496
1461+ 9496              ;loop for 2 columns
1462+ 9496
1463+ 9496 06 02                ld b,2                  ; loop 2 times for 2 columns
1464+ 9498 22 13 FA             ld (var5),hl            ;address of first face block after corner chamfer
1465+ 949B 3E 07                ld a,7
1466+ 949D 32 04 FA             ld  (var1),a            ;save the count for the column hight minus the top corners
1467+ 94A0
1468+ 94A0              loop12b:
1469+ 94A0 C5                   push bc                 ;save count
1470+ 94A1 3A 04 FA             ld a,(var1)
1471+ 94A4 47                   ld b,a                  ;holds the column height in chars
1472+ 94A5 3E B3                ld  a,_topcorner4      ;triangle sloping to right bottom
1473+ 94A7 77                   ld  (hl),a
1474+ 94A8
1475+ 94A8              loop12a:                   ;we must start at 5 to draw 4 face blocks on right
1476+ 94A8 19                   add hl,de
1477+ 94A9 3E AF                ld  a,_black      ;triangle sloping to right bottom
1478+ 94AB 77                   ld  (hl),a              ;draw 6 black blocks and 2 edges
1479+ 94AC 10 FA                djnz loop12a
1480+ 94AE
1481+ 94AE
1482+ 94AE 3E B0                ld  a,_topcorner1
1483+ 94B0 77                   ld  (hl),a
1484+ 94B1
1485+ 94B1                      ;now change column count
1486+ 94B1 3A 04 FA             ld a,(var1)
1487+ 94B4 D6 02                sub 2                   ;subtract 2
1488+ 94B6 32 04 FA             ld (var1),a
1489+ 94B9 C1                   pop bc
1490+ 94BA
1491+ 94BA 2A 13 FA             ld hl,(var5)
1492+ 94BD 23                   inc hl                  ;move print position to the right
1493+ 94BE 11 21 00             ld de,$21               ;move top of next column down and across 1
1494+ 94C1 19                   add hl,de
1495+ 94C2 22 13 FA             ld (var5),hl
1496+ 94C5
1497+ 94C5 10 D9                djnz loop12b
1498+ 94C7 D1                   pop de
1499+ 94C8 C1                   pop bc
1500+ 94C9 C3 3A 94             jp go_back3              ; jump back to main loop
1501+ 94CC
1502+ 94CC
1503+ 94CC              ;#############################################
1504+ 94CC              ;     draw the 2nd LEFT block
1505+ 94CC              ;#############################################
1506+ 94CC
1507+ 94CC              draw_10_2L:
1508+ 94CC
1509+ 94CC C5                    push bc
1510+ 94CD 11 FF C0              ld de, $c110-17          ;start print position of wall
1511+ 94D0 D5                   push de
1512+ 94D1              ;dont draw a front wall as we never see it.
1513+ 94D1
1514+ 94D1 21 08 00             ld hl,8                 ;move 8 blocks over to start position
1515+ 94D4 19                   add hl,de
1516+ 94D5 EB                   ex de,hl
1517+ 94D6              ;we do not need a front wall for this row as it is never seen.
1518+ 94D6              ;below jp code can be removed :) Because a square block here
1519+ 94D6              ;is 8 x 8
1520+ 94D6
1521+ 94D6 13                   inc de                  ;move ahead 1 space in the display (right)
1522+ 94D7
1523+ 94D7              ;check if the char to our left is a wall block.
1524+ 94D7              ;if so, do not draw a black face as we need to hide it or it will
1525+ 94D7              ;ovewrite the already drawn block
1526+ 94D7 1A                    ld a,(de)
1527+ 94D8 FE B5                 cp _mediumwall        ;is there an already drawn screen block here?
1528+ 94DA C2 E2 94              jp nz,cont_2r_2L            ;there is no block so draw black edge
1529+ 94DD D1                    pop de
1530+ 94DE C1                    pop bc
1531+ 94DF C3 3A 94              jp go_back3             ;otherwise quit this draw
1532+ 94E2
1533+ 94E2
1534+ 94E2              ;draw the black edge wall
1535+ 94E2
1536+ 94E2              cont_2r_2L:
1537+ 94E2 EB                    ex  de,hl
1538+ 94E3 11 21 00              ld de,$0021
1539+ 94E6
1540+ 94E6              ;need to loop 2 times drawing 2 lots of 3 top
1541+ 94E6              ;& bottom chars- move down 1after 1st 3 top chars drawn
1542+ 94E6              ;
1543+ 94E6
1544+ 94E6 3E 02                ld a,2
1545+ 94E8 32 18 FA             ld (var7),a             ;save initial count for 2 draws
1546+ 94EB
1547+ 94EB              ;loop for 3 black wall columns
1548+ 94EB 3E 07                ld a,7                  ;column start height
1549+ 94ED 32 04 FA             ld  (var1),a            ;save the count for the column hight minus the top corners
1550+ 94F0
1551+ 94F0 06 03        loop_xL:ld b,3                  ;loop 3 times for 3 columns
1552+ 94F2 22 13 FA             ld (var5),hl            ;address of first face block after corner chamfer
1553+ 94F5 3E 95                ld a,$95
1554+ 94F7 32 05 FA             ld (var2),a             ;ld var2 with top right sloping corner black
1555+ 94FA
1556+ 94FA              loop12br_2L:
1557+ 94FA C5                   push bc                 ;save count
1558+ 94FB 3A 04 FA             ld a,(var1)             ;column height
1559+ 94FE 47                   ld b,a                  ;holds the column height in chars
1560+ 94FF 3A 05 FA             ld  a,(var2)            ;triangle sloping to right bottom
1561+ 9502 F5                   push af                 ;save a for bottom corners
1562+ 9503 77                   ld  (hl),a
1563+ 9504
1564+ 9504              loop12ar_2L:
1565+ 9504 19                   add hl,de
1566+ 9505 3E AF                ld  a,_black            ;black wall fill
1567+ 9507 77                   ld  (hl),a              ;draw 6 black blocks and3 edges
1568+ 9508 10 FA                djnz loop12ar_2L
1569+ 950A
1570+ 950A F1                   pop af                  ;retrivetop corner
1571+ 950B 3C                   inc a                   ;prep for next top corner
1572+ 950C 32 05 FA             ld (var2),a             ;re-save it for next corner
1573+ 950F C6 02                add a,2;4                 ;get the correct char to print
1574+ 9511 77                   ld  (hl),a              ;draw the bottom of the wall
1575+ 9512
1576+ 9512                      ;now change column count
1577+ 9512 3A 04 FA             ld a,(var1)
1578+ 9515 C1                   pop bc
1579+ 9516
1580+ 9516 2A 13 FA             ld hl,(var5)
1581+ 9519 23                   inc hl                  ;move print position to the left
1582+ 951A 22 13 FA             ld (var5),hl
1583+ 951D
1584+ 951D 10 DB                djnz loop12br_2L
1585+ 951F
1586+ 951F              ;1st set of 3 top bits drawn
1587+ 951F              ;now jump down the display 1 line
1588+ 951F              ;then draw another 3 columns
1589+ 951F
1590+ 951F 3A 18 FA             ld a,(var7)             ;get our loop counter
1591+ 9522 3D                   dec a
1592+ 9523 28 12                jr z,exit_1L             ;exit after 2 loops
1593+ 9525 32 18 FA             ld (var7),a             ;save it
1594+ 9528 2A 13 FA             ld hl,(var5)
1595+ 952B              ;get our last print position
1596+ 952B                                              ;need to go to next line -1 char
1597+ 952B 19                   add hl,de
1598+ 952C                                              ; now move back in the display
1599+ 952C                                              ;1 char
1600+ 952C 22 13 FA             ld (var5),hl            ;re save it for use above
1601+ 952F
1602+ 952F 3E 05                ld a,5                  ;reduce black wall column height
1603+ 9531 32 04 FA             ld  (var1),a            ;save the count for the column hight minus the top corners
1604+ 9534
1605+ 9534 C3 F0 94             jp loop_xL
1606+ 9537
1607+ 9537
1608+ 9537 D1           exit_1L: pop de
1609+ 9538 C1                   pop bc
1610+ 9539 06 01                ld b,1                  ;if we draw this wall, we need to stop drawing any more walls
1611+ 953B
1612+ 953B C3 3A 94             jp go_back3              ; jump back to main loop
1613+ 953E
1614+ 953E              ;#############################################
1615+ 953E              ;*Draw the 3rd LEFT block of section3
1616+ 953E              ;#############################################
1617+ 953E
1618+ 953E              ; we only need to draw 2 columns of black sides.
1619+ 953E              ; if theres no brick pattern !
1620+ 953E
1621+ 953E              draw_10_3L:
1622+ 953E C5                   push bc
1623+ 953F D5                   push de                 ;save our display pointer
1624+ 9540
1625+ 9540 21 29 C1             ld hl,$C18C-66-30-3              ;start of drawing
1626+ 9543 7E                   ld a,(hl)               ;read what char is there
1627+ 9544 FE B5                cp _mediumwall
1628+ 9546 20 05                jr nz,cont_1r_4L        ;exit if a wall is already there
1629+ 9548 D1                   pop de
1630+ 9549 C1                   pop bc
1631+ 954A C3 2D 92             jp go_back4             ;otherwise quit this draw
1632+ 954D
1633+ 954D              cont_1r_4L:
1634+ 954D
1635+ 954D 3E C9                ld a,$c9
1636+ 954F 77                   ld (hl),a
1637+ 9550
1638+ 9550 3E AF                ld a,_black
1639+ 9552 11 21 00             ld de,33                ;1 line width
1640+ 9555
1641+ 9555 CD 61 95             CALL black_wall         ;draw 4 black blocks
1642+ 9558
1643+ 9558 19                   add hl,de               ;jump to next line below
1644+ 9559
1645+ 9559
1646+ 9559              ;top half done - so do bottom half - 2 blacks first
1647+ 9559
1648+ 9559              ;de already holds 32
1649+ 9559
1650+ 9559 3E CE                ld a,$ce
1651+ 955B 77                   ld (hl),a
1652+ 955C
1653+ 955C D1                   pop de
1654+ 955D C1                   pop bc
1655+ 955E C3 3A 94             jp go_back3
1656+ 9561
1657+ 9561              ;draw 2 black walls across 1 line
1658+ 9561              black_wall:
1659+ 9561 19                   add hl,de      ;jump 1 line below
1660+ 9562 77                   ld (hl),a
1661+ 9563 19                   add hl,de      ;jump 1 line below
1662+ 9564 77                   ld (hl),a
1663+ 9565 19                   add hl,de      ;jump 1 line below
1664+ 9566 77                   ld (hl),a
1665+ 9567 19                   add hl,de      ;jump 1 line below
1666+ 9568 77                   ld (hl),a
1667+ 9569
1668+ 9569
1669+ 9569 C9                   ret
1670+ 956A
1671+ 956A
1672+ 956A
1673+ 956A              ;#############################################
1674+ 956A              ;#############################################
1675+ 956A              ; draw 2nd layer
1676+ 956A              ;#############################################
1677+ 956A              ;#############################################
1678+ 956A
1679+ 956A              draw_2:
1680+ 956A              ;
1681+ 956A              ;ret
1682+ 956A              ; hl=maze location being drawn.
1683+ 956A              ; now determine what to draw for this section.
1684+ 956A
1685+ 956A
1686+ 956A 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
1687+ 956D
1688+ 956D CD 7B 8E             call load_de            ;get left and right and front jump into de reg
1689+ 9570
1690+ 9570 19                   add hl,de               ;jump backwards along the user view 1 space
1691+ 9571 22 25 FA             ld (furthest_point),hl ;re save it
1692+ 9574
1693+ 9574 11 FF FF             ld de,$ffff             ;to move the display position -1
1694+ 9577 ED 53 11 FA          ld (var4),de
1695+ 957B
1696+ 957B ED 5B 0B FA          ld de,(left)
1697+ 957F
1698+ 957F              ;we need to move pointer 1 to the left for wall checking
1699+ 957F 19                   add hl,de
1700+ 9580 22 15 FA             ld (var6),hl ;re save it
1701+ 9583
1702+ 9583 ED 53 0F FA          ld (var3),de
1703+ 9587
1704+ 9587 11 A4 00             ld  de,$a4           ; offset to row10 column 7 - left of  centre of the 3d view.
1705+ 958A CD 90 95             call do_draw_2
1706+ 958D
1707+ 958D C3 22 96             jp draw_1           ;now draw the 2nd level
1708+ 9590
1709+ 9590              do_draw_2:
1710+ 9590
1711+ 9590 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
1712+ 9593 19                   add  hl,de
1713+ 9594
1714+ 9594
1715+ 9594              ; draw left half then right half of the display.
1716+ 9594
1717+ 9594 06 01                ld b,1                 ; count for 2 blocks left or right of display file
1718+ 9596                                              ; 0 is not counted so loops 12 times
1719+ 9596 ED 5B 15 FA          ld   de,(var6); retrieve the maze location.
1720+ 959A EB                   ex   de,hl              ; transfer de to hl.
1721+ 959B
1722+ 959B              ;       hl = furthest point in the maze
1723+ 959B              ;       de = d_file location to store byte to display
1724+ 959B
1725+ 959B E5           loop14: push hl
1726+ 959C
1727+ 959C              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
1728+ 959C
1729+ 959C 3A 28 FA             ld a,(maze_highbyte)
1730+ 959F BC                   cp h                    ;are we at the top part of the maze?
1731+ 95A0 CA AB 95             jp z,cont_2s
1732+ 95A3                                              ;if we are on a different maze boundary
1733+ 95A3                                              ;then draw a maze wall as we are the top
1734+ 95A3                                              ;or north wall but maze data has no
1735+ 95A3                                              ;wall data.
1736+ 95A3
1737+ 95A3 3E 01                ld a,1
1738+ 95A5 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
1739+ 95A6 C6 7F                add a,127               ;make sure we set a wall!
1740+ 95A8 C3 C0 95             jp do_wall2             ;jump straight to making an end wall
1741+ 95AB
1742+ 95AB              ;*#########################################
1743+ 95AB              cont_2s:
1744+ 95AB 7E                   ld a,(hl)
1745+ 95AC 17                   rla
1746+ 95AD DA C0 95             jp c,do_wall2            ;bit 7 (128)
1747+ 95B0
1748+ 95B0                     ; call do_no_wall2         ; otherwise draw no wall
1749+ 95B0
1750+ 95B0              go_back2:
1751+ 95B0 2A 11 FA             ld hl,(var4)            ;used for left and right drawing
1752+ 95B3 19                   add hl,de               ; holds current screen position
1753+ 95B4 EB                   ex de,hl
1754+ 95B5 E1                   pop hl
1755+ 95B6 D5                   push de
1756+ 95B7 ED 5B 0F FA          ld de,(var3)            ;used for left and right drawing
1757+ 95BB 19                   add hl,de                ; go left 1 block in the maze
1758+ 95BC D1                   pop de
1759+ 95BD 10 DC                djnz loop14
1760+ 95BF C9                   ret
1761+ 95C0              ;now do the 2nd position
1762+ 95C0
1763+ 95C0
1764+ 95C0              do_wall2:
1765+ 95C0                      ;check if bit 2 is set as thats an end
1766+ 95C0                      ;and b must then be changed to 1 to stop drawing.
1767+ 95C0
1768+ 95C0 CB 4F                bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
1769+ 95C2 28 02                jr z,draw_11
1770+ 95C4 06 01                ld b,1                  ;set b so we exit on return
1771+ 95C6
1772+ 95C6              draw_11:
1773+ 95C6                                   ; draw the wall face bit
1774+ 95C6 C5                   push bc
1775+ 95C7 D5                   push de
1776+ 95C8 13                   inc de
1777+ 95C9                                     ;save our display pointer
1778+ 95C9 06 0E                ld b,14                  ;block is 14 blocks high
1779+ 95CB 21 21 00             ld   hl,$0021           ;load with 32 to jump to line below us
1780+ 95CE 3E B6                ld   a,_largewall            ;wall on sides facing us
1781+ 95D0              loop13:
1782+ 95D0 12                   ld (de),a             ; insert the part of the wall.
1783+ 95D1 13                   inc de
1784+ 95D2 12                   ld (de),a               ;put grey side to our right
1785+ 95D3 13                   inc de
1786+ 95D4 12                   ld (de),a               ;put grey side to our right
1787+ 95D5 13                   inc de
1788+ 95D6 12                   ld (de),a               ;put grey side to our right
1789+ 95D7 13                   inc de
1790+ 95D8 12                   ld (de),a               ;put grey side to our right
1791+ 95D9 1B                   dec de
1792+ 95DA 1B                   dec de
1793+ 95DB 1B                   dec de
1794+ 95DC 1B                   dec de
1795+ 95DD EB                   ex de,hl
1796+ 95DE 19                   add  hl,de              ; advance to the next row of the display file.
1797+ 95DF EB                   ex de,hl
1798+ 95E0 10 EE                djnz loop13             ;do this 3 times
1799+ 95E2
1800+ 95E2                      ;now draw the blank face to the right of the block
1801+ 95E2                      ;create first column of right face characters
1802+ 95E2 D1                   pop de                  ;back to our original position
1803+ 95E3 13                   inc de
1804+ 95E4 13                   inc de
1805+ 95E5 13                   inc de                  ;move ahead 6 spaces in the display (right)
1806+ 95E6 13                   inc de
1807+ 95E7 13                   inc de
1808+ 95E8 13                   inc de
1809+ 95E9 EB                   ex  de,hl
1810+ 95EA 11 21 00             ld de,$0021
1811+ 95ED
1812+ 95ED 06 03                ld b,3                  ; for 8 face columns to draw to draw
1813+ 95EF 22 13 FA             ld (var5),hl
1814+ 95F2 3E 0D                ld a,13                 ; for 14 blocks high per column
1815+ 95F4 32 04 FA             ld (var1),a
1816+ 95F7
1817+ 95F7              loop13b:
1818+ 95F7 C5                   push bc
1819+ 95F8 3A 04 FA             ld a,(var1)
1820+ 95FB 47                   ld b,a
1821+ 95FC 3E B3                ld a,_topcorner4
1822+ 95FE 77                   ld (hl),a
1823+ 95FF
1824+ 95FF              loop13a:
1825+ 95FF 19                   add hl,de
1826+ 9600 3E AF                ld  a,_black  ;leftinnerwall  ;black      ;triangle sloping to right bottom
1827+ 9602 77                   ld  (hl),a              ;draw 14 black blocks and 3 edges
1828+ 9603 10 FA                djnz loop13a
1829+ 9605
1830+ 9605                      ;ld  (hl),a
1831+ 9605 3E B0                ld  a,_topcorner1
1832+ 9607 77                   ld  (hl),a
1833+ 9608
1834+ 9608              ; now change the column count
1835+ 9608 3A 04 FA             ld a,(var1)
1836+ 960B D6 02                sub 2
1837+ 960D 32 04 FA             ld (var1),a
1838+ 9610 C1                   pop bc
1839+ 9611
1840+ 9611 2A 13 FA             ld hl,(var5)
1841+ 9614 23                   inc hl
1842+ 9615 11 21 00             ld de,$21
1843+ 9618 19                   add hl,de
1844+ 9619 22 13 FA             ld (var5),hl
1845+ 961C
1846+ 961C 10 D9                djnz loop13b
1847+ 961E
1848+ 961E C1                   pop bc
1849+ 961F C3 B0 95             jp go_back2              ; jump back to main loop
1850+ 9622
1851+ 9622
1852+ 9622              ;#############################################
1853+ 9622              ; draw 1st layer
1854+ 9622              ;#############################################
1855+ 9622
1856+ 9622              draw_1:
1857+ 9622
1858+ 9622              ;ret
1859+ 9622              ; hl=maze location being drawn.
1860+ 9622              ; now determine what to draw for this section.
1861+ 9622
1862+ 9622
1863+ 9622 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
1864+ 9625
1865+ 9625 CD 7B 8E             call load_de            ;get left and right and front jump into de reg
1866+ 9628
1867+ 9628 19                   add hl,de               ;jump backwards along the user view 1 space
1868+ 9629 22 25 FA             ld (furthest_point),hl ;re save it
1869+ 962C
1870+ 962C 11 FF FF             ld de,$ffff             ;to move the display position -1
1871+ 962F ED 53 11 FA          ld (var4),de
1872+ 9633
1873+ 9633 ED 5B 0B FA          ld de,(left)
1874+ 9637
1875+ 9637              ;we need to move pointer 1 to the left for wall checking
1876+ 9637 19                   add hl,de
1877+ 9638 22 15 FA             ld (var6),hl
1878+ 963B
1879+ 963B ED 53 0F FA          ld (var3),de
1880+ 963F 11 20 00             ld  de,$020           ; offset to row 1 column 0 - left of  centre of the 3d view.
1881+ 9642 CD 48 96             call do_draw_1
1882+ 9645
1883+ 9645 C3 CB 96             jp draw_0           ;now draw the 2nd level
1884+ 9648
1885+ 9648              do_draw_1:
1886+ 9648
1887+ 9648 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
1888+ 964B 19                   add  hl,de
1889+ 964C
1890+ 964C
1891+ 964C              ; draw left half then right half of the display.
1892+ 964C
1893+ 964C 06 01                ld b,1                 ; count for 2 blocks left or right of display file
1894+ 964E                                              ; 0 is not counted so loops 12 times
1895+ 964E ED 5B 15 FA          ld   de,(var6); retrieve the maze location.
1896+ 9652 EB                   ex   de,hl              ; transfer de to hl.
1897+ 9653
1898+ 9653              ;       hl = furthest point in the maze
1899+ 9653              ;       de = d_file location to store byte to display
1900+ 9653
1901+ 9653 E5           loop15: push hl
1902+ 9654
1903+ 9654              ;see if we are at the north wall. If we dont, we get a left wall
1904+ 9654              ;drawn because we implicitly draw a wall if we are at the top
1905+ 9654
1906+ 9654              ;        ld a,(player_dir)
1907+ 9654              ;        cp 2                    ;r we looking south
1908+ 9654              ;        jp z,cont_7
1909+ 9654              ;        ld a,l
1910+ 9654              ;        cp 17
1911+ 9654              ;        jp c,do_wall1
1912+ 9654
1913+ 9654              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
1914+ 9654
1915+ 9654 3A 28 FA             ld a,(maze_highbyte)
1916+ 9657 BC                   cp h                    ;are we at the top part of the maze?
1917+ 9658 CA 63 96             jp z,cont_7
1918+ 965B                                              ;if we are on a different maze boundary
1919+ 965B                                              ;then draw a maze wall as we are the top
1920+ 965B                                              ;or north wall but maze data has no
1921+ 965B                                              ;wall data.
1922+ 965B
1923+ 965B 3E 01                ld a,1
1924+ 965D 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
1925+ 965E C6 7F                add a,127               ;make sure we set a wall!
1926+ 9660 C3 78 96             jp do_wall1             ;jump straight to making an end wall
1927+ 9663
1928+ 9663              ;#########################################################
1929+ 9663
1930+ 9663 7E           cont_7: ld a,(hl)
1931+ 9664 17                   rla
1932+ 9665 DA 78 96             jp c,do_wall1            ;bit 7 (128)
1933+ 9668
1934+ 9668                     ; call do_no_wall1         ; otherwise draw no wall
1935+ 9668
1936+ 9668              go_back1:
1937+ 9668 2A 11 FA             ld hl,(var4)            ;used for left and right drawing
1938+ 966B 19                   add hl,de               ; holds current screen position
1939+ 966C EB                   ex de,hl
1940+ 966D E1                   pop hl
1941+ 966E D5                   push de
1942+ 966F ED 5B 0F FA          ld de,(var3)            ;used for left and right drawing
1943+ 9673 19                   add hl,de                ; go left 1 block in the maze
1944+ 9674 D1                   pop de
1945+ 9675 10 DC                djnz loop15
1946+ 9677
1947+ 9677              ;jp draw_0
1948+ 9677 C9                   ret
1949+ 9678              ;now do the 2nd position
1950+ 9678
1951+ 9678
1952+ 9678
1953+ 9678              ; there is not a wall so insert black to show that the location is too far away to see its detail.
1954+ 9678
1955+ 9678              do_wall1:
1956+ 9678                      ;check if bit 2 is set as thats an end
1957+ 9678                      ;and b must then be changed to 1 to stop drawing.
1958+ 9678
1959+ 9678 CB 4F                bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
1960+ 967A 28 02                jr z,draw_12
1961+ 967C 06 01                ld b,1                  ;set b so we exit on return
1962+ 967E
1963+ 967E              ;draw the corridor bit to the left (1 column)
1964+ 967E              draw_12:
1965+ 967E C5                   push bc
1966+ 967F D5                   push de                 ;save our display pointer
1967+ 9680 06 16                ld b,22                  ;block is 22 blocks high
1968+ 9682 21 21 00             ld   hl,$0021           ;load with 32 to jump to line below us
1969+ 9685 3E B8                ld   a,_hugewall;_largewall            ;wall on sides facing us
1970+ 9687 12           loop16: ld   (de),a             ; insert thepart of the wall.
1971+ 9688 13                   inc de
1972+ 9689 12                   ld (de),a               ;put grey side to our right
1973+ 968A                      ;inc de
1974+ 968A                      ;ld (de),a               ;put grey side to our right
1975+ 968A                      ;inc de
1976+ 968A                      ;ld (de),a               ;put grey side to our right
1977+ 968A                      ;inc de
1978+ 968A                      ;ld (de),a               ;put grey side to our right
1979+ 968A                      ;dec de
1980+ 968A                      ;dec de
1981+ 968A                      ;dec de
1982+ 968A 1B                   dec de
1983+ 968B EB                   ex de,hl
1984+ 968C 19                   add  hl,de              ; advance to the next row of the display file.
1985+ 968D EB                   ex de,hl
1986+ 968E 10 F7                djnz loop16             ;do this 3 times
1987+ 9690
1988+ 9690                      ;now draw the blank face to the right of the block
1989+ 9690                      ;create first column of right face characters
1990+ 9690 D1                   pop de                  ;back to our original position
1991+ 9691                      ;inc de
1992+ 9691                      ;inc de
1993+ 9691                      ;inc de                  ;move ahead 4 spaces in the display (right)
1994+ 9691 13                   inc de
1995+ 9692 13                   inc de
1996+ 9693 EB                   ex  de,hl
1997+ 9694 11 21 00             ld de,$0021
1998+ 9697
1999+ 9697              ;now draw the face we see on our left as we walk forward
2000+ 9697 06 04                ld b,4                  ; for 8 face columns to draw to draw
2001+ 9699 22 13 FA             ld (var5),hl
2002+ 969C 3E 15                ld a,21                 ; for 14 blocks high per column
2003+ 969E 32 04 FA             ld (var1),a
2004+ 96A1
2005+ 96A1              loop14b:
2006+ 96A1 C5                   push bc
2007+ 96A2 3A 04 FA             ld a,(var1)
2008+ 96A5 47                   ld b,a
2009+ 96A6 3E B3                ld a,_topcorner4
2010+ 96A8 77                   ld (hl),a
2011+ 96A9
2012+ 96A9              loop14a:
2013+ 96A9 19                   add hl,de
2014+ 96AA 3E AF                ld  a,_black            ;triangle sloping to right bottom
2015+ 96AC 77                   ld  (hl),a              ;draw 14 black blocks and 3 edges
2016+ 96AD 10 FA                djnz loop14a
2017+ 96AF
2018+ 96AF                      ;ld  (hl),a
2019+ 96AF 3E B0                ld  a,_topcorner1
2020+ 96B1 77                   ld  (hl),a
2021+ 96B2
2022+ 96B2              ; now change the column count
2023+ 96B2 3A 04 FA             ld a,(var1)
2024+ 96B5 D6 02                sub 2
2025+ 96B7 32 04 FA             ld (var1),a
2026+ 96BA C1                   pop bc
2027+ 96BB
2028+ 96BB 2A 13 FA             ld hl,(var5)
2029+ 96BE 23                   inc hl
2030+ 96BF 11 21 00             ld de,$21
2031+ 96C2 19                   add hl,de
2032+ 96C3 22 13 FA             ld (var5),hl
2033+ 96C6
2034+ 96C6 10 D9                djnz loop14b
2035+ 96C8
2036+ 96C8 C1                   pop bc
2037+ 96C9 18 9D                jr go_back1              ; jump back to main loop
2038+ 96CB
2039+ 96CB              ;        jp draw_1               ;draw next layer
2040+ 96CB
2041+ 96CB              ; there is a wall so insert chequerboard for the wall face.
2042+ 96CB
2043+ 96CB              ;do_no_wall1:
2044+ 96CB              ;        ret ; no wall so do nothing
2045+ 96CB              ;        push de
2046+ 96CB              ;        ld   a,_topwhitebottomchequer
2047+ 96CB              ;        ld   (de),a                             ; insert the top of the wall face.
2048+ 96CB              ;        ld   hl,$0021
2049+ 96CB              ;        add  hl,de                              ; advance to the next row of the display file.
2050+ 96CB              ;        ld   (hl),_topchequerbottomwhite        ; insert the bottom of the wall face.
2051+ 96CB              ;        pop de
2052+ 96CB              ;        ret
2053+ 96CB
2054+ 96CB
2055+ 96CB
2056+ 96CB
2057+ 96CB              ;#############################################
2058+ 96CB              ; draw layer 0
2059+ 96CB              ;#############################################
2060+ 96CB
2061+ 96CB              draw_0:
2062+ 96CB              ;ret
2063+ 96CB
2064+ 96CB
2065+ 96CB              ; hl=maze location being drawn.
2066+ 96CB              ; now determine what to draw for this section.
2067+ 96CB
2068+ 96CB
2069+ 96CB 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
2070+ 96CE
2071+ 96CE CD 7B 8E             call load_de            ;get left and right and front jump into de reg
2072+ 96D1
2073+ 96D1 19                   add hl,de               ;jump backwards along the user view 1 space
2074+ 96D2
2075+ 96D2              ;move map pointer left to read the walls
2076+ 96D2              ;;        ld de,(left)
2077+ 96D2              ;;        add hl,de
2078+ 96D2
2079+ 96D2
2080+ 96D2
2081+ 96D2              ;;        ld (furthest_point),hl ;re save it
2082+ 96D2
2083+ 96D2              ;        ld de,$ffff             ;to move the display position -1
2084+ 96D2              ;        ld (var4),de
2085+ 96D2
2086+ 96D2 ED 5B 0B FA          ld de,(left)
2087+ 96D6
2088+ 96D6              ;we need to move pointer 1 to the left for wall checking
2089+ 96D6 19                   add hl,de
2090+ 96D7 22 15 FA             ld (var6),hl
2091+ 96DA
2092+ 96DA ED 53 0F FA          ld (var3),de
2093+ 96DE 11 00 00             ld  de,$00              ;offset to row0 column 0 - left of  centre of the 3d view.
2094+ 96E1                                              ;1 column of left face to draw
2095+ 96E1                  ;    call do_draw_0
2096+ 96E1
2097+ 96E1
2098+ 96E1              do_draw_0:
2099+ 96E1
2100+ 96E1 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
2101+ 96E4 19                   add  hl,de
2102+ 96E5
2103+ 96E5
2104+ 96E5              ; draw left half then right half of the display.
2105+ 96E5
2106+ 96E5 06 01                ld b,1                 ; count for 2 blocks left or right of display file
2107+ 96E7 ED 5B 15 FA          ld de,(var6)           ; 0 is not counted so loops 12 times
2108+ 96EB                     ; ld   de,(furthest_point); retrieve the maze location.
2109+ 96EB EB                   ex   de,hl              ; transfer de to hl.
2110+ 96EC
2111+ 96EC              ;       hl = furthest point in the maze
2112+ 96EC              ;       de = d_file location to store byte to display
2113+ 96EC
2114+ 96EC              loop17: ;push hl
2115+ 96EC
2116+ 96EC
2117+ 96EC              ;check if we are at the north wall
2118+ 96EC
2119+ 96EC              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
2120+ 96EC
2121+ 96EC 3A 28 FA             ld a,(maze_highbyte)
2122+ 96EF BC                   cp h                    ;are we at the top part of the maze?
2123+ 96F0 CA FB 96             jp z,cont_4
2124+ 96F3                                              ;if we are on a different maze boundary
2125+ 96F3                                              ;then draw a maze wall as we are the top
2126+ 96F3                                              ;or north wall but maze data has no
2127+ 96F3                                              ;wall data.
2128+ 96F3
2129+ 96F3 3E 01                ld a,1
2130+ 96F5 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
2131+ 96F6 C6 7F                add a,127               ;make sure we set a wall!
2132+ 96F8 C3 09 97             jp draw_13             ;jump straight to making an end wall
2133+ 96FB
2134+ 96FB              ;##########################################
2135+ 96FB
2136+ 96FB 7E           cont_4: ld a,(hl)
2137+ 96FC 17                   rla
2138+ 96FD DA 01 97             jp c,do_wall0            ;bit 7 (128)
2139+ 9700
2140+ 9700 C9                   ret
2141+ 9701
2142+ 9701
2143+ 9701
2144+ 9701              do_wall0:
2145+ 9701                      ;check if bit 2 is set as thats an end
2146+ 9701                      ;and b must then be changed to 1 to stop drawing.
2147+ 9701
2148+ 9701 CB 4F                bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
2149+ 9703 DA 09 97             jp c,draw_13
2150+ 9706
2151+ 9706 C3 22 97             jp draw_brick_l         ; otherwise draw no wall
2152+ 9709
2153+ 9709              ;we need to draw 1 vertical line from pos 1,1 to show
2154+ 9709              ;the side of the block.
2155+ 9709
2156+ 9709              ;draw the sidewall brick pattern
2157+ 9709              draw_13:
2158+ 9709 3E B3                ld a,_topcorner4
2159+ 970B 12                   ld (de),a
2160+ 970C 21 21 00             ld hl,$21                ;jp to next line below
2161+ 970F 19                   add hl,de
2162+ 9710 EB                   ex de,hl
2163+ 9711
2164+ 9711 06 16                ld b,22                  ;block is 24 blocks high
2165+ 9713 21 21 00             ld hl,$021           ;load with 32 to jump to line below us
2166+ 9716 3E AF                ld a,_black            ;wall on sides facing us;
2167+ 9718 12           loop18: ld (de),a             ; insert the part of the wall.
2168+ 9719 EB                   ex de,hl
2169+ 971A 19                   add  hl,de              ; advance to the next row of the display file.
2170+ 971B EB                   ex de,hl
2171+ 971C 10 FA                djnz loop18
2172+ 971E
2173+ 971E 3E B0                ld a,_topcorner1
2174+ 9720 12                   ld (de),a
2175+ 9721 C9                   ret
2176+ 9722
2177+ 9722              draw_brick_l:
2178+ 9722 21 21 00             ld hl,$21                ;jp to next line below
2179+ 9725 19                   add hl,de
2180+ 9726 EB                   ex de,hl
2181+ 9727
2182+ 9727 06 16                ld b,22                  ;block is 24 blocks high
2183+ 9729 21 21 00             ld hl,$021
2184+ 972C                                         ;load with 32 to jump to line below us
2185+ 972C 3E B8                ld a,_hugewall;_largewall            ;wall on sides facing us;
2186+ 972E              loop18l:
2187+ 972E 12                   ld (de),a             ; insert the part of the wall.
2188+ 972F EB                   ex de,hl
2189+ 9730 19                   add  hl,de              ; advance to the next row of the display file.
2190+ 9731 EB                   ex de,hl
2191+ 9732 10 FA                djnz loop18l
2192+ 9734
2193+ 9734 C9                   ret
2194+ 9735
# file closed: src/4-rd3dmazeV6.asm
 469  9735                  INCLUDE "5-rd3dmazeV6.asm" ; draw wall in front of player+setup right part of screen
# file opened: src/5-rd3dmazeV6.asm
   1+ 9735
   2+ 9735
   3+ 9735              ;#############################################
   4+ 9735              ;original code to draw maze FRONT walls here from 3D Monster Maze
   5+ 9735              ;call it a homage ;)
   6+ 9735              ;#############################################
   7+ 9735
   8+ 9735
   9+ 9735              ; ############################
  10+ 9735              ; draw wall in front of player
  11+ 9735              ; ############################
  12+ 9735
  13+ 9735              ; a wall face must be drawn centred within the view.
  14+ 9735              ; the wall face is one character wider than it is high.
  15+ 9735
  16+ 9735              draw_front_view:
  17+ 9735
  18+ 9735              ;        ld a,(depth)            ;find out how far we can see - will never be higher than 6
  19+ 9735 3A 02 FA             ld a, (maxview)
  20+ 9738 FE 06                cp 6
  21+ 973A C8                   ret z				               ;too far away so return doing nothing
  22+ 973B FE 05        	    cp 5
  23+ 973D C8                   ret z
  24+ 973E C2 4B 97             jp nz,set4
  25+ 9741 0E 0D                ld c,13;12
  26+ 9743 3E B4        		ld a,_smallwall			      ;this is the character to draw (brick pattern)
  27+ 9745 32 04 FA     		ld (var1),a
  28+ 9748 C3 8E 97             jp draw_wall
  29+ 974B FE 04        set4:   cp 4
  30+ 974D C2 5A 97             jp nz,set3
  31+ 9750 0E 0B                ld c,11
  32+ 9752 3E B4        		ld a,_smallwall 			     ;this is the character to draw (brick pattern)
  33+ 9754 32 04 FA     		ld (var1),a
  34+ 9757 C3 8E 97             jp draw_wall
  35+ 975A FE 03        set3:   cp 3
  36+ 975C C2 69 97             jp nz,set2
  37+ 975F 0E 0A                ld c,10
  38+ 9761 3E B7        		ld a,_mediumwall_1			   ;this is the character to draw (brick pattern)
  39+ 9763 32 04 FA     		ld (var1),a
  40+ 9766 C3 8E 97             jp draw_wall
  41+ 9769 FE 02        set2:   cp 2
  42+ 976B C2 78 97             jp nz,set1
  43+ 976E 0E 08                ld c,8
  44+ 9770 3E B5        		ld a,_mediumwall			      ;this is the character to draw (brick pattern)
  45+ 9772 32 04 FA     		ld (var1),a
  46+ 9775 C3 8E 97             jp draw_wall
  47+ 9778 FE 01        set1:   cp 1
  48+ 977A C2 87 97             jp nz,set0
  49+ 977D 0E 05                ld c,5
  50+ 977F 3E B6        		ld a,_largewall			      ;this is the character to draw (brick pattern)
  51+ 9781 32 04 FA     		ld (var1),a
  52+ 9784 C3 8E 97             jp draw_wall
  53+ 9787              ;must be zero if we get here
  54+ 9787 0E 01        set0:   ld c,1
  55+ 9789 3E B8                ld a,_hugewall;_largewall
  56+ 978B 32 04 FA             ld (var1),a
  57+ 978E
  58+ 978E              draw_wall:
  59+ 978E              ;ld c,1 ;section from player
  60+ 978E
  61+ 978E 2A 86 81     l49f6:  ld   hl,(d_file)                        ; fetch the location of the display file.
  62+ 9791 11 21 00             ld   de,$0021                           ; each row is 33 characters wide.
  63+ 9794
  64+ 9794              ;        ld   bc,(l4085)                         ; fetch the details for the section: b=width of section, c=distance of section from player.
  65+ 9794 06 00                ld   b,$00
  66+ 9796 09                   add  hl,bc                              ; advance across the screen to the current distance of the wall.
  67+ 9797
  68+ 9797 3E 19                ld   a,$19                              ; the width of the view.
  69+ 9799 41                   ld   b,c                                ; fetch the distance.
  70+ 979A CB 20                sla  b                                  ; multiply the distance by 2 since the wall be spans to the left and right of the centre column of the view.
  71+ 979C 90                   sub  b                                  ; determine the width of the wall face.
  72+ 979D 47                   ld   b,a                                ; b=width of the wall face (it will be an odd number of characters).
  73+ 979E
  74+ 979E D6 01                sub  $01                                ; determine the wall height (it will be an even number of characters).
  75+ 97A0
  76+ 97A0              ; enter a loop to draw each column of the wall face.
  77+ 97A0
  78+ 97A0 C5           l4a0d:  push bc                                 ; save the wall face width.
  79+ 97A1 E5                   push hl                                 ; save the address within the display file.
  80+ 97A2
  81+ 97A2 41                   ld   b,c                                ; fetch the distance, which corresponds to the number of blank rows to show above the wall face.
  82+ 97A3
  83+ 97A3 36 20        l4a10:  ld   (hl),_space                        ; insert a space above the wall face.
  84+ 97A5 19                   add  hl,de                              ; advance to the next row.
  85+ 97A6 10 FB                djnz l4a10                              ; repeat for all rows above the wall face.
  86+ 97A8
  87+ 97A8 47                   ld   b,a                                ; fetch the wall height.
  88+ 97A9
  89+ 97A9 F5           l4a16:  push af
  90+ 97AA 3A 04 FA     		ld a,(var1)
  91+ 97AD 77           		ld   (hl),a                             ; insert a wall face character into the display file.
  92+ 97AE F1                   pop af
  93+ 97AF 19           		      add  hl,de                              ; advance to the next row.
  94+ 97B0 10 F7                djnz l4a16                              ; repeat for all rows forming the height of the wall face.
  95+ 97B2
  96+ 97B2 41                   ld   b,c                                ; fetch the distance, which corresponds the the number of blank rows to show above the wall face.
  97+ 97B3 05                   dec  b                                  ; there is one less blank row below the wall face than above it due to the status message row.
  98+ 97B4 28 05                jr   z,l4a24                            ; jump if there are no rows below the wall to blank.
  99+ 97B6
 100+ 97B6 36 20        l4a1f:  ld   (hl),_space                        ; insert a space below the wall face.
 101+ 97B8 19                   add  hl,de                              ; advance to the next row.
 102+ 97B9 10 FB                djnz l4a1f                              ; repeat for all rows below the wall face.
 103+ 97BB
 104+ 97BB E1           l4a24:  pop  hl                                 ; retrieve the address within the display file.
 105+ 97BC 23                   inc  hl                                 ; advance to the next column to the right.
 106+ 97BD
 107+ 97BD C1                   pop  bc                                 ; retrieve the wall face width.
 108+ 97BE 10 E0                djnz l4a0d                              ; repeat for all columns of the wall face.
 109+ 97C0
 110+ 97C0              ;call my_print
 111+ 97C0 C9                   ret
 112+ 97C1
 113+ 97C1              ;#################################################################
 114+ 97C1              ;#################################################################
 115+ 97C1              ; draw maze end walls left and right of the player view
 116+ 97C1              ;#################################################################
 117+ 97C1              ;#################################################################
 118+ 97C1
 119+ 97C1              ;we will just copy parts of the front wall left and right on the screen
 120+ 97C1              ;depending if theres a side wall or not. No side wall, do nothing!
 121+ 97C1
 122+ 97C1              draw_side_walls
 123+ 97C1
 124+ 97C1              ;1st we need to know if the front view is a side wallsurrounding the maze
 125+ 97C1              ;this is $81 (129) if its a side wall
 126+ 97C1
 127+ 97C1              ;so we have an end wall here!
 128+ 97C1
 129+ 97C1              ;1st, check if maxdepth =4 or less. We do not want to draw anything for
 130+ 97C1              ;depth 5 or 6
 131+ 97C1
 132+ 97C1 B7                   or a                    ;clear carry flag
 133+ 97C2 3A 02 FA             ld a,(maxview)          ;how far we can see in front of us
 134+ 97C5 FE 05                cp 5
 135+ 97C7 D0                   ret nc                  ;exit if its 5 or greater
 136+ 97C8                                              ;carry set if <5
 137+ 97C8
 138+ 97C8              ;now check if maxview and depth are the same as this indicates a side wall
 139+ 97C8              ;reg a already contains maxview
 140+ 97C8              ;#        ld b,a
 141+ 97C8              ;#        ld a,(depth)
 142+ 97C8              ;#        sub b                   ;should be 0 if the same
 143+ 97C8              ;#        ret nz                  ;exit if different
 144+ 97C8
 145+ 97C8              ;now we cheat :) we just keep copying lines of the wall left & right
 146+ 97C8              ;untill we hit a non space in the display file!
 147+ 97C8
 148+ 97C8              ;reg a contains our depth
 149+ 97C8              ;        ld a,(maxview)
 150+ 97C8 3A 06 FA             ld a,(depth)
 151+ 97CB
 152+ 97CB FE 00                cp 0
 153+ 97CD                      ;depth 1
 154+ 97CD CA E5 97             jp z,cp_wall_1          ;wall immediately in front of us
 155+ 97D0 FE 01                cp 1
 156+ 97D2                      ;depth 2
 157+ 97D2 CA 0F 98             jp z,cp_wall_2
 158+ 97D5 FE 02                cp 2
 159+ 97D7                      ;depth 3
 160+ 97D7 CA 57 98             jp z,cp_wall_3
 161+ 97DA FE 03                cp 3
 162+ 97DC                      ;depth 4
 163+ 97DC CA 9F 98             jp z,cp_wall_4
 164+ 97DF FE 04                cp 4
 165+ 97E1                      ;depth 5
 166+ 97E1 CA EA 98             jp z,cp_wall_5
 167+ 97E4 C9                   ret                     ;go back now
 168+ 97E5
 169+ 97E5              cp_wall_1:
 170+ 97E5              ;do left side first - check for char A3 (black block for maze wall at a distance
 171+ 97E5
 172+ 97E5 21 4A C1             ld hl,$c14a             ;we should be 10 lines down(10,0)
 173+ 97E8 7E                   ld a,(hl)               ;check our character
 174+ 97E9 FE 20                cp ' '                  ;should be space indicating nothing there
 175+ 97EB
 176+ 97EB CC FE 97             call  z,loop91
 177+ 97EE                       ;draw left half
 178+ 97EE
 179+ 97EE              ;now do the right side
 180+ 97EE 21 39 C0             ld hl,$c039             ;we should be 10 lines down(10,24)
 181+ 97F1 7E                   ld a,(hl)               ;check our character
 182+ 97F2 FE 20                cp ' '                  ;should be space indicating noting there
 183+ 97F4 C0                   ret nz                  ;exit if no space there
 184+ 97F5 21 39 C0             ld hl,$c039             ;top left face
 185+ 97F8              ;        ld de,$c038             ;1 line right of front wall
 186+ 97F8 06 16                ld b,22                 ;copy 22 lines
 187+ 97FA C3 03 98             jp loop90               ;draw right side!
 188+ 97FD C9                   ret                     ;exit altogether
 189+ 97FE
 190+ 97FE 21 21 C0     loop91: ld hl,$c021             ;top left face
 191+ 9801              ;        ld de,$c022             ;1 line left
 192+ 9801 06 16                ld b,22                 ;copy 22 lines
 193+ 9803              loop90: ;ld a,(de)
 194+ 9803 3E B8                ld a,_hugewall
 195+ 9805 77                   ld (hl),a
 196+ 9806 D5                   push de
 197+ 9807 11 21 00             ld de,33
 198+ 980A 19                   add hl,de               ;go to next line
 199+ 980B D1                   pop de
 200+ 980C 10 F5                djnz loop90
 201+ 980E C9                   ret
 202+ 980F
 203+ 980F              cp_wall_2:
 204+ 980F              ;do left side first - check for char ' ' showing nothing drawn there
 205+ 980F
 206+ 980F 21 A9 C0             ld hl,$c0a9             ;we should be at the top left of the face
 207+ 9812 DD 21 A9 C0          ld ix,$c0a9
 208+ 9816              ;        ld de,$c0ab             ;1 line left of our wall face
 209+ 9816 11 1F FA             ld de,lr_wall
 210+ 9819 3E B6                ld a,_largewall
 211+ 981B 12                   ld (de),a
 212+ 981C
 213+ 981C 0E 05                ld c,5                  ;draw 5 columns to the border
 214+ 981E E5           loop80: push hl
 215+ 981F 06 0E                ld b,14
 216+ 9821 DD 7E 00             ld a,(ix+0)             ;check our character
 217+ 9824 FE 20                cp ' '                  ;should be space indicating noting there
 218+ 9826 CC 32 99             call z,loop93
 219+ 9829 DD 2B                dec ix
 220+ 982B E1                   pop hl
 221+ 982C 2B                   dec hl                 ;move left 1 line in the display
 222+ 982D 0D                   dec c
 223+ 982E C2 1E 98             jp nz,loop80            ;do this 5 times
 224+ 9831
 225+ 9831              ;now do the right side
 226+ 9831 21 B9 C0             ld hl,$c0b9             ;we should be at the top right of the face
 227+ 9834 DD 21 B9 C0          ld ix,$c0b9
 228+ 9838               ;       ld de,$c0b8             ;1 line left of our wall face
 229+ 9838 11 1F FA             ld de,lr_wall
 230+ 983B 3E B6                ld a,_largewall
 231+ 983D 12                   ld (de),a
 232+ 983E
 233+ 983E 0E 05                ld c,5                  ;draw 5 columns to the border
 234+ 9840 E5           loop81: push hl
 235+ 9841 06 0E                ld b,14
 236+ 9843 DD 7E 00             ld a,(ix+0)             ;check our character
 237+ 9846 FE 20                cp ' '                  ;should be space indicating noting there
 238+ 9848 C2 4E 98             jp nz,loop82            ;skip over if no space there
 239+ 984B CC 32 99             call z,loop93
 240+ 984E DD 23        loop82  inc ix
 241+ 9850                               ;do the next line
 242+ 9850 E1                   pop hl
 243+ 9851 23                   inc hl
 244+ 9852 0D                   dec c
 245+ 9853 C2 40 98             jp nz,loop81
 246+ 9856 C9                   ret                     ;exit routine totally
 247+ 9857
 248+ 9857              cp_wall_3:
 249+ 9857              ;do left side first - check for char ' ' showing nothing drawn there
 250+ 9857
 251+ 9857 21 0F C1             ld hl,$c10f             ;we should be at the top left of the face
 252+ 985A DD 21 0F C1          ld ix,$c10f
 253+ 985E              ;        ld de,$c110             ;1 line left of our wall face
 254+ 985E 11 1F FA             ld de,lr_wall
 255+ 9861 3E B5                ld a,_mediumwall
 256+ 9863 12                   ld (de),a
 257+ 9864
 258+ 9864 0E 08                ld c,8                  ;draw 8 columns to the border
 259+ 9866 E5           loop83: push hl
 260+ 9867 06 08                ld b,8                 ;10 chars high
 261+ 9869 DD 7E 00             ld a,(ix+0)             ;check our character
 262+ 986C FE 20                cp ' '                  ;should be space indicating noting there
 263+ 986E CC 32 99             call z,loop93
 264+ 9871 DD 2B                dec ix
 265+ 9873 E1                   pop hl
 266+ 9874 2B                   dec hl                 ;move left 1 line in the display
 267+ 9875 0D                   dec c
 268+ 9876 C2 66 98             jp nz,loop83            ;do this 5 times
 269+ 9879
 270+ 9879              ;now do the right side
 271+ 9879 21 19 C1             ld hl,$c119             ;we should be at the top right of the face
 272+ 987C DD 21 19 C1          ld ix,$c119
 273+ 9880              ;        ld de,$c118             ;1 line left of our wall face
 274+ 9880 11 1F FA             ld de,lr_wall
 275+ 9883 3E B5                ld a,_mediumwall
 276+ 9885 12                   ld (de),a
 277+ 9886
 278+ 9886 0E 08                ld c,8                  ;draw 8 columns to the border
 279+ 9888 E5           loop84: push hl
 280+ 9889 06 08                ld b,8                 ;8 chars high
 281+ 988B DD 7E 00             ld a,(ix+0)             ;check our character
 282+ 988E FE 20                cp ' '                  ;should be space indicating noting there
 283+ 9890 C2 96 98             jp nz,loop85            ;skip over if no space there
 284+ 9893 CC 32 99             call z,loop93
 285+ 9896 DD 23        loop85: inc ix
 286+ 9898                               ;do the next line
 287+ 9898 E1                   pop hl
 288+ 9899 23                   inc hl
 289+ 989A 0D                   dec c
 290+ 989B C2 88 98             jp nz,loop84
 291+ 989E C9                   ret                     ;exit routine totally
 292+ 989F
 293+ 989F              cp_wall_4:
 294+ 989F              ;do left side first - check for char ' ' showing nothing drawn there
 295+ 989F
 296+ 989F 21 53 C1             ld hl,$c153             ;we should be at the top left of the face
 297+ 98A2 DD 21 53 C1          ld ix,$c153
 298+ 98A6              ;
 299+ 98A6 11 1F FA             ld de,lr_wall
 300+ 98A9 3E B7                ld a,_mediumwall_1
 301+ 98AB 12                   ld (de),a
 302+ 98AC 11 54 C1             ld de,$c154             ;1 line left of our wall face
 303+ 98AF 0E 0A                ld c,10                  ;draw 10 columns to the border
 304+ 98B1 E5           loop86: push hl
 305+ 98B2 06 04                ld b,4                  ;4 chars high
 306+ 98B4 DD 7E 00             ld a,(ix+0)             ;check our character
 307+ 98B7 FE 20                cp ' '                  ;should be space indicating noting there
 308+ 98B9 CC 32 99             call z,loop93
 309+ 98BC DD 2B                dec ix
 310+ 98BE E1                   pop hl
 311+ 98BF 2B                   dec hl                  ;move left 1 line in the display
 312+ 98C0 0D                   dec c
 313+ 98C1 C2 B1 98             jp nz,loop86            ;do this 5 times
 314+ 98C4
 315+ 98C4              ;now do the right side
 316+ 98C4 21 59 C1             ld hl,$c159             ;we should be at the top right of the face
 317+ 98C7 DD 21 59 C1          ld ix,$c159
 318+ 98CB              ;        ld de,$c158             ;1 line left of our wall face
 319+ 98CB 11 1F FA             ld de,lr_wall
 320+ 98CE 3E B7                ld a,_mediumwall_1
 321+ 98D0 12                   ld (de),a
 322+ 98D1
 323+ 98D1 0E 0A                ld c,10                  ;draw 10 columns to the border
 324+ 98D3 E5           loop87: push hl
 325+ 98D4 06 04                ld b,4                 ;4 chars high
 326+ 98D6 DD 7E 00             ld a,(ix+0)             ;check our character
 327+ 98D9 FE 20                cp ' '                  ;should be space indicating noting there
 328+ 98DB C2 E1 98             jp nz,loop88            ;skip over if no space there
 329+ 98DE CC 32 99             call z,loop93
 330+ 98E1 DD 23        loop88: inc ix
 331+ 98E3                               ;do the next line
 332+ 98E3 E1                   pop hl
 333+ 98E4 23                   inc hl
 334+ 98E5 0D                   dec c
 335+ 98E6 C2 D3 98             jp nz,loop87
 336+ 98E9 C9                   ret                     ;exit routine totally
 337+ 98EA
 338+ 98EA              cp_wall_5:
 339+ 98EA              ;do left side first - check for char ' ' showing nothing drawn there
 340+ 98EA
 341+ 98EA 21 77 C1             ld hl,$c177             ;we should be at the top left of the face
 342+ 98ED DD 21 77 C1          ld ix,$c177
 343+ 98F1              ;        ld de,$c176             ;1 line left of our wall face
 344+ 98F1 11 1F FA             ld de,lr_wall
 345+ 98F4 3E B4                ld a,_smallwall
 346+ 98F6 12                   ld (de),a
 347+ 98F7
 348+ 98F7 0E 0D                ld c,13                  ;draw 10 columns to the border
 349+ 98F9 E5           loop89: push hl
 350+ 98FA 06 02                ld b,2                  ;4 chars high
 351+ 98FC DD 7E 00             ld a,(ix+0)             ;check our character
 352+ 98FF FE A2                cp _bottomblack         ;should be space indicating noting there
 353+ 9901 CC 32 99             call z,loop93
 354+ 9904 DD 2B                dec ix
 355+ 9906 E1                   pop hl
 356+ 9907 2B                   dec hl                  ;move left 1 line in the display
 357+ 9908 0D                   dec c
 358+ 9909 C2 F9 98             jp nz,loop89            ;do this 5 times
 359+ 990C
 360+ 990C              ;now do the right side
 361+ 990C 21 75 C1             ld hl,$c175             ;we should be at the top right of the face
 362+ 990F DD 21 75 C1          ld ix,$c175
 363+ 9913              ;        ld de,$c176             ;1 line left of our wall face
 364+ 9913 11 1F FA             ld de,lr_wall
 365+ 9916 3E B4                ld a,_smallwall
 366+ 9918 12                   ld (de),a
 367+ 9919
 368+ 9919 0E 0F                ld c,15                  ;draw 10 columns to the border
 369+ 991B E5           loop871:push hl
 370+ 991C 06 02                ld b,2                  ;2 chars high
 371+ 991E DD 7E 00             ld a,(ix+0)             ;check our character
 372+ 9921 FE A2                cp _bottomblack         ;should be space indicating noting there
 373+ 9923 C2 29 99             jp nz,loop881            ;skip over if no space there
 374+ 9926 CC 32 99             call z,loop93
 375+ 9929 DD 23        loop881:inc ix
 376+ 992B                               ;do the next line
 377+ 992B E1                   pop hl
 378+ 992C 23                   inc hl
 379+ 992D 0D                   dec c
 380+ 992E C2 1B 99             jp nz,loop871
 381+ 9931 C9                   ret                     ;exit routine totally
 382+ 9932
 383+ 9932
 384+ 9932              ;#######################################################
 385+ 9932              ;This routine draws the end wall blocks left & right
 386+ 9932              ;######################################################
 387+ 9932
 388+ 9932              ;it matches so draw a wall face by copying the existing one!
 389+ 9932              loop93:; dec de                  ;go 1 line left
 390+ 9932 1A           loop92: ld a,(de)
 391+ 9933 77                   ld (hl),a
 392+ 9934 D5                   push de
 393+ 9935 11 21 00             ld de,33
 394+ 9938 19                   add hl,de               ;go to next line
 395+ 9939 D1                   pop de
 396+ 993A 10 F6                djnz loop92
 397+ 993C
 398+ 993C C9                   ret
 399+ 993D
 400+ 993D              ;#################################################################
 401+ 993D              ;#################################################################
 402+ 993D              ;draw colours     ; go through char display file and paint colours
 403+ 993D              ;#################################################################
 404+ 993D              ;#################################################################
 405+ 993D
 406+ 993D
 407+ 993D 28 00        wallcol       dw  40             ;bright red
 408+ 993F              skycol        equ 80            ; grey paper, black ink
 409+ 993F              floorcol      equ 98             ; brown paper, black ink
 410+ 993F              ;corridcol     equ 112            ; yellow paper, black ink
 411+ 993F 28           sky_floor     db  40            ;store current sky or floor colour
 412+ 9940 00           wall_temp     db  0             ;temporary store for wall colour graduation
 413+ 9941 00 C3        scr_attr_add  dw $c300  ;22528          ;start of spectrum attributes after char screen or 22528 actual sceen
 414+ 9943
 415+ 9943              ; go through the display file at c000, check the character, change the colour
 416+ 9943              ; if at row 26, start on next line at far left (0)
 417+ 9943              ; do it again until you reach line 24 and column 25
 418+ 9943
 419+ 9943              ; built character display is at location c000
 420+ 9943
 421+ 9943 3E 50        draw_colours: ld a, skycol           ; set the sky colour
 422+ 9945 32 3F 99                   ld (sky_floor),a
 423+ 9948 97                         sub a                 ; make a zero
 424+ 9949 32 0B FA                   ld (left),a
 425+ 994C 01 0F 03                   ld bc,783             ; 768 attributes to fill
 426+ 994F ED 5B 41 99                ld de,(scr_attr_add)  ; start of spectrum attributes after char screen
 427+ 9953 21 00 C0                   ld hl,$c000           ; start of zx81 display file in memory
 428+ 9956
 429+ 9956 CD 4D 9A     here:         call set_wall_col     ;set the wall colour graduation colour
 430+ 9959 CD 81 99                   call loop_1
 431+ 995C A7                         and a                 ;reset zero
 432+ 995D 23                         inc hl                ;current character memory we are checking
 433+ 995E 13                         inc de                ;current attribute location
 434+ 995F 0B                         dec bc                ;number of attribute cells to traverse
 435+ 9960 78                         ld a,b
 436+ 9961 FE 00                      cp 0
 437+ 9963 20 F1                      jr nz,here
 438+ 9965 79                         ld a,c
 439+ 9966 FE 00                      cp 0             ;dec on single reg affects flags
 440+ 9968
 441+ 9968 28 02                      jr z,lastcol     ;colour in the last block before exiting
 442+ 996A 18 EA                      jr here
 443+ 996C
 444+ 996C 3A 3F 99     lastcol:      ld a,(sky_floor)   ; colour in the last square
 445+ 996F                                               ; plus last 7  squares
 446+ 996F 12                         ld(de),a
 447+ 9970 3E 70                      ld a,112
 448+ 9972 13                         inc de
 449+ 9973 12                         ld (de),a
 450+ 9974 13                         inc de
 451+ 9975 12                         ld (de),a
 452+ 9976 13                         inc de
 453+ 9977 12                         ld (de),a
 454+ 9978 13                         inc de
 455+ 9979 12                         ld (de),a
 456+ 997A 13                         inc de
 457+ 997B 12                         ld (de),a
 458+ 997C 13                         inc de
 459+ 997D 12                         ld (de),a
 460+ 997E 13                         inc de
 461+ 997F 12                         ld (de),a
 462+ 9980
 463+ 9980 C9                         ret
 464+ 9981
 465+ 9981              ;start checking chars and setting colours
 466+ 9981
 467+ 9981 7E           loop_1:        ld a, (hl)       ; get value at start of zx81 display file
 468+ 9982 FE B5                       cp _mediumwall            ; top left triangle
 469+ 9984 20 07                       jr nz, next1
 470+ 9986 3A 3D 99                    ld a, (wallcol)
 471+ 9989 12                          ld (de),a        ; colour it if it matches
 472+ 998A C3 1A 9A                    jp next_pos      ; go on to next char position
 473+ 998D
 474+ 998D FE AF        next1:         cp _black            ; top right triangle
 475+ 998F 20 06                       jr nz, next2
 476+ 9991 3E FE                       ld a, 254        ;black paper, black ink
 477+ 9993 12                          ld (de),a        ; colour it if it matches
 478+ 9994 C3 1A 9A                    jp next_pos      ; go on to next char position
 479+ 9997
 480+ 9997 FE B3        next2:         cp _topcorner4           ; top left triangle
 481+ 9999 20 06                       jr nz, next3
 482+ 999B 3E 50                       ld a,skycol          ;paper cyan, ink 1
 483+ 999D 12                          ld (de),a        ; colour it if it matches
 484+ 999E C3 1A 9A                    jp next_pos      ; go on to next char position
 485+ 99A1
 486+ 99A1 FE B0        next3:         cp _topcorner1            ; top left triangle
 487+ 99A3 20 06                       jr nz, next4
 488+ 99A5 3E 62                       ld a,floorcol
 489+ 99A7 12                          ld (de),a        ; colour it if it matches
 490+ 99A8 C3 1A 9A                    jp next_pos      ; go on to next char position
 491+ 99AB
 492+ 99AB FE B6        next4:         cp _largewall            ; look for wall character
 493+ 99AD 20 07                       jr nz, next5
 494+ 99AF 3A 3D 99                    ld a,  (wallcol)
 495+ 99B2 12                          ld (de),a        ; colour it if it matches
 496+ 99B3 C3 1A 9A                    jp next_pos      ; go on to next char position
 497+ 99B6
 498+ 99B6 FE B4        next5:        cp _smallwall            ;was char 09 - lower middle of screen wall character bottom
 499+ 99B8 20 07                      jr nz, next6
 500+ 99BA 3A 3D 99                   ld a,  (wallcol)
 501+ 99BD 12                         ld (de),a
 502+ 99BE C3 1A 9A                   jp next_pos
 503+ 99C1
 504+ 99C1 FE B7        next6:        cp _mediumwall_1            ;was chr 10 - middle of screen upper wall character
 505+ 99C3 20 07                      jr nz, next7
 506+ 99C5 3A 3D 99                   ld a, (wallcol)         ;
 507+ 99C8 12                         ld (de),a
 508+ 99C9 C3 1A 9A                   jp next_pos
 509+ 99CC
 510+ 99CC FE A9        next7:        cp _topleft5            ;was chr 10 - middle of screen upper wall character
 511+ 99CE 20 06                      jr nz, next8
 512+ 99D0 3E 50                      ld a, skycol         ;
 513+ 99D2 12                         ld (de),a
 514+ 99D3 C3 1A 9A                   jp next_pos
 515+ 99D6
 516+ 99D6 FE B8        next8:        cp _hugewall
 517+ 99D8 20 07                      jr nz, next9
 518+ 99DA 3A 3D 99                   ld a, (wallcol)         ;
 519+ 99DD 12                         ld (de),a
 520+ 99DE C3 1A 9A                   jp next_pos
 521+ 99E1
 522+ 99E1 FE 8E        next9:        cp $8e            ;stretched wall 5
 523+ 99E3 20 07                      jr nz, next10
 524+ 99E5 3A 3D 99                   ld a, (wallcol)         ;
 525+ 99E8 12                         ld (de),a
 526+ 99E9 C3 1A 9A                   jp next_pos
 527+ 99EC
 528+ 99EC FE 8D        next10:       cp $8d             ;stretched wall 5 more
 529+ 99EE 20 0A                      jr nz, next11
 530+ 99F0 3A 3D 99                   ld a, (wallcol)         ;
 531+ 99F3 12                         ld (de),a
 532+ 99F4 3A 3D 99                   ld a, (wallcol)         ;
 533+ 99F7 C3 1A 9A                   jp next_pos
 534+ 99FA
 535+ 99FA FE 8B        next11:       cp $8b             ;stretched wall 5 more
 536+ 99FC 20 0A                      jr nz, next12
 537+ 99FE 3A 3D 99                   ld a, (wallcol)         ;
 538+ 9A01 12                         ld (de),a
 539+ 9A02 3A 3D 99                   ld a, (wallcol)         ;
 540+ 9A05 C3 1A 9A                   jp next_pos
 541+ 9A08
 542+ 9A08 FE 8C        next12:       cp $8c             ;stretched wall 5 more
 543+ 9A0A 20 0A                      jr nz, next20
 544+ 9A0C 3A 3D 99                   ld a, (wallcol)         ;
 545+ 9A0F 12                         ld (de),a
 546+ 9A10 3A 3D 99                   ld a, (wallcol)         ;
 547+ 9A13 C3 1A 9A                   jp next_pos
 548+ 9A16
 549+ 9A16              ;draw sky or floor colour as we found no matches above
 550+ 9A16
 551+ 9A16 3A 3F 99     next20         ld a,(sky_floor) ;
 552+ 9A19 12                          ld (de),a        ; colour it if it matches
 553+ 9A1A 3A 0B FA     next_pos:      ld a, (left)
 554+ 9A1D 3C                          inc a
 555+ 9A1E FE 19                       cp 25            ; are we at 24th column?
 556+ 9A20 32 0B FA                    ld (left),a
 557+ 9A23 C0                          ret nz           ; return if not
 558+ 9A24
 559+ 9A24              ;now do paper colour of score and nav git on right
 560+ 9A24                             ;now decrease bc by 7 & increase display pos by 7
 561+ 9A24                             ;to start of next line
 562+ 9A24 97                          sub a            ; zero a register
 563+ 9A25 32 0B FA                    ld (left),a      ; back to start
 564+ 9A28 3E 08                       ld a,8           ; 7 spaces to next line
 565+ 9A2A 0B           loop_4:        dec bc           ;change ldir count
 566+ 9A2B 23                          inc hl
 567+ 9A2C 13                          inc de
 568+ 9A2D F5                          push af
 569+ 9A2E 3E 70                       ld a,112         ;yellow paper, ink 9
 570+ 9A30 12                          ld (de),a
 571+ 9A31 F1                          pop af
 572+ 9A32 A7                          and a           ;move screen print position
 573+ 9A33 3D                          dec a
 574+ 9A34 20 F4                       jr nz, loop_4
 575+ 9A36 1B                          dec de           ; get to start of spectrum line in the display
 576+ 9A37
 577+ 9A37                             ; check if we are below the middles of the display
 578+ 9A37                             ; so we change the 'white' colour to floor
 579+ 9A37 E5                          push hl
 580+ 9A38 D5                          push de
 581+ 9A39                            ; 22912 is the start of the floor level
 582+ 9A39                             ; de holds current position in spectrum display
 583+ 9A39
 584+ 9A39
 585+ 9A39 2A 41 99                    ld hl,(scr_attr_add)
 586+ 9A3C ED 34 7F 01                 add hl,383        ;this for display at 22528 is 22911   ; start of first floor line
 587+ 9A40 ED 52                       sbc hl,de        ;are we there yet?
 588+ 9A42 C2 4A 9A                    jp nz,exit2 ;was nz
 589+ 9A45 3E 62                       ld a,floorcol
 590+ 9A47 32 3F 99                    ld (sky_floor),a
 591+ 9A4A D1           exit2:         pop de
 592+ 9A4B E1                          pop hl
 593+ 9A4C C9                          ret
 594+ 9A4D
 595+ 9A4D
 596+ 9A4D              set_wall_col:
 597+ 9A4D                              ;set the wall colour graduation colour from light (top part) to dark(bottom part of wall) in 6 increments
 598+ 9A4D                              ;de holds current attribute cell we are colouring in
 599+ 9A4D E5                           push hl
 600+ 9A4E D5                           push de
 601+ 9A4F                              ;de holds current attribute cell we are colouring in
 602+ 9A4F
 603+ 9A4F 3E BC                        ld a,188
 604+ 9A51 2A 41 99                     ld hl,(scr_attr_add)     ;top of the display
 605+ 9A54 B7 ED 52                     sub hl,de
 606+ 9A57 20 05                        jr nz,setcol_1   ;check next quarter of display
 607+ 9A59 32 3D 99                     ld (wallcol),a
 608+ 9A5C 18 5D                        jr setcol_exit
 609+ 9A5E
 610+ 9A5E
 611+ 9A5E C6 02        setcol_1:       add a,2
 612+ 9A60 2A 41 99                     ld hl,(scr_attr_add)
 613+ 9A63 ED 34 80 00                  add hl,128    ;next 1/6 of the display
 614+ 9A67 B7 ED 52                     sub hl,de
 615+ 9A6A 20 05                        jr nz,setcol_2   ;check next 1/6th of display
 616+ 9A6C 32 3D 99                     ld (wallcol),a
 617+ 9A6F 18 4A                        jr setcol_exit
 618+ 9A71
 619+ 9A71 C6 02        setcol_2        add a,2
 620+ 9A73 2A 41 99                     ld hl,(scr_attr_add)
 621+ 9A76 ED 34 00 01                  add hl,256     ;next 1/6  down of the display
 622+ 9A7A B7 ED 52                     sub hl,de
 623+ 9A7D 20 05                        jr nz,setcol_3   ;check next 1/6th of display
 624+ 9A7F 32 3D 99                     ld (wallcol),a
 625+ 9A82 18 37                        jr setcol_exit
 626+ 9A84
 627+ 9A84 C6 02        setcol_3        add a,2
 628+ 9A86 2A 41 99                     ld hl,(scr_attr_add)
 629+ 9A89 ED 34 80 01                  add hl,384     ;    ;next 1/6 of the display
 630+ 9A8D B7 ED 52                     sub hl,de
 631+ 9A90 20 05                        jr nz,setcol_4   ;check next 1/6th of display
 632+ 9A92 32 3D 99                     ld (wallcol),a
 633+ 9A95 18 24                        jr setcol_exit
 634+ 9A97
 635+ 9A97 C6 02        setcol_4        add a,2
 636+ 9A99 2A 41 99                     ld hl,(scr_attr_add)
 637+ 9A9C ED 34 00 02                  add hl,512    ;next 1/6 of the display
 638+ 9AA0 B7 ED 52                     sub hl,de
 639+ 9AA3 20 05                        jr nz,setcol_5   ;check next 1/6th of display
 640+ 9AA5 32 3D 99                     ld (wallcol),a
 641+ 9AA8 18 11                        jr setcol_exit
 642+ 9AAA
 643+ 9AAA C6 02        setcol_5        add a,2
 644+ 9AAC 2A 41 99                     ld hl,(scr_attr_add)
 645+ 9AAF ED 34 80 02                  add hl,640     ;bottom 6th of the display
 646+ 9AB3 B7 ED 52                     sub hl,de
 647+ 9AB6 20 03                        jr nz,setcol_exit   ;check next 1/6th of display
 648+ 9AB8 32 3D 99                     ld (wallcol),a
 649+ 9ABB
 650+ 9ABB D1           setcol_exit:    pop de
 651+ 9ABC E1                           pop hl
 652+ 9ABD C9                           ret
 653+ 9ABE
 654+ 9ABE              ;#######################################################################
 655+ 9ABE              ;setup right hand side of the screen
 656+ 9ABE
 657+ 9ABE              draw_screen_right:
 658+ 9ABE
 659+ 9ABE DD 21 21 82                ld ix,message_border1       ;top border Message
 660+ 9AC2 CD E9 81                   CALL print_message
 661+ 9AC5 DD 21 2C 82                ld ix,message_get       ;"Get Out" Message
 662+ 9AC9 CD E9 81                   CALL print_message
 663+ 9ACC DD 21 37 82                ld ix,message_out       ;"Get Out" Message
 664+ 9AD0 CD E9 81                   CALL print_message
 665+ 9AD3 DD 21 42 82                ld ix,message_border4       ;top border Message
 666+ 9AD7 CD E9 81                   CALL print_message
 667+ 9ADA                            ;do some colouring around the 'get out' words
 668+ 9ADA 21 39 58                   ld hl,22585
 669+ 9ADD 3E 94                      ld a,148
 670+ 9ADF 77                         ld (hl),A
 671+ 9AE0 21 3F 58                   ld hl,22585+6
 672+ 9AE3 77                         ld (hl),a
 673+ 9AE4 21 59 58                   ld hl,22617
 674+ 9AE7 77                         ld (hl),a
 675+ 9AE8 21 5F 58                   ld hl,22617+6
 676+ 9AEB 77                         ld (hl),a
 677+ 9AEC                            ;print "level" words
 678+ 9AEC DD 21 9C 82                ld ix,message_level       ;top border Message
 679+ 9AF0 CD E9 81                   CALL print_message
 680+ 9AF3              ;now print the level numbers
 681+ 9AF3 DD 21 36 9B                ld ix,L00       ;top border Message
 682+ 9AF7 CD E9 81                   CALL print_message
 683+ 9AFA DD 21 3D 9B                ld ix,L01       ;top border Message
 684+ 9AFE CD E9 81                   CALL print_message
 685+ 9B01 DD 21 44 9B                ld ix,L23      ;top border Message
 686+ 9B05 CD E9 81                   CALL print_message
 687+ 9B08 DD 21 4B 9B                ld ix,L45        ;top border Message
 688+ 9B0C CD E9 81                   CALL print_message
 689+ 9B0F DD 21 52 9B                ld ix,L67       ;top border Message
 690+ 9B13 CD E9 81                   CALL print_message
 691+ 9B16 DD 21 59 9B                ld ix,L89       ;top border Message
 692+ 9B1A CD E9 81                   CALL print_message
 693+ 9B1D DD 21 60 9B                ld ix,L1011       ;top border Message
 694+ 9B21 CD E9 81                   CALL print_message
 695+ 9B24 DD 21 67 9B                ld ix,L1213       ;top border Message
 696+ 9B28 CD E9 81                   CALL print_message
 697+ 9B2B DD 21 6E 9B                ld ix,L1415
 698+ 9B2F CD E9 81                   CALL print_message
 699+ 9B32 CD 75 9B                   call set_floor_colour
 700+ 9B35 C9                         ret
 701+ 9B36
 702+ 9B36 06 1B 86 20  L00           db 6,27,134,     " 0 ",$7f
 702+ 9B3A 30 20 7F
 703+ 9B3D 07 1B 86 20  L01           db 7,27,134,     " 1 ",$7f
 703+ 9B41 31 20 7F
 704+ 9B44 08 1B 86 32  L23           db 8,27,134,     "2 3",$7f
 704+ 9B48 20 33 7F
 705+ 9B4B 09 1B 86 34  L45           db 9,27,134,     "4 5",$7f
 705+ 9B4F 20 35 7F
 706+ 9B52 0A 1B 86 36  L67           db 10,27,134,    "6 7",$7f
 706+ 9B56 20 37 7F
 707+ 9B59 0B 1B 86 38  L89           db 11,27,134,    "8 9",$7f
 707+ 9B5D 20 39 7F
 708+ 9B60 0C 1B 86 D7  L1011         db 12,27,134,$d7," ",$d8,$7f
 708+ 9B64 20 D8 7F
 709+ 9B67 0D 1B 86 D9  L1213         db 13,27,134,$d9," ",$da,$7f
 709+ 9B6B 20 DA 7F
 710+ 9B6E 0E 1B 86 DB  L1415         db 14,27,134,$db," ",$dc,$7f
 710+ 9B72 20 DC 7F
 711+ 9B75
 712+ 9B75              ;###################################################################
 713+ 9B75
 714+ 9B75              ;set floor colour on right of the display - shows what floor we are on
 715+ 9B75
 716+ 9B75              set_floor_colour:
 717+ 9B75 AF                   xor a               ;zero a reg
 718+ 9B76 47                   ld b,a
 719+ 9B77 2A 22 FA             ld hl,(cur_map)     ;get our current map
 720+ 9B7A 55                   ld d,l
 721+ 9B7B 15                   dec d               ;need to point 1 less
 722+ 9B7C 1E 02                ld e,2
 723+ 9B7E ED 30                mul de              ;multiply our current map number by 2
 724+ 9B80 21 8B 9B             ld hl,data_table
 725+ 9B83 19                   add hl,de           ;should now be pointing to the correct place in the table
 726+ 9B84 5E                   ld e,(hl)
 727+ 9B85 23                   inc hl
 728+ 9B86 56                   ld d,(hl)
 729+ 9B87                      ;now colour it white on screen
 730+ 9B87 3E 87                ld a,135
 731+ 9B89 12                   ld (de),a
 732+ 9B8A C9                   ret
 733+ 9B8B
 734+ 9B8B
 735+ 9B8B
 736+ 9B8B
 737+ 9B8B              data_table:
 738+ 9B8B DC 58                dw  $58dc       ;23003-256    ;GND
 739+ 9B8D FC 58                dw  $58fc       ;23004-224    ;1
 740+ 9B8F 1B 59                dw  $591b       ;23003-192    ;2
 741+ 9B91 1D 59                dw  $591d       ;23005-192    ;3
 742+ 9B93 3B 59                dw  $593b       ;23003-160    ;4
 743+ 9B95 3D 59                dw  $593d       ;23005-160    ;5
 744+ 9B97 5B 59                dw  $595b       ;23003-128    ;6
 745+ 9B99 5D 59                dw  $595d       ;23005-128    ;7
 746+ 9B9B 7B 59                dw  $597b       ;23003-96    ;8
 747+ 9B9D 7D 59                dw  $597d       ;23005-96    ;9
 748+ 9B9F 9B 59                dw  $599b       ;23003-64    ;10
 749+ 9BA1 9D 59                dw  $599d       ;23005-64    ;11
 750+ 9BA3 BB 59                dw  $59bb       ;23003-32    ;12
 751+ 9BA5 BD 59                dw  $59bd       ;23005-32    ;13
 752+ 9BA7 DB 59                dw  $59db       ;23003       ;14
 753+ 9BA9 DD 59                dw  $59dd       ;23005       ;15
 754+ 9BAB              ;22528 to 23296
 755+ 9BAB
 756+ 9BAB
 757+ 9BAB
# file closed: src/5-rd3dmazeV6.asm
 470  9BAB                  INCLUDE "6-rd3dmazeV6.asm" ; draw right side of maze
# file opened: src/6-rd3dmazeV6.asm
   1+ 9BAB
   2+ 9BAB              ;############################################
   3+ 9BAB              ;############################################
   4+ 9BAB
   5+ 9BAB              ;draw section the right side of the screen
   6+ 9BAB
   7+ 9BAB              ;############################################
   8+ 9BAB              ;############################################
   9+ 9BAB
  10+ 9BAB              draw_right_side:
  11+ 9BAB
  12+ 9BAB 3A 06 FA                   ld a,(depth)
  13+ 9BAE FE 06                      cp 6
  14+ 9BB0 CA CF 9B                   jp z,draw_6r
  15+ 9BB3 FE 05        do_5r:        cp 5
  16+ 9BB5 CA D9 9B                   jp z,draw_5r
  17+ 9BB8 FE 04                      cp 4
  18+ 9BBA CA 95 9D                   jp z,draw_4r
  19+ 9BBD FE 03                      cp 3
  20+ 9BBF CA 7B 9F                   jp z,draw_3r
  21+ 9BC2 FE 02                      cp 2
  22+ 9BC4 CA 00 A1                   jp z,draw_2r
  23+ 9BC7 FE 01                      cp 1
  24+ 9BC9 CA 9B A1                   jp z,draw_1r
  25+ 9BCC C3 31 A2                   jp draw_0r
  26+ 9BCF              ;end of routine
  27+ 9BCF                        ;    ret
  28+ 9BCF
  29+ 9BCF              ;############################################
  30+ 9BCF              ;############################################
  31+ 9BCF
  32+ 9BCF              ;draw section 6 right - well, nothing to do atm!
  33+ 9BCF
  34+ 9BCF              ;############################################
  35+ 9BCF              ;############################################
  36+ 9BCF
  37+ 9BCF              draw_6r:
  38+ 9BCF              ;do nothing on screen as already done via left side draw
  39+ 9BCF              ;just incremement where we are in the maze view
  40+ 9BCF
  41+ 9BCF 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
  42+ 9BD2 CD 7B 8E             call load_de            ;get left and right and front jump into de reg
  43+ 9BD5 19                   add hl,de               ;Additional add to simulate layer 6
  44+ 9BD6 22 25 FA             ld (furthest_point),hl ;re save it
  45+ 9BD9
  46+ 9BD9              ;############################################
  47+ 9BD9              ;############################################
  48+ 9BD9
  49+ 9BD9              ;draw section 5 right
  50+ 9BD9
  51+ 9BD9              ;############################################
  52+ 9BD9              ;############################################
  53+ 9BD9
  54+ 9BD9              draw_5r:
  55+ 9BD9
  56+ 9BD9              ;ret
  57+ 9BD9              ; hl=maze location being drawn.
  58+ 9BD9              ; now determine what to draw for this section.
  59+ 9BD9
  60+ 9BD9 97                   sub a                   ;make 'a' zero
  61+ 9BDA 3D                   dec a                   ;make it 255 to show nothing to do
  62+ 9BDB 32 27 FA             ld (blockid),a          ;save it for wall drawing
  63+ 9BDE
  64+ 9BDE              ;first we need to decrement how far we can see to the layer
  65+ 9BDE              ;we are working on
  66+ 9BDE
  67+ 9BDE 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
  68+ 9BE1 CD 7B 8E             call load_de            ;get left and right and front jump into de reg
  69+ 9BE4
  70+ 9BE4 19                   add hl,de               ;Additional add to simulate layer 6
  71+ 9BE5 22 25 FA             ld (furthest_point),hl ;re save it
  72+ 9BE8
  73+ 9BE8 11 01 00             ld de,$0001             ;to move the display position +1
  74+ 9BEB ED 53 11 FA          ld (var4),de
  75+ 9BEF
  76+ 9BEF              ;move the maze location pointer 1 to the right - used for all
  77+ 9BEF              ;remaining blocks to test if there is a wall there or not.
  78+ 9BEF
  79+ 9BEF ED 5B 0D FA          ld de,(right)
  80+ 9BF3 19                   add hl,de
  81+ 9BF4 22 15 FA             ld (var6),hl            ;right position in maze from our location
  82+ 9BF7
  83+ 9BF7 ED 53 0F FA          ld (var3),de            ;display position +1
  84+ 9BFB 11 79 01             ld   de,$0179           ; offset to row 11 column 10 - left of  centre of the 3d view.
  85+ 9BFE CD 0C 9C             call do_draw_5r
  86+ 9C01
  87+ 9C01 97                   sub a                   ;make reg a zero
  88+ 9C02 32 1E FA             ld (var10),a            ;used in the maze wall drawing at layer 5
  89+ 9C05 3A 27 FA             ld a,(blockid)          ;get the right hand maze wall location
  90+ 9C08 3C                   inc a                   ;if blockid was 255 (UNUSED) its will now be zero
  91+ 9C09                                              ;so
  92+ 9C09 C3 95 9D             jp draw_4r              ;now draw the 4th level
  93+ 9C0C
  94+ 9C0C              do_draw_5r:
  95+ 9C0C
  96+ 9C0C 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
  97+ 9C0F 19                   add  hl,de
  98+ 9C10
  99+ 9C10
 100+ 9C10              ; draw right half of the display.
 101+ 9C10
 102+ 9C10 06 04                ld b,4                  ; count for 3 columns right of our position
 103+ 9C12 ED 5B 15 FA          ld de,(var6)            ; retrieve the maze location.
 104+ 9C16
 105+ 9C16              ;check if we are at the bottom right of the maze
 106+ 9C16              ;if so, there is no wall after position 255 so point us to
 107+ 9C16              ;position 240 and fake the wall!
 108+ 9C16              ;;;        ld a,e
 109+ 9C16              ;;;        cp 255
 110+ 9C16              ;;;        jp nz,cont_3  ;continue if we are not at position 255
 111+ 9C16              ;;;        ld e,240      ;fake where we are so we draw a wall :)
 112+ 9C16
 113+ 9C16
 114+ 9C16              ;now move the maze pointer right (+1) 1 position
 115+ 9C16              ;so we can read the type of walls to our left
 116+ 9C16
 117+ 9C16              ;cont_3:
 118+ 9C16              ;*         push hl
 119+ 9C16              ;*        ld hl,(left)
 120+ 9C16              ;*        add hl,de
 121+ 9C16              ;*        ex de,hl
 122+ 9C16              ;*        pop hl
 123+ 9C16
 124+ 9C16 EB                   ex   de,hl              ; transfer de to hl.
 125+ 9C17
 126+ 9C17              ;       hl = furthest point in the maze
 127+ 9C17              ;       de = d_file location to store byte to display
 128+ 9C17
 129+ 9C17              ;we have to load the first plot position with a corner bit to show
 130+ 9C17              ;the end of the wall at the position we can see next to the center
 131+ 9C17              ;plot position on section 6
 132+ 9C17              ;then, while we draw the other blocks we can see we just want top and
 133+ 9C17              ;bottom blacks pointed so will use var1 and var 2 to hold the
 134+ 9C17              ;character block we need to print.
 135+ 9C17
 136+ 9C17              ;2020 - we dont need to do this as we are drawing
 137+ 9C17              ;a side wall and wont see the hashes!
 138+ 9C17
 139+ 9C17 3E B4                ld a,_smallwall;_topright5          ; load with top right char $a9
 140+ 9C19              ;        ld a,'#'
 141+ 9C19 32 04 FA             ld (var1),a             ;top of mwadd udg
 142+ 9C1C              ;        inc a
 143+ 9C1C              ;        inc a
 144+ 9C1C              ;        ld a,_smallwall;_topright5          ; load with top right char $a9
 145+ 9C1C
 146+ 9C1C 32 05 FA             ld (var2),a             ;ld with bottom right wall udg char
 147+ 9C1F
 148+ 9C1F              loop8r:
 149+ 9C1F E5                   push hl
 150+ 9C20
 151+ 9C20              ;##############################################################################
 152+ 9C20              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
 153+ 9C20
 154+ 9C20 3A 28 FA             ld a,(maze_highbyte)
 155+ 9C23 BC                   cp h                    ;are we at the top part of the maze?
 156+ 9C24 CA 57 9C             jp z,cont_5a
 157+ 9C27                                              ;if we are on a different maze boundary
 158+ 9C27                                              ;then draw a maze wall as we are the top
 159+ 9C27                                              ;or north wall but maze data has no
 160+ 9C27                                              ;wall data.
 161+ 9C27                                              ;wall data.
 162+ 9C27              ;4 = 1st left wall
 163+ 9C27              ;3 = 2nd left wall
 164+ 9C27              ;2 = 3rd left wall
 165+ 9C27              ;1 = 4th left wall
 166+ 9C27
 167+ 9C27 78                   ld a,b                  ;our current wall counter
 168+ 9C28 FE 04                cp 4
 169+ 9C2A C2 35 9C             jp nz,b5_1                 ;its not wall 4
 170+ 9C2D 3E 01                ld a,1
 171+ 9C2F 47                   ld b,a
 172+ 9C30 C6 80                add a,128               ;make sure we set a wall!
 173+ 9C32 C3 8D 9C             jp  do_wall5a          ;jump straight to making an end wall
 174+ 9C35
 175+ 9C35 FE 03        b5_1:   cp 3
 176+ 9C37 C2 42 9C             jp nz,b5_2             ;its not wall 3
 177+ 9C3A 3E 01                ld a,1
 178+ 9C3C 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 179+ 9C3D C6 80                add a,128               ;make sure we set a wall!
 180+ 9C3F C3 B4 9C             jp do_2ndwall_r        ;draw the 2nd block to the left
 181+ 9C42
 182+ 9C42 FE 02        b5_2:   cp 2
 183+ 9C44 C2 4F 9C             jp nz,b5_3             ;its not wall 3
 184+ 9C47 3E 01                ld a,1
 185+ 9C49 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 186+ 9C4A C6 80                add a,128               ;make sure we set a wall!
 187+ 9C4C C3 FC 9C             jp do_3rdwall_r       ;draw the 2nd block to the left
 188+ 9C4F
 189+ 9C4F              ;a must = 1 if we get here.
 190+ 9C4F 3E 01        b5_3:   ld a,1
 191+ 9C51 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 192+ 9C52 C6 80                add a,128               ;make sure we set a wall!
 193+ 9C54 C3 49 9D             jp do_4thwall_r         ;jump straight to making an end wall
 194+ 9C57
 195+ 9C57              ;*############################################################################
 196+ 9C57
 197+ 9C57              ;now zero out the end wall variable
 198+ 9C57              cont_5a
 199+ 9C57 97                   sub a                   ;zero a reg
 200+ 9C58 32 17 FA             ld (end_wall),a           ;save 0 in the end wall variable
 201+ 9C5B
 202+ 9C5B
 203+ 9C5B              ;check we are at an outside maze wall
 204+ 9C5B 7E                   ld a,(hl)               ;otherwise, check if there is a wall
 205+ 9C5C FE 81                cp _mh                  ;maze wall block
 206+ 9C5E 20 07                jr nz,cont10            ;its a wall block so need to draw the wall
 207+ 9C60 F5                   push af                 ;save which print location we are at
 208+ 9C61 3E 01                ld a,1                  ;for drawing the maze wall to the screen
 209+ 9C63 32 17 FA             ld (end_wall),a          ;edge
 210+ 9C66 F1                   pop af
 211+ 9C67              ;        ld b,1                  ;stop drawing more blocks as its an end wall
 212+ 9C67
 213+ 9C67 17           cont10: rla
 214+ 9C68 DA 7B 9C             jp c,do_wall5r          ;bit 7 (128)
 215+ 9C6B
 216+ 9C6B              ;        call do_no_wall5r      ; otherwise draw no wall
 217+ 9C6B
 218+ 9C6B              go_back5r:
 219+ 9C6B 2A 11 FA             ld hl,(var4)            ;used for left and right drawing
 220+ 9C6E 19                   add hl,de               ; holds current screen position
 221+ 9C6F EB                   ex de,hl
 222+ 9C70 E1                   pop hl
 223+ 9C71 D5                   push de
 224+ 9C72 ED 5B 0F FA          ld de,(var3)            ;used for left and right drawing
 225+ 9C76 19                   add hl,de               ; go left 1 block in the maze
 226+ 9C77 D1                   pop de
 227+ 9C78 10 A5                djnz loop8r
 228+ 9C7A C9                   ret
 229+ 9C7B
 230+ 9C7B
 231+ 9C7B              do_wall5r:
 232+ 9C7B
 233+ 9C7B              ;check if b=2 - if so we are not at a wall immediately next to our right
 234+ 9C7B              ;nor are we at an and wall. We are drawing the 2nd block to the right
 235+ 9C7B              ;b=3 for 3rd block to the right.
 236+ 9C7B
 237+ 9C7B 78                   ld a,b
 238+ 9C7C D6 01                sub 1
 239+ 9C7E CA 49 9D             jp z,do_4thwall_r       ;draw the cnd block to the right
 240+ 9C81
 241+ 9C81 78                   ld a,b                  ;b is our loop count
 242+ 9C82 D6 02                sub 2                   ;check if a=2
 243+ 9C84 CA FC 9C             jp z,do_3rdwall_r       ;draw the 2nd block to the right
 244+ 9C87
 245+ 9C87 78                   ld a,b
 246+ 9C88 D6 03                sub 3
 247+ 9C8A CA B4 9C             jp z,do_2ndwall_r       ;draw the cnd block to the right
 248+ 9C8D
 249+ 9C8D              ;b must = 4 if we get here
 250+ 9C8D
 251+ 9C8D              ;check if bit 2 is set as thats an end
 252+ 9C8D              ;and b must then be changed to 1 to stop drawing.
 253+ 9C8D
 254+ 9C8D              do_wall5a:
 255+ 9C8D CB 4F                bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
 256+ 9C8F 28 04                jr z,draw8r
 257+ 9C91
 258+ 9C91 97                   sub a                  ;we Don't have an outside maze wall (end wall)
 259+ 9C92 32 17 FA             ld (end_wall),a           ;save that we are NOT at an end wall
 260+ 9C95
 261+ 9C95 D5           draw8r:  push de
 262+ 9C96 3A 04 FA             ld a,(var1)           ;top of wall udg
 263+ 9C99 12                   ld (de),a             ; insert the top of the wall.
 264+ 9C9A
 265+ 9C9A 13                   inc de
 266+ 9C9B 12                   ld (de),a             ; insert the top of the wall - 2nd right.
 267+ 9C9C 1B                   dec de
 268+ 9C9D              ;now check if we need to draw a black side on the right
 269+ 9C9D              ;by looking to the character to the right of the wall
 270+ 9C9D              ;and if there is not a wall already drawn, then draw a
 271+ 9C9D              ;black side
 272+ 9C9D
 273+ 9C9D 3E AA                ld a,_topright5         ;if not, draw the top left side
 274+ 9C9F 1B                   dec de                  ;move to the right of the bricks
 275+ 9CA0 12                   ld (de),a               ;draw a black and chevron side
 276+ 9CA1 13                   inc de                  ;go back 1 space again
 277+ 9CA2
 278+ 9CA2 21 21 00     _x1r:   ld   hl,$0021           ;jump to the next line below
 279+ 9CA5
 280+ 9CA5 19                   add  hl,de
 281+ 9CA6 3A 05 FA             ld a,(var2)             ;draw our wall bottom.
 282+ 9CA9 77                   ld   (hl),a             ; insert the bottom of the wall.
 283+ 9CAA 23                   inc hl
 284+ 9CAB 77                   ld   (hl),a             ; insert the top of the wall.
 285+ 9CAC 2B                   dec hl
 286+ 9CAD 2B                   dec hl                  ;look at the left block
 287+ 9CAE 3E AC                ld a,_bottomright5
 288+ 9CB0 77                   ld (hl),a
 289+ 9CB1
 290+ 9CB1 D1           _x2r:   pop de
 291+ 9CB2
 292+ 9CB2
 293+ 9CB2 18 B7                jr go_back5r              ; jump back to main loop
 294+ 9CB4
 295+ 9CB4
 296+ 9CB4              ;************************************
 297+ 9CB4
 298+ 9CB4              ;draw the wall for 2nd right layer
 299+ 9CB4
 300+ 9CB4              ;***********************************
 301+ 9CB4
 302+ 9CB4              do_2ndwall_r:
 303+ 9CB4
 304+ 9CB4 D5                   push de                 ;save the current acreen position
 305+ 9CB5              ;1st check if theres a wall where we need to draw the black side
 306+ 9CB5 1A                   ld a,(de)
 307+ 9CB6 FE B4                cp _smallwall
 308+ 9CB8 CA BE 9C             jp z,miss5              ;theres a wall drawn already so do not
 309+ 9CBB                                              ;draw any black sides & jump over
 310+ 9CBB
 311+ 9CBB 3E 91                ld   a,$91;b9              ;top right section 3 (1)
 312+ 9CBD 12                   ld   (de),a             ; insert the top of the wall.
 313+ 9CBE
 314+ 9CBE              ;now draw a red wall to the right of section 2
 315+ 9CBE 13           miss5:  inc de
 316+ 9CBF 3E B4                ld a,_smallwall
 317+ 9CC1 12                   ld (de),a
 318+ 9CC2 13                   inc de
 319+ 9CC3 12                   ld (de),a               ;draw 2nd one (4 wide)
 320+ 9CC4 13                   inc de
 321+ 9CC5 12                   ld (de),a               ;draw 3rd one (4 wide)
 322+ 9CC6              ;        inc de
 323+ 9CC6              ;        ld (de),a               ;draw 4th one (4 wide)
 324+ 9CC6
 325+ 9CC6               ;       dec de
 326+ 9CC6 1B                   dec de
 327+ 9CC7 1B                   dec de
 328+ 9CC8 1B                   dec de
 329+ 9CC9
 330+ 9CC9              ;now check if we need to draw a black side on the right
 331+ 9CC9              ;by looking to the character to the right of the wall
 332+ 9CC9              ;and if there is not a wall already drawn, then draw a
 333+ 9CC9              ;black side
 334+ 9CC9
 335+ 9CC9 1B                   dec de                  ;jump left 1 char in the display
 336+ 9CCA 1A                   ld a,(de)               ;read whats there
 337+ 9CCB 13                   inc de                  ;put our pointer back to the original position
 338+ 9CCC FE B4                cp _smallwall           ;is it a wall
 339+ 9CCE CA D6 9C             jp z,_x1r_2               ;if yes, do NOT draw a black side.
 340+ 9CD1 3E 90                ld a,$90             ;draw top right side
 341+ 9CD3 1B                   dec de
 342+ 9CD4 12                   ld (de),a               ;draw middle top bit
 343+ 9CD5 13                   inc de
 344+ 9CD6
 345+ 9CD6              ;top line done
 346+ 9CD6
 347+ 9CD6              ;now do the bottom line underneath
 348+ 9CD6
 349+ 9CD6              ;REMEMBER - 1 block is 2 8 bit squares at the section
 350+ 9CD6              _x1r_2
 351+ 9CD6 21 21 00             ld   hl,$0021           ;jump to the next line below + 1 char right
 352+ 9CD9 19                   add  hl,de
 353+ 9CDA
 354+ 9CDA              ;1st check if theres a wall where we need to draw the black side
 355+ 9CDA 7E                   ld a,(hl)
 356+ 9CDB FE B4                cp _smallwall
 357+ 9CDD CA E3 9C             jp z, miss51
 358+ 9CE0
 359+ 9CE0 3E 94                ld a,$94                ;draw our rightmost wall bottom.
 360+ 9CE2 77                   ld   (hl),a             ; insert the bottom of the wall.
 361+ 9CE3
 362+ 9CE3              ;now draw a red wall to the right of section 2
 363+ 9CE3 23           miss51: inc hl
 364+ 9CE4 3E B4                ld a,_smallwall
 365+ 9CE6 77                   ld (hl),a
 366+ 9CE7 23                   inc hl
 367+ 9CE8 77                   ld (hl),a
 368+ 9CE9 23                   inc hl
 369+ 9CEA 77                   ld (hl),a               ;draw 3rd one (3 wide)
 370+ 9CEB 2B                   dec hl
 371+ 9CEC 2B                   dec hl
 372+ 9CED 2B                   dec hl
 373+ 9CEE
 374+ 9CEE              ;now check if we need to draw a black side on the left of the lower half wall
 375+ 9CEE              ;do this by checking if the next block is already a wall just like above
 376+ 9CEE
 377+ 9CEE 2B                   dec hl      ;look at the left block
 378+ 9CEF 7E                   ld a,(hl)
 379+ 9CF0 FE B4                cp _smallwall           ;is there a bottom wall5 here?
 380+ 9CF2 CA F8 9C             jp z,_x2r_2
 381+ 9CF5 3E 93                ld a,$93            ;draw leftmost bottom
 382+ 9CF7 77                   ld (hl),a
 383+ 9CF8
 384+ 9CF8 D1           _x2r_2  pop de
 385+ 9CF9 C3 6B 9C             jp go_back5r              ; jump back to main loop
 386+ 9CFC
 387+ 9CFC              ;##########################################
 388+ 9CFC
 389+ 9CFC              ;draw the wall for 3rd right layer
 390+ 9CFC
 391+ 9CFC              ;##########################################
 392+ 9CFC
 393+ 9CFC              do_3rdwall_r:
 394+ 9CFC
 395+ 9CFC D5                   push de                 ;save the current acreen position
 396+ 9CFD              ;1st check if theres a wall where we need to draw the black side
 397+ 9CFD 13                   inc de                  ;move our start location 3 spaces right
 398+ 9CFE 13                   inc de
 399+ 9CFF 13                   inc de
 400+ 9D00
 401+ 9D00              ;now draw a red wall to the right of section 2,  top half
 402+ 9D00
 403+ 9D00 3E B4                ld a,_smallwall;$8e
 404+ 9D02 12                   ld (de),a
 405+ 9D03 13                   inc de
 406+ 9D04 12                   ld (de),a
 407+ 9D05 13                   inc de
 408+ 9D06 12                   ld (de),a
 409+ 9D07 13                   inc de
 410+ 9D08 12                   ld (de),a               ;draw 4th one (4 wide)
 411+ 9D09
 412+ 9D09 1B                   dec de                  ;move print position back for black wall
 413+ 9D0A 1B                   dec de
 414+ 9D0B 1B                   dec de
 415+ 9D0C
 416+ 9D0C              ;now check if we need to draw a black side on the right
 417+ 9D0C              ;by looking to the character to the right of the wall
 418+ 9D0C              ;and if there is not a wall already drawn, then draw a
 419+ 9D0C              ;black side
 420+ 9D0C
 421+ 9D0C 1B                   dec de                  ;jump left 1 char in the display
 422+ 9D0D 1A                   ld a,(de)               ;read whats there
 423+ 9D0E 13                   inc de                  ;put our pointer back to the original position
 424+ 9D0F FE B4                cp _smallwall           ;is it a wall
 425+ 9D11 CA 21 9D             jp z,_x1r_3               ;if yes, do NOT draw a black side.
 426+ 9D14 3E B9                ld a,$b9             ;draw top right side
 427+ 9D16 1B                   dec de
 428+ 9D17 1B                   dec de
 429+ 9D18 1B                   dec de
 430+ 9D19 12                   ld (de),a
 431+ 9D1A 13                   inc de
 432+ 9D1B 3C                   inc a
 433+ 9D1C 12                   ld (de),a
 434+ 9D1D 3C                   inc a
 435+ 9D1E 13                   inc de
 436+ 9D1F 12                   ld (de),a
 437+ 9D20
 438+ 9D20 13                    inc de
 439+ 9D21                                              ;to wall start
 440+ 9D21
 441+ 9D21              ;top line done
 442+ 9D21
 443+ 9D21              ;now do the bottom line underneath
 444+ 9D21
 445+ 9D21              _x1r_3
 446+ 9D21 21 21 00      ld   hl,$0021           ;jump to the next line below + 1 char right
 447+ 9D24 19                   add  hl,de
 448+ 9D25
 449+ 9D25 3E B4                ld a,_smallwall;$8e
 450+ 9D27 77                   ld (hl),a
 451+ 9D28 23                   inc hl
 452+ 9D29 77                   ld (hl),a
 453+ 9D2A 23                   inc hl
 454+ 9D2B 77                   ld (hl),a
 455+ 9D2C 23                   inc hl
 456+ 9D2D 77                   ld (hl),a
 457+ 9D2E
 458+ 9D2E 2B                   dec hl
 459+ 9D2F 2B                   dec hl
 460+ 9D30 2B                   dec hl
 461+ 9D31
 462+ 9D31
 463+ 9D31              ;now check if we need to draw a black side on the left of the lower half wall
 464+ 9D31              ;do this by checking if the next block is already a wall just like above
 465+ 9D31
 466+ 9D31 2B                   dec hl      ;look at the left block
 467+ 9D32 7E                   ld a,(hl)
 468+ 9D33 23                   inc hl
 469+ 9D34 FE B4                cp _smallwall           ;is there a bottom wall5 here?
 470+ 9D36 CA 45 9D             jp z,_x2r_3
 471+ 9D39 3E BD                ld a,$bd            ;draw leftmost bottom
 472+ 9D3B 2B                   dec hl
 473+ 9D3C 2B                   dec hl
 474+ 9D3D 2B                   dec hl
 475+ 9D3E
 476+ 9D3E 77                   ld (hl),a
 477+ 9D3F 23                   inc hl
 478+ 9D40 3C                   inc a
 479+ 9D41 77                   ld (hl),a
 480+ 9D42 23                   inc hl
 481+ 9D43 3C                   inc a
 482+ 9D44 77                   ld (hl),a
 483+ 9D45
 484+ 9D45 D1           _x2r_3  pop de
 485+ 9D46 C3 6B 9C             jp go_back5r              ; jump back to main loop
 486+ 9D49
 487+ 9D49              ;##########################################
 488+ 9D49
 489+ 9D49              ;draw the wall for 4th (and last!) right layer
 490+ 9D49
 491+ 9D49              ;##########################################
 492+ 9D49
 493+ 9D49              do_4thwall_r:
 494+ 9D49
 495+ 9D49              ;draw top half of wall
 496+ 9D49
 497+ 9D49 D5                   push de                 ;save the current acreen position
 498+ 9D4A              ;1st check if theres a wall where we need to draw the black side
 499+ 9D4A 13                   inc de
 500+ 9D4B 13                   inc de
 501+ 9D4C 13                   inc de
 502+ 9D4D 13                   inc de
 503+ 9D4E 13                   inc de
 504+ 9D4F 13                   inc de
 505+ 9D50              ;now draw a red wall to the right of section 2,  top half
 506+ 9D50
 507+ 9D50 3E B4                ld a,_smallwall;$8d
 508+ 9D52 12                   ld (de),a
 509+ 9D53 13                   inc de
 510+ 9D54 12                   ld (de),a
 511+ 9D55
 512+ 9D55
 513+ 9D55 1B                   dec de                  ;move print position back for black wall
 514+ 9D56
 515+ 9D56              ;now check if we need to draw a black side on the right
 516+ 9D56              ;by looking to the character to the right of the wall
 517+ 9D56              ;and if there is not a wall already drawn, then draw a
 518+ 9D56              ;black side
 519+ 9D56
 520+ 9D56 1B                   dec de                  ;jump left 1 char in the display
 521+ 9D57 1A                   ld a,(de)               ;read whats there
 522+ 9D58 13                   inc de                  ;put our pointer back to the original position
 523+ 9D59 FE B4                cp _smallwall;$8e                 ;is it a wall
 524+ 9D5B CA 6F 9D             jp z,_x1r_31               ;if yes, do NOT draw a black side.
 525+ 9D5E 3E B9                ld a,$b9              ;draw top right side
 526+ 9D60 1B                   dec de
 527+ 9D61 1B                   dec de
 528+ 9D62 1B                   dec de
 529+ 9D63 1B                   dec de
 530+ 9D64 12                   ld (de),a           ;draw 4 black sides
 531+ 9D65 13                   inc de
 532+ 9D66 3C                   inc a
 533+ 9D67 12                   ld (de),a
 534+ 9D68 3C                   inc a
 535+ 9D69 13                   inc de
 536+ 9D6A 12                   ld (de),a
 537+ 9D6B 3C                   inc a
 538+ 9D6C 13                   inc de
 539+ 9D6D 12                   ld (de),a
 540+ 9D6E
 541+ 9D6E 13                   inc de              ;move to wall start
 542+ 9D6F
 543+ 9D6F
 544+ 9D6F              ;top line done
 545+ 9D6F
 546+ 9D6F              ;now do the bottom line underneath
 547+ 9D6F
 548+ 9D6F              _x1r_31
 549+ 9D6F 21 21 00      ld   hl,$0021           ;jump to the next line below + 1 char right
 550+ 9D72 19                   add  hl,de
 551+ 9D73
 552+ 9D73 3E B4                ld a,_smallwall;$8d
 553+ 9D75 77                   ld (hl),a
 554+ 9D76 23                   inc hl
 555+ 9D77 77                   ld (hl),a
 556+ 9D78
 557+ 9D78 2B                   dec hl
 558+ 9D79
 559+ 9D79
 560+ 9D79              ;now check if we need to draw a black side on the left of the lower half wall
 561+ 9D79              ;do this by checking if the next block is already a wall just like above
 562+ 9D79
 563+ 9D79 2B                   dec hl      ;look at the left block
 564+ 9D7A 7E                   ld a,(hl)
 565+ 9D7B 23                   inc hl
 566+ 9D7C FE B4                cp _smallwall;$8e           ;is there a bottom wall5 here?
 567+ 9D7E CA 91 9D             jp z,_x2r_31
 568+ 9D81
 569+ 9D81 3E BD                ld a,$bd            ;draw leftmost bottom
 570+ 9D83 2B                   dec hl
 571+ 9D84 2B                   dec hl
 572+ 9D85 2B                   dec hl
 573+ 9D86 2B                   dec hl
 574+ 9D87
 575+ 9D87 77                   ld (hl),a
 576+ 9D88 23                   inc hl
 577+ 9D89 3C                   inc a
 578+ 9D8A 77                   ld (hl),a
 579+ 9D8B 23                   inc hl
 580+ 9D8C 3C                   inc a
 581+ 9D8D 77                   ld (hl),a
 582+ 9D8E 23                   inc hl
 583+ 9D8F 3C                   inc a
 584+ 9D90 77                   ld (hl),a
 585+ 9D91
 586+ 9D91 D1           _x2r_31  pop de
 587+ 9D92 C3 6B 9C             jp go_back5r              ; jump back to main loop
 588+ 9D95
 589+ 9D95              ;############################################
 590+ 9D95              ;############################################
 591+ 9D95              ;draw layer 4 right
 592+ 9D95              ;############################################
 593+ 9D95              ;############################################
 594+ 9D95
 595+ 9D95              draw_4r
 596+ 9D95
 597+ 9D95
 598+ 9D95              ; jump straight into sjasmplus debugger
 599+ 9D95              ;        BREAK
 600+ 9D95              ;        ret
 601+ 9D95
 602+ 9D95
 603+ 9D95              ; hl=maze location being drawn.
 604+ 9D95              ; now determine what to draw for this section.
 605+ 9D95
 606+ 9D95
 607+ 9D95 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
 608+ 9D98
 609+ 9D98 CD 7B 8E             call load_de            ;get left and right and front jump into de reg
 610+ 9D9B
 611+ 9D9B 19                   add hl,de               ;jump backwards along the user view 1 space
 612+ 9D9C 22 25 FA             ld (furthest_point),hl  ;load our last furthest point
 613+ 9D9F
 614+ 9D9F              ;we should also move our pointer left to read where the walls are.
 615+ 9D9F              ;this will be from this point onwards as we can see the blocks more fully
 616+ 9D9F
 617+ 9D9F              ;        ld de,(right)
 618+ 9D9F              ;        add hl,de               ;should be 1 place to the left now
 619+ 9D9F              ;        ld (furthest_point),hl ;re save it
 620+ 9D9F
 621+ 9D9F 11 01 00             ld de,$0001 ;$0003             ;to move the printed position +3
 622+ 9DA2                                              ;not including black wall bit
 623+ 9DA2 ED 53 11 FA          ld (var4),de
 624+ 9DA6
 625+ 9DA6
 626+ 9DA6              ;we need to move pointer 1 to the right for wall checking
 627+ 9DA6 ED 5B 0D FA          ld de,(right)
 628+ 9DAA 19                   add hl,de
 629+ 9DAB 22 15 FA             ld (var6),hl
 630+ 9DAE
 631+ 9DAE ED 53 0F FA          ld (var3),de
 632+ 9DB2 11 59 01             ld   de,$0159;159       ; offset to row 10 column 19 - right of  centre of the 3d view.
 633+ 9DB5 CD BB 9D             call do_draw_4r
 634+ 9DB8
 635+ 9DB8
 636+ 9DB8              ;ret
 637+ 9DB8 C3 7B 9F             jp draw_3r           ;now draw the 4th level
 638+ 9DBB
 639+ 9DBB              do_draw_4r:
 640+ 9DBB
 641+ 9DBB 2A 86 81             ld hl,(d_file)        ; fetch the location of the display file.
 642+ 9DBE 19                   add hl,de
 643+ 9DBF 06 04                ld b,4                 ; count for max of 4 blocks right of maze position
 644+ 9DC1                                              ; 0 is not counted so loops 3 times
 645+ 9DC1 ED 5B 15 FA          ld de,(var6)
 646+ 9DC5 EB                   ex de,hl              ; transfer de to hl.
 647+ 9DC6
 648+ 9DC6              loop9r:
 649+ 9DC6 E5                   push hl
 650+ 9DC7
 651+ 9DC7              ;*#########################################
 652+ 9DC7              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
 653+ 9DC7
 654+ 9DC7 3A 28 FA             ld a,(maze_highbyte)
 655+ 9DCA BC                   cp h                    ;are we at the top part of the maze?
 656+ 9DCB CA FE 9D             jp z,cont_4a
 657+ 9DCE                                              ;if we are on a different maze boundary
 658+ 9DCE                                              ;then draw a maze wall as we are the top
 659+ 9DCE                                              ;or north wall but maze data has no
 660+ 9DCE                                              ;wall data.
 661+ 9DCE              ;4 = 1st right wall
 662+ 9DCE              ;3 = 2nd right wall
 663+ 9DCE              ;2 = 3rd right wall
 664+ 9DCE              ;1 = 4th right wall
 665+ 9DCE
 666+ 9DCE 78                   ld a,b                  ;our current wall counter
 667+ 9DCF FE 04                cp 4
 668+ 9DD1 C2 DC 9D             jp nz,b4                 ;its not wall 2
 669+ 9DD4 3E 01                ld a,1
 670+ 9DD6 47                   ld b,a
 671+ 9DD7 C6 80                add a,128               ;make sure we set a wall!
 672+ 9DD9 C3 2D 9E             jp draw_9r             ;jump straight to making an end wall
 673+ 9DDC
 674+ 9DDC FE 03        b4:     cp 3
 675+ 9DDE C2 E9 9D             jp nz,b4_1                 ;its not wall 2
 676+ 9DE1 3E 01                ld a,1
 677+ 9DE3 47                   ld b,a
 678+ 9DE4 C6 80                add a,128               ;make sure we set a wall!
 679+ 9DE6 C3 6A 9E             jp draw_9r_2             ;jump straight to making an end wall
 680+ 9DE9
 681+ 9DE9 FE 02        b4_1:   cp 2
 682+ 9DEB C2 F6 9D             jp nz,b4_2                 ;its not wall 2
 683+ 9DEE 3E 01                ld a,1
 684+ 9DF0 47                   ld b,a
 685+ 9DF1 C6 80                add a,128               ;make sure we set a wall!
 686+ 9DF3 C3 DA 9E             jp draw_9r_3             ;jump straight to making an end wall
 687+ 9DF6
 688+ 9DF6 3E 01        b4_2:   ld a,1
 689+ 9DF8 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
 690+ 9DF9 C6 80                add a,128               ;make sure we set a wall!
 691+ 9DFB C3 3B 9F             jp draw_9r_4	       	;draw the 2nd wall to the right
 692+ 9DFE
 693+ 9DFE              ;*#########################################
 694+ 9DFE              cont_4a:
 695+ 9DFE 7E                   ld a,(hl)
 696+ 9DFF 17                   rla
 697+ 9E00 DA 13 9E             jp c,do_wall4r            ;bit 7 (128)
 698+ 9E03
 699+ 9E03
 700+ 9E03              go_back4r:
 701+ 9E03 2A 11 FA             ld hl,(var4)            ;used for left and right drawing
 702+ 9E06                                              ; holds current screen position
 703+ 9E06 19                   add hl,de
 704+ 9E07 EB                   ex de,hl
 705+ 9E08 E1                   pop hl
 706+ 9E09 D5                   push de
 707+ 9E0A ED 5B 0F FA          ld de,(var3)            ;hold address of next block in the maze we test
 708+ 9E0E 19                   add hl,de               ; move to the start of the next block to print
 709+ 9E0F                                              ;we need to move back 4 blocks
 710+ 9E0F                                              ;as the first block obscures the view
 711+ 9E0F                                              ;of the next 3 blocks.
 712+ 9E0F D1                   pop de
 713+ 9E10 10 B4                djnz loop9r
 714+ 9E12 C9                   ret
 715+ 9E13              ;now do the 4th position
 716+ 9E13
 717+ 9E13              do_wall4r:
 718+ 9E13              do_wall4a:
 719+ 9E13
 720+ 9E13              ;now draw the wall based on bc count
 721+ 9E13
 722+ 9E13              wall4_start:
 723+ 9E13
 724+ 9E13 78                   ld a,b
 725+ 9E14 D6 04                sub 4                   ;4 = 1st wall to the right
 726+ 9E16 CA 2D 9E             jp z,draw_9r
 727+ 9E19
 728+ 9E19 78                   ld a,b
 729+ 9E1A D6 03                sub 3                   ;3 = 2nd wall immediately to the right
 730+ 9E1C CA 6A 9E             jp z,draw_9r_2
 731+ 9E1F
 732+ 9E1F 78                   ld a,b
 733+ 9E20 D6 02                sub 2                   ;2 = 3rd wall immediately to the right
 734+ 9E22 CA DA 9E             jp z,draw_9r_3
 735+ 9E25
 736+ 9E25 78                   ld a,b
 737+ 9E26 D6 01                sub 1                   ;1 = 4th wall immediately to the right
 738+ 9E28 CA 3B 9F             jp z,draw_9r_4
 739+ 9E2B
 740+ 9E2B E1                   pop hl
 741+ 9E2C C9                   ret
 742+ 9E2D
 743+ 9E2D
 744+ 9E2D              draw_9r:
 745+ 9E2D C5                   push bc
 746+ 9E2E D5                   push de                 ;save our display pointer
 747+ 9E2F 06 04                ld b,4                  ;block is 4 blocks high
 748+ 9E31 21 21 00             ld   hl,$0021           ;load with 32 to jump to line below us
 749+ 9E34 3E B7        loop10r:ld   a,_mediumwall_1      ;grey sides facing us
 750+ 9E36 12                   ld   (de),a             ; insert thepart of the wall.
 751+ 9E37 13                   inc de
 752+ 9E38 12                   ld (de),a               ;put grey side to our right
 753+ 9E39 13                   inc de
 754+ 9E3A 12                   ld (de),a
 755+ 9E3B 13                   inc de
 756+ 9E3C 12                   ld (de),a
 757+ 9E3D 1B                   dec de
 758+ 9E3E 1B                   dec de                  ;go left 1 again
 759+ 9E3F 1B                   dec de
 760+ 9E40 EB                   ex de,hl
 761+ 9E41 19                   add  hl,de              ; advance to the next row of the display file.
 762+ 9E42 EB                   ex de,hl
 763+ 9E43 10 EF                djnz loop10r             ;do this 3 times
 764+ 9E45
 765+ 9E45                      ;now draw the blank face
 766+ 9E45 D1                   pop de                  ;back to our original position
 767+ 9E46 D5                   push de
 768+ 9E47 1B                   dec de                  ;move left 1 space in the display
 769+ 9E48
 770+ 9E48              ;check if the char to our right is a wall block.
 771+ 9E48              ;if so, do not draw a black face as we need to hide it or it will
 772+ 9E48              ;ovewrite the already drawn block
 773+ 9E48
 774+ 9E48 1A                   ld a,(de)
 775+ 9E49 FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
 776+ 9E4B C2 52 9E             jp nz,cont_1r            ;there is no block so draw black edge
 777+ 9E4E D1                   pop de
 778+ 9E4F C1                   pop bc
 779+ 9E50 18 B1                jr go_back4r             ;otherwise quit this draw
 780+ 9E52
 781+ 9E52 EB           cont_1r ex  de,hl
 782+ 9E53 11 21 00             ld de,$0021
 783+ 9E56 3E B2                ld  a,_topcorner3      ;triangle sloping to right bottom
 784+ 9E58 77                   ld  (hl),a
 785+ 9E59 19                   add hl,de
 786+ 9E5A 3E AF                ld  a,_black
 787+ 9E5C 77                   ld  (hl),a
 788+ 9E5D 19                   add hl,de
 789+ 9E5E 3E AF                ld  a,_black
 790+ 9E60 77                   ld  (hl),a
 791+ 9E61 19                   add hl,de
 792+ 9E62
 793+ 9E62 77                   ld  (hl),a
 794+ 9E63 3E B1                ld  a,_topcorner2
 795+ 9E65 77                   ld  (hl),a
 796+ 9E66 D1                   pop de
 797+ 9E67 C1                   pop bc
 798+ 9E68 18 99                jr go_back4r              ; jump back to main loop
 799+ 9E6A
 800+ 9E6A              ;************************************
 801+ 9E6A              ;*Draw the 2nd right block of section 4
 802+ 9E6A              ;************************************
 803+ 9E6A
 804+ 9E6A              draw_9r_2:
 805+ 9E6A C5                   push bc
 806+ 9E6B 21 03 00             ld hl,3                 ;move display 3 chars to the right
 807+ 9E6E 19                   add hl,de
 808+ 9E6F EB                   ex de,hl
 809+ 9E70 D5                   push de
 810+ 9E71
 811+ 9E71              ;now draw the 2nd wall itself
 812+ 9E71 06 04                ld b,4                  ;block is 4 blocks high
 813+ 9E73 21 21 00             ld hl,$0021           ;load with 32 to jump to line below us
 814+ 9E76 3E B7                ld a,_mediumwall_1      ;grey sides facing us
 815+ 9E78
 816+ 9E78              loop10r_2:
 817+ 9E78 12                   ld (de),a             ; insert thepart of the wall.
 818+ 9E79 13                   inc de
 819+ 9E7A 12                   ld (de),a               ;put grey side to our right
 820+ 9E7B 13                   inc de
 821+ 9E7C 12                   ld (de),a
 822+ 9E7D 13                   inc de
 823+ 9E7E 12                   ld (de),a
 824+ 9E7F 13                   inc de
 825+ 9E80 12                   ld (de),a
 826+ 9E81 1B                   dec de
 827+ 9E82 1B                   dec de
 828+ 9E83 1B                   dec de
 829+ 9E84 1B                   dec de                  ;go left 1 again
 830+ 9E85 EB                   ex de,hl
 831+ 9E86 19                   add  hl,de              ; advance to the next row of the display file.
 832+ 9E87 EB                   ex de,hl
 833+ 9E88 10 EE                djnz loop10r_2             ;do this 3 times
 834+ 9E8A
 835+ 9E8A                      ;now draw the blank face
 836+ 9E8A D1                   pop de                  ;back to our original position
 837+ 9E8B D5                   push de
 838+ 9E8C 1B                   dec de                  ;move left 1 space in the display
 839+ 9E8D
 840+ 9E8D              ;check if the char to our right is a wall block.
 841+ 9E8D              ;if so, do not draw a black face as we need to hide it or it will
 842+ 9E8D              ;ovewrite the already drawn block
 843+ 9E8D
 844+ 9E8D 1A                   ld a,(de)
 845+ 9E8E FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
 846+ 9E90 C2 98 9E             jp nz,cont_1r_2           ;there is no block so draw black edge
 847+ 9E93 D1                   pop de
 848+ 9E94 C1                   pop bc
 849+ 9E95 C3 03 9E             jp go_back4r             ;otherwise quit this draw
 850+ 9E98
 851+ 9E98              cont_1r_2:
 852+ 9E98 EB                   ex  de,hl
 853+ 9E99 11 21 00             ld de,$0021
 854+ 9E9C
 855+ 9E9C              ;need to loop 2 times drawing 2 lots of 3 top
 856+ 9E9C              ;& bottom chars- move down 1after 1st 3 top chars drawn
 857+ 9E9C              ;
 858+ 9E9C
 859+ 9E9C 3E 02                ld a,2
 860+ 9E9E 32 18 FA             ld (var7),a             ;save initial count for 2 draws
 861+ 9EA1
 862+ 9EA1              ;loop for 2 black wall columns
 863+ 9EA1 3E 03                ld a,3                  ;column start height
 864+ 9EA3 32 04 FA             ld (var1),a           ;save the count for the column hight minus the top corners
 865+ 9EA6
 866+ 9EA6 06 03                ld b,3                  ;loop 3 times for 3 columns
 867+ 9EA8 22 13 FA             ld (var5),hl            ;address of first face block after corner chamfer
 868+ 9EAB 3E 91                ld a,$91
 869+ 9EAD 32 05 FA             ld (var2),a             ;ld var2 with top right sloping corner black
 870+ 9EB0
 871+ 9EB0              loop10br_2:
 872+ 9EB0 C5                   push bc                 ;save count
 873+ 9EB1 3A 04 FA             ld a,(var1)             ;column height
 874+ 9EB4 47                   ld b,a                  ;holds the column height in chars
 875+ 9EB5 3A 05 FA             ld  a,(var2)            ;triangle sloping to right bottom
 876+ 9EB8 F5                   push af                 ;save a for bottom corners
 877+ 9EB9 77                   ld  (hl),a
 878+ 9EBA
 879+ 9EBA              loop10ar_2:
 880+ 9EBA 19                   add hl,de
 881+ 9EBB 3E AF                ld  a,_black            ;black wall fill
 882+ 9EBD 77                   ld  (hl),a              ;draw 6 black blocks and3 edges
 883+ 9EBE 10 FA                djnz loop10ar_2
 884+ 9EC0
 885+ 9EC0 F1                   pop af                  ;retrivetop corner
 886+ 9EC1 3D                   dec a                   ;prep for next top corner
 887+ 9EC2 32 05 FA             ld (var2),a             ;re-save it for next corner
 888+ 9EC5 C6 04                add a,4                 ;get the correct char to print
 889+ 9EC7 77                   ld  (hl),a              ;draw the bottom of the wall
 890+ 9EC8
 891+ 9EC8                      ;now change column count
 892+ 9EC8 3A 04 FA             ld a,(var1)
 893+ 9ECB C1                   pop bc
 894+ 9ECC
 895+ 9ECC 2A 13 FA             ld hl,(var5)
 896+ 9ECF 2B                   dec hl                  ;move print position to the left
 897+ 9ED0 22 13 FA             ld (var5),hl
 898+ 9ED3
 899+ 9ED3 10 DB                djnz loop10br_2
 900+ 9ED5
 901+ 9ED5              exit_1_2:
 902+ 9ED5 D1                   pop de
 903+ 9ED6 C1                   pop bc
 904+ 9ED7 C3 03 9E             jp go_back4r              ; jump back to main loop
 905+ 9EDA
 906+ 9EDA              ;#############################################
 907+ 9EDA              ;*Draw the 3rd right block of section 4
 908+ 9EDA              ;#############################################
 909+ 9EDA
 910+ 9EDA              draw_9r_3:
 911+ 9EDA
 912+ 9EDA C5                   push bc
 913+ 9EDB D5                   push de                 ;save our display pointer
 914+ 9EDC 06 04                ld b,4                  ;block is 4 blocks high
 915+ 9EDE 21 21 00             ld hl,$0021             ;load with 32 to jump to line below us
 916+ 9EE1 11 62 C1             ld de,$C162             ;start of drawing
 917+ 9EE4
 918+ 9EE4              loop10r_3:
 919+ 9EE4 3E B7                ld a,_mediumwall_1      ;grey sides facing us
 920+ 9EE6 12                   ld (de),a               ; insert thepart of the wall.
 921+ 9EE7 EB                   ex de,hl
 922+ 9EE8 19                   add  hl,de              ; advance to the next row of the display file.
 923+ 9EE9 EB                   ex de,hl
 924+ 9EEA 10 F8                djnz loop10r_3          ;do this 3 times
 925+ 9EEC
 926+ 9EEC                      ;now draw the blank face
 927+ 9EEC D1                   pop de                  ;back to our original position
 928+ 9EED D5                   push de
 929+ 9EEE
 930+ 9EEE              ;check if the char to our right is a wall block.
 931+ 9EEE              ;if so, do not draw a black face as we need to hide it or it will
 932+ 9EEE              ;ovewrite the already drawn block
 933+ 9EEE
 934+ 9EEE
 935+ 9EEE 3A 61 C1             ld a,($c161);(de)
 936+ 9EF1 FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
 937+ 9EF3 C2 FB 9E             jp nz,cont_1r_3            ;there is no block so draw black edge
 938+ 9EF6
 939+ 9EF6 D1                   pop de
 940+ 9EF7 C1                   pop bc
 941+ 9EF8 C3 03 9E             jp go_back4r             ;otherwise quit this draw
 942+ 9EFB
 943+ 9EFB              cont_1r_3:
 944+ 9EFB EB                   ex  de,hl
 945+ 9EFC 11 21 00             ld de,$0021
 946+ 9EFF 21 61 C1             ld hl,$c161
 947+ 9F02
 948+ 9F02              ;need to loop 2 times drawing 2 lots of 3 top
 949+ 9F02              ;& bottom chars- move down 1after 1st 3 top chars drawn
 950+ 9F02              ;
 951+ 9F02
 952+ 9F02              ;loop for 2 black wall columns
 953+ 9F02 3E 03                ld a,3                  ;column start height
 954+ 9F04 32 04 FA             ld (var1),a             ;save the count for the column hight minus the top corners
 955+ 9F07
 956+ 9F07 06 05                ld b,5                  ;loop 5 times for 5 columns
 957+ 9F09 22 13 FA             ld (var5),hl            ;address of first face block after corner chamfer
 958+ 9F0C 3E CD                ld a,$cd ;91
 959+ 9F0E 32 05 FA             ld (var2),a             ;ld var2 with top right sloping corner black
 960+ 9F11
 961+ 9F11              loop10br_2a:
 962+ 9F11 C5                   push bc                 ;save count
 963+ 9F12 3A 04 FA             ld a,(var1)             ;column height
 964+ 9F15 47                   ld b,a                  ;holds the column height in chars
 965+ 9F16 3A 05 FA             ld  a,(var2)            ;triangle sloping to right bottom
 966+ 9F19 F5                   push af                 ;save a for bottom corners
 967+ 9F1A 77                   ld  (hl),a
 968+ 9F1B
 969+ 9F1B              loop10ar_2a:
 970+ 9F1B 19                   add hl,de
 971+ 9F1C 3E AF                ld  a,_black            ;black wall fill
 972+ 9F1E 77                   ld  (hl),a              ;draw 6 black blocks and3 edges
 973+ 9F1F 10 FA                djnz loop10ar_2a
 974+ 9F21
 975+ 9F21 F1                   pop af                  ;retrivetop corner
 976+ 9F22 3D                   dec a                   ;prep for next top corner
 977+ 9F23 32 05 FA             ld (var2),a             ;re-save it for next corner
 978+ 9F26 C6 06                add a,6                 ;get the correct char to print
 979+ 9F28 77                   ld  (hl),a              ;draw the bottom of the wall
 980+ 9F29
 981+ 9F29                      ;now change column count
 982+ 9F29 3A 04 FA             ld a,(var1)
 983+ 9F2C C1                   pop bc
 984+ 9F2D
 985+ 9F2D 2A 13 FA             ld hl,(var5)
 986+ 9F30 2B                   dec hl                  ;move print position to the left
 987+ 9F31 22 13 FA             ld (var5),hl
 988+ 9F34
 989+ 9F34 10 DB                djnz loop10br_2a
 990+ 9F36
 991+ 9F36 D1                   pop de
 992+ 9F37 C1                   pop bc
 993+ 9F38 C3 03 9E             jp go_back4r              ; jump back to main loop
 994+ 9F3B
 995+ 9F3B              ;#############################################
 996+ 9F3B              ;*Draw the 4th RIGHT block of section 4
 997+ 9F3B              ;#############################################
 998+ 9F3B
 999+ 9F3B              ; we only need to draw up to 2 columns of black sides.
1000+ 9F3B
1001+ 9F3B              draw_9r_4:
1002+ 9F3B C5                   push bc
1003+ 9F3C D5                   push de                 ;save our display pointer
1004+ 9F3D
1005+ 9F3D              ;check if the char to our left is a wall block.
1006+ 9F3D              ;if so, do not draw a black face as we need to hide it or it will
1007+ 9F3D              ;ovewrite the already drawn block
1008+ 9F3D
1009+ 9F3D 21 62 C1             ld hl,$C18C+20-30-32              ;start of drawing
1010+ 9F40 7E                   ld a,(hl)
1011+ 9F41 FE B7                cp _mediumwall_1        ;is there an already drawn screen block here?
1012+ 9F43 C2 4B 9F             jp nz,cont_3r            ;there is no block so draw black edge
1013+ 9F46
1014+ 9F46 D1                   pop de
1015+ 9F47 C1                   pop bc
1016+ 9F48 C3 03 9E             jp go_back4r             ;otherwise quit this draw
1017+ 9F4B
1018+ 9F4B              cont_3r:
1019+ 9F4B 11 21 00             ld de,33                ;to jump to next line below
1020+ 9F4E 3E CA                ld a,$ca                ;top of the wall
1021+ 9F50 E5                   push hl                 ;save for drawing 2nd black wall
1022+ 9F51 77                   ld (hl),a               ;to cover up wall 5
1023+ 9F52 19                   add hl,de               ;jump to next line
1024+ 9F53 3E AF                ld a,_black
1025+ 9F55 77                   ld (hl),a
1026+ 9F56 19                   add hl,de
1027+ 9F57 77                   ld (hl),a
1028+ 9F58 19                   add hl,de
1029+ 9F59 3E CF                ld a,$cf                ;draw bottom of the line
1030+ 9F5B 77                   ld (hl),a
1031+ 9F5C
1032+ 9F5C              ;now check if we need to cover wall 5 with a 2nd black line to the left
1033+ 9F5C              ;hl points to top of the 4 blocks
1034+ 9F5C E1                   pop hl                  ;restore our pointer in char ram
1035+ 9F5D 2B                   dec hl                  ;go left 1 place
1036+ 9F5E E5                   push hl
1037+ 9F5F 19                   add hl,de               ;now we are at the wall 5 top position
1038+ 9F60 7E                   ld a,(hl)
1039+ 9F61 FE B4                cp _smallwall
1040+ 9F63 E1                   pop hl
1041+ 9F64 20 0B                jr nz,exit3r
1042+ 9F66              ;draw the second wall over section 5 wall
1043+ 9F66 36 C9                ld (hl),$c9             ;top of the wall
1044+ 9F68 19                   add hl,de
1045+ 9F69 36 AF                ld (hl),_black
1046+ 9F6B 19                   add hl,de
1047+ 9F6C 36 AF                ld (hl),_black
1048+ 9F6E 19                   add hl,de
1049+ 9F6F 36 CE                ld (hl),$ce             ;bottom of the wall
1050+ 9F71
1051+ 9F71 D1           exit3r:  pop de                  ;now exit
1052+ 9F72 C1                   pop bc
1053+ 9F73 C3 03 9E             jp go_back4r
1054+ 9F76
1055+ 9F76
1056+ 9F76              ;draw 2 black walls across 1 line
1057+ 9F76              black_wall_2:
1058+ 9F76 19                   add hl,de      ;jump 1 line below
1059+ 9F77 77                   ld (hl),a
1060+ 9F78 23                   inc hl
1061+ 9F79 77                   ld (hl),a
1062+ 9F7A C9                   ret
1063+ 9F7B
1064+ 9F7B
1065+ 9F7B              ;#############################################
1066+ 9F7B              ;#############################################
1067+ 9F7B              ;# draw wall 3 right
1068+ 9F7B              ;#############################################
1069+ 9F7B              ;#############################################
1070+ 9F7B
1071+ 9F7B              draw_3r:
1072+ 9F7B
1073+ 9F7B              ; hl=maze location being drawn.
1074+ 9F7B              ; now determine what to draw for this section.
1075+ 9F7B
1076+ 9F7B
1077+ 9F7B 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
1078+ 9F7E
1079+ 9F7E CD 7B 8E             call load_de            ;get left and right and front jump into de reg
1080+ 9F81
1081+ 9F81 19                   add hl,de               ;jump backwards along the user view 1 space
1082+ 9F82 22 25 FA             ld (furthest_point),hl  ;re save it
1083+ 9F85
1084+ 9F85 11 01 00             ld de,$0001             ;to move the display position +1
1085+ 9F88 ED 53 11 FA          ld (var4),de
1086+ 9F8C
1087+ 9F8C ED 5B 0D FA          ld de,(right)
1088+ 9F90
1089+ 9F90 19                   add hl,de
1090+ 9F91 22 15 FA             ld (var6),hl
1091+ 9F94                         ;save the maze position
1092+ 9F94
1093+ 9F94 ED 53 0F FA          ld (var3),de
1094+ 9F98 11 19 01             ld de,$0119           ; offset right of  centre of the 3d view.
1095+ 9F9B
1096+ 9F9B CD A1 9F             call do_draw_3r
1097+ 9F9E
1098+ 9F9E
1099+ 9F9E C3 00 A1             jp draw_2r              ;now draw the 2nd level
1100+ 9FA1
1101+ 9FA1              do_draw_3r:
1102+ 9FA1
1103+ 9FA1 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
1104+ 9FA4 19                   add  hl,de
1105+ 9FA5
1106+ 9FA5
1107+ 9FA5              ; draw  right half of the display.
1108+ 9FA5
1109+ 9FA5 06 03                ld b,3                  ; count for 2 blocks left or right of display file
1110+ 9FA7                                              ; 0 is not counted so loops 12 times
1111+ 9FA7 ED 5B 15 FA          ld de,(var6)            ; retrieve the maze location.
1112+ 9FAB
1113+ 9FAB EB                   ex   de,hl              ; transfer de to hl.
1114+ 9FAC
1115+ 9FAC              ;       hl = furthest point in the maze
1116+ 9FAC              ;       de = d_file location to store byte to display
1117+ 9FAC
1118+ 9FAC              loop11r:
1119+ 9FAC E5                   push hl
1120+ 9FAD
1121+ 9FAD              ;*#########################################
1122+ 9FAD              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
1123+ 9FAD
1124+ 9FAD 3A 28 FA             ld a,(maze_highbyte)
1125+ 9FB0 BC                   cp h                    ;are we at the top part of the maze?
1126+ 9FB1 CA D8 9F             jp z,cont_3a
1127+ 9FB4                                              ;if we are on a different maze boundary
1128+ 9FB4                                              ;then draw a maze wall as we are the top
1129+ 9FB4                                              ;or north wall but maze data has no
1130+ 9FB4                                              ;wall data.
1131+ 9FB4              ;3 = first right wall
1132+ 9FB4              ;2 = 2nd right wall
1133+ 9FB4              ;1 = 3rd right wall
1134+ 9FB4
1135+ 9FB4 78                   ld a,b                  ;our current wall counter
1136+ 9FB5 D6 03                sub 3
1137+ 9FB7 C2 C2 9F             jp nz,b3_1                 ;its not wall 2
1138+ 9FBA 3E 01                ld a,1
1139+ 9FBC 47                   ld b,a
1140+ 9FBD C6 80                add a,128               ;make sure we set a wall!
1141+ 9FBF C3 FC 9F             jp draw_10r             ;jump straight to making an end wall
1142+ 9FC2
1143+ 9FC2 78           b3_1    ld a,b                  ;our current wall counter
1144+ 9FC3 D6 02                sub 2
1145+ 9FC5 C2 D0 9F             jp nz,b3_2                 ;its not wall 2
1146+ 9FC8 3E 01                ld a,1
1147+ 9FCA 47                   ld b,a
1148+ 9FCB C6 80                add a,128               ;make sure we set a wall!
1149+ 9FCD C3 6A A0             jp draw_10r_2             ;jump straight to making an end wall
1150+ 9FD0
1151+ 9FD0
1152+ 9FD0 3E 01        b3_2:   ld a,1
1153+ 9FD2 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
1154+ 9FD3 C6 80                add a,128               ;make sure we set a wall!
1155+ 9FD5 C3 DC A0             jp draw_10r_3	       	;draw the 2nd wall to the right
1156+ 9FD8
1157+ 9FD8              ;*#########################################
1158+ 9FD8              cont_3a:
1159+ 9FD8 7E                   ld a,(hl)
1160+ 9FD9 17                   rla
1161+ 9FDA DA E8 9F             jp c,do_wall3r            ;if bit 7=128 theres a wall
1162+ 9FDD
1163+ 9FDD
1164+ 9FDD              go_back3r:
1165+ 9FDD E1                   pop hl
1166+ 9FDE D5                   push de
1167+ 9FDF ED 5B 0F FA          ld de,(var3)            ;used for left and right drawing
1168+ 9FE3 19                   add hl,de                ; go right 1 block in the maze
1169+ 9FE4 D1                   pop de
1170+ 9FE5 10 C5                djnz loop11r
1171+ 9FE7 C9                   ret
1172+ 9FE8              ;now do the next maze position
1173+ 9FE8
1174+ 9FE8
1175+ 9FE8              do_wall3r:
1176+ 9FE8
1177+ 9FE8                      ;check if bit 1 is set as thats an end wall
1178+ 9FE8                      ;and b must then be changed to 1 to stop drawing.
1179+ 9FE8
1180+ 9FE8                      ;2020 draw layers according to how close to the middle
1181+ 9FE8              ;         bit 1,a                 ; is this a side wall? (129 but we rla'd accumulator)
1182+ 9FE8              ;         jr z,wall3_start
1183+ 9FE8              ;         ld b,1                  ;it IS a sidewall so set b so we exit on return
1184+ 9FE8
1185+ 9FE8              ;**** Whats this for? Does it work!
1186+ 9FE8              ;         ld a,(blockid)
1187+ 9FE8              ;         cp 16
1188+ 9FE8              ;         jp z,draw_10r          ;16 = a side wall
1189+ 9FE8
1190+ 9FE8              ;now draw the wall based on bc value
1191+ 9FE8              wall3_start:
1192+ 9FE8
1193+ 9FE8
1194+ 9FE8 78                  ld a,b			               ;b is the loop count i.e # of walls to draw
1195+ 9FE9 D6 01               	sub 1			               ;3 = the wall imediately right
1196+ 9FEB CA DC A0             jp z,draw_10r_3          ;draw an end wall if blockid=16
1197+ 9FEE
1198+ 9FEE 78                   ld a,b
1199+ 9FEF D6 03                sub 3
1200+ 9FF1 CA FC 9F             jp z,draw_10r         		;draw the 1st wall to the right
1201+ 9FF4
1202+ 9FF4 78                   ld a,b
1203+ 9FF5 D6 02                sub 2
1204+ 9FF7 CA 6A A0             jp z,draw_10r_2	       	;draw the 2nd wall to the right
1205+ 9FFA
1206+ 9FFA E1                   pop hl                  ;nothing to draw so return
1207+ 9FFB C9                   ret
1208+ 9FFC
1209+ 9FFC
1210+ 9FFC              draw_10r:
1211+ 9FFC C5                    push bc                ;save loop count
1212+ 9FFD 11 19 C1              ld de,$c119             ;start of print position
1213+ A000 D5                    push de                 ;save our display pointer
1214+ A001
1215+ A001 06 08                 ld b,8                  ;block is 8 blocks high
1216+ A003 21 21 00              ld hl,$0021             ;load with 32 to jump to line below us
1217+ A006 3E B5                 ld a, _mediumwall       ;wall on sides facing us
1218+ A008 12           loop12r: ld (de),a               ; insert the part of the wall.
1219+ A009 13                    inc de
1220+ A00A 12                    ld (de),a               ;put grey side to our right
1221+ A00B 13                    inc de
1222+ A00C 12                    ld (de),a               ;put grey side to our right
1223+ A00D 13                    inc de
1224+ A00E 12                    ld (de),a               ;put grey side to our right
1225+ A00F 13                    inc de
1226+ A010 12                    ld (de),a               ;put grey side to our right
1227+ A011 13                    inc de
1228+ A012 12                    ld (de),a               ;put grey side to our right
1229+ A013
1230+ A013 13                    inc de
1231+ A014 12                    ld (de),a
1232+ A015 13                    inc de
1233+ A016 12                    ld (de),a
1234+ A017 1B                    dec de
1235+ A018 1B                    dec de
1236+ A019
1237+ A019 1B                    dec de
1238+ A01A 1B                    dec de
1239+ A01B 1B                    dec de
1240+ A01C 1B                    dec de
1241+ A01D 1B                    dec de
1242+ A01E EB                    ex de,hl
1243+ A01F 19                    add  hl,de              ; advance to the next row of the display file.
1244+ A020 EB                    ex de,hl
1245+ A021 10 E5                 djnz loop12r            ;do this 3 times
1246+ A023
1247+ A023              ;now draw the blank face to the leftt of the block
1248+ A023              ;create first column of left face characters
1249+ A023
1250+ A023 D1                    pop de                  ;back to our original position
1251+ A024 D5                    push de
1252+ A025 1B                    dec de                  ;move ahead 1 space in the display (right)
1253+ A026
1254+ A026              ;check if the char to our left is a wall block.
1255+ A026              ;if so, do not draw a black face as we need to hide it or it will
1256+ A026              ;ovewrite the already drawn block
1257+ A026
1258+ A026 1A                    ld a,(de)
1259+ A027 FE B5                 cp _mediumwall        ;is there an already drawn screen block here?
1260+ A029 C2 30 A0              jp nz,cont_2r            ;there is no block so draw black edge
1261+ A02C D1                    pop de
1262+ A02D C1                    pop bc
1263+ A02E 18 AD                 jr go_back3r             ;otherwise quit this draw
1264+ A030
1265+ A030
1266+ A030 EB           cont_2r: ex  de,hl
1267+ A031 11 21 00              ld de,$0021
1268+ A034
1269+ A034              ;loop for 2 columns
1270+ A034
1271+ A034 06 02                ld b,2                  ; loop 2 times for 2 columns
1272+ A036 22 13 FA             ld (var5),hl            ;address of first face block after corner chamfer
1273+ A039 3E 07                ld a,7
1274+ A03B 32 04 FA             ld  (var1),a            ;save the count for the column hight minus the top corners
1275+ A03E
1276+ A03E              loop12br:
1277+ A03E C5                   push bc                 ;save count
1278+ A03F 3A 04 FA             ld a,(var1)
1279+ A042 47                   ld b,a                  ;holds the column height in chars
1280+ A043 3E B2                ld  a,_topcorner3      ;triangle sloping to right bottom
1281+ A045 77                   ld  (hl),a
1282+ A046
1283+ A046              loop12ar:                   ;we must start at5 to draw 4 face blocks on right
1284+ A046 19                   add hl,de
1285+ A047 3E AF                ld  a,_black      ;triangle sloping to right bottom
1286+ A049 77                   ld  (hl),a              ;draw 6 black blocks and 2 edges
1287+ A04A 10 FA                djnz loop12ar
1288+ A04C
1289+ A04C
1290+ A04C 3E B1                ld  a,_topcorner2
1291+ A04E 77                   ld  (hl),a
1292+ A04F
1293+ A04F                      ;now change column count
1294+ A04F 3A 04 FA             ld a,(var1)
1295+ A052 D6 02                sub 2                   ;subtract 2
1296+ A054 32 04 FA             ld (var1),a
1297+ A057 C1                   pop bc
1298+ A058
1299+ A058 2A 13 FA             ld hl,(var5)
1300+ A05B 2B                   dec hl                  ;move print position to the left
1301+ A05C 11 21 00             ld de,$21               ;move top of next column down and across 1
1302+ A05F 19                   add hl,de
1303+ A060 22 13 FA             ld (var5),hl
1304+ A063
1305+ A063 10 D9                djnz loop12br
1306+ A065 D1                   pop de
1307+ A066 C1                   pop bc
1308+ A067 C3 DD 9F             jp go_back3r              ; jump back to main loop
1309+ A06A
1310+ A06A              ;**********************************
1311+ A06A              ;     draw the 2nd right block
1312+ A06A              ;***********************************
1313+ A06A
1314+ A06A              draw_10r_2:
1315+ A06A
1316+ A06A C5                    push bc
1317+ A06B 11 19 C1              ld de, $c119           ;start print position of wall
1318+ A06E D5                   push de
1319+ A06F              ;dont draw a front wall as we never see it.
1320+ A06F
1321+ A06F 21 08 00             ld hl,8                 ;move 8 blocks over to start position
1322+ A072 19                   add hl,de
1323+ A073 EB                   ex de,hl
1324+ A074              ;we do not need a front wall for this row as it is never seen.
1325+ A074              ;below jp code can be removed :) Because a square block here
1326+ A074              ;is 8 x 8
1327+ A074
1328+ A074 1B                    dec de                  ;move ahead 1 space in the display (right)
1329+ A075
1330+ A075              ;check if the char to our left is a wall block.
1331+ A075              ;if so, do not draw a black face as we need to hide it or it will
1332+ A075              ;ovewrite the already drawn block
1333+ A075 1A                    ld a,(de)
1334+ A076 FE B5                 cp _mediumwall        ;is there an already drawn screen block here?
1335+ A078 C2 80 A0              jp nz,cont_2r_2            ;there is no block so draw black edge
1336+ A07B D1                    pop de
1337+ A07C C1                    pop bc
1338+ A07D C3 DD 9F              jp go_back3r             ;otherwise quit this draw
1339+ A080
1340+ A080
1341+ A080              ;draw the black edge wall
1342+ A080
1343+ A080              cont_2r_2:
1344+ A080 EB                    ex  de,hl
1345+ A081 11 21 00              ld de,$0021
1346+ A084
1347+ A084              ;need to loop 2 times drawing 2 lots of 3 top
1348+ A084              ;& bottom chars- move down 1after 1st 3 top chars drawn
1349+ A084              ;
1350+ A084
1351+ A084 3E 02                ld a,2
1352+ A086 32 18 FA             ld (var7),a             ;save initial count for 2 draws
1353+ A089
1354+ A089              ;loop for 3 black wall columns
1355+ A089 3E 07                ld a,7                  ;column start height
1356+ A08B 32 04 FA             ld  (var1),a            ;save the count for the column hight minus the top corners
1357+ A08E
1358+ A08E 06 03        loop_x: ld b,3                  ;loop 3 times for 3 columns
1359+ A090 22 13 FA             ld (var5),hl            ;address of first face block after corner chamfer
1360+ A093 3E 91                ld a,$91
1361+ A095 32 05 FA             ld (var2),a             ;ld var2 with top right sloping corner black
1362+ A098
1363+ A098              loop12br_2:
1364+ A098 C5                   push bc                 ;save count
1365+ A099 3A 04 FA             ld a,(var1)             ;column height
1366+ A09C 47                   ld b,a                  ;holds the column height in chars
1367+ A09D 3A 05 FA             ld  a,(var2)            ;triangle sloping to right bottom
1368+ A0A0 F5                   push af                 ;save a for bottom corners
1369+ A0A1 77                   ld  (hl),a
1370+ A0A2
1371+ A0A2              loop12ar_2:
1372+ A0A2 19                   add hl,de
1373+ A0A3 3E AF                ld  a,_black            ;black wall fill
1374+ A0A5 77                   ld  (hl),a              ;draw 6 black blocks and3 edges
1375+ A0A6 10 FA                djnz loop12ar_2
1376+ A0A8
1377+ A0A8 F1                   pop af                  ;retrivetop corner
1378+ A0A9 3D                   dec a                   ;prep for next top corner
1379+ A0AA 32 05 FA             ld (var2),a             ;re-save it for next corner
1380+ A0AD C6 04                add a,4                 ;get the correct char to print
1381+ A0AF 77                   ld  (hl),a              ;draw the bottom of the wall
1382+ A0B0
1383+ A0B0                      ;now change column count
1384+ A0B0 3A 04 FA             ld a,(var1)
1385+ A0B3 C1                   pop bc
1386+ A0B4
1387+ A0B4 2A 13 FA             ld hl,(var5)
1388+ A0B7 2B                   dec hl                  ;move print position to the left
1389+ A0B8 22 13 FA             ld (var5),hl
1390+ A0BB
1391+ A0BB 10 DB                djnz loop12br_2
1392+ A0BD
1393+ A0BD              ;1st set of 3 top bits drawn
1394+ A0BD              ;now jump down the display 1 line
1395+ A0BD              ;then draw another 3 columns
1396+ A0BD
1397+ A0BD 3A 18 FA             ld a,(var7)             ;get our loop counter
1398+ A0C0 3D                   dec a
1399+ A0C1 28 12                jr z,exit_1             ;exit after 2 loops
1400+ A0C3 32 18 FA             ld (var7),a             ;save it
1401+ A0C6 2A 13 FA             ld hl,(var5)
1402+ A0C9              ;get our last print position
1403+ A0C9                                              ;need to go to next line -1 char
1404+ A0C9 19                   add hl,de
1405+ A0CA                                              ; now move back in the display
1406+ A0CA                                              ;1 char
1407+ A0CA 22 13 FA             ld (var5),hl            ;re save it for use above
1408+ A0CD
1409+ A0CD 3E 05                ld a,5                  ;reduce black wall column height
1410+ A0CF 32 04 FA             ld  (var1),a            ;save the count for the column hight minus the top corners
1411+ A0D2
1412+ A0D2 C3 8E A0             jp loop_x
1413+ A0D5
1414+ A0D5
1415+ A0D5 D1           exit_1: pop de
1416+ A0D6 C1                   pop bc
1417+ A0D7 06 01                ld b,1                  ;if we draw this wall, we need to stop drawing any more walls
1418+ A0D9 C3 DD 9F             jp go_back3r              ; jump back to main loop
1419+ A0DC
1420+ A0DC
1421+ A0DC              ;#############################################
1422+ A0DC              ;*Draw the 3rd RIGHT block of section3
1423+ A0DC              ;#############################################
1424+ A0DC
1425+ A0DC
1426+ A0DC              	; we only need to draw 2 columns of black sides.
1427+ A0DC                  ; if theres no brick pattern !
1428+ A0DC
1429+ A0DC              draw_10r_3:
1430+ A0DC C5                   push bc
1431+ A0DD D5                   push de                 ;save our display pointer
1432+ A0DE
1433+ A0DE 21 41 C1             ld hl,$C18C-66-30-3+24  ;start of drawing
1434+ A0E1 7E                   ld a,(hl)               ;read what char is there
1435+ A0E2 FE B5                cp _mediumwall
1436+ A0E4 20 05                jr nz,cont_1r_4        ;exit if a wall is already there
1437+ A0E6 D1                   pop de
1438+ A0E7 C1                   pop bc
1439+ A0E8 C3 DD 9F             jp go_back3r             ;otherwise quit this draw
1440+ A0EB
1441+ A0EB              cont_1r_4:
1442+ A0EB
1443+ A0EB 3E C9                ld a,$c9
1444+ A0ED 77                   ld (hl),a
1445+ A0EE
1446+ A0EE 3E AF                ld a,_black
1447+ A0F0 11 21 00             ld de,33                ;1 line width
1448+ A0F3
1449+ A0F3 CD 61 95             CALL black_wall         ;draw 4 black blocks
1450+ A0F6
1451+ A0F6 19                   add hl,de               ;jump to next line below
1452+ A0F7
1453+ A0F7
1454+ A0F7              ;top half done - so do bottom half - 2 blacks first
1455+ A0F7
1456+ A0F7              ;de already holds 32
1457+ A0F7
1458+ A0F7 3E CE                ld a,$ce
1459+ A0F9 77                   ld (hl),a
1460+ A0FA
1461+ A0FA D1                   pop de
1462+ A0FB C1                   pop bc
1463+ A0FC C3 DD 9F             jp go_back3r
1464+ A0FF
1465+ A0FF              ;draw 2 black walls across 1 line
1466+ A0FF              ;black_wall:
1467+ A0FF              ;        add hl,de      ;jump 1 line below
1468+ A0FF              ;        ld (hl),a
1469+ A0FF              ;        add hl,de      ;jump 1 line below
1470+ A0FF              ;        ld (hl),a
1471+ A0FF              ;        add hl,de      ;jump 1 line below
1472+ A0FF              ;        ld (hl),a
1473+ A0FF              ;        add hl,de      ;jump 1 line below
1474+ A0FF              ;        ld (hl),a
1475+ A0FF
1476+ A0FF C9                   ret
1477+ A100
1478+ A100
1479+ A100
1480+ A100              ;#############################################
1481+ A100              ;#############################################
1482+ A100              ; draw  layer 2
1483+ A100              ;#############################################
1484+ A100              ;#############################################
1485+ A100
1486+ A100              draw_2r:
1487+ A100
1488+ A100
1489+ A100              ; hl=maze location being drawn.
1490+ A100              ; now determine what to draw for this section.
1491+ A100              test
1492+ A100
1493+ A100 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
1494+ A103
1495+ A103 CD 7B 8E             call load_de            ;get left and right and front jump into de reg
1496+ A106
1497+ A106 19                   add hl,de               ;jump backwards along the user view 1 space
1498+ A107 22 25 FA             ld (furthest_point),hl ;re save it
1499+ A10A
1500+ A10A 11 01 00             ld de,$0001             ;to move the display position +1
1501+ A10D ED 53 11 FA          ld (var4),de
1502+ A111
1503+ A111 ED 5B 0D FA          ld de,(right)
1504+ A115
1505+ A115              ;we need to move pointer 1 to the left for wall checking
1506+ A115 19                   add hl,de
1507+ A116 22 15 FA             ld (var6),hl
1508+ A119
1509+ A119 ED 53 0F FA          ld (var3),de
1510+ A11D 11 B9 00             ld  de,$0b9           ; offset to right of centre of the 3d view.
1511+ A120 CD 26 A1             call do_draw_2r
1512+ A123
1513+ A123 C3 9B A1             jp draw_1r           ;now draw the 2nd level
1514+ A126
1515+ A126              do_draw_2r:
1516+ A126
1517+ A126 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
1518+ A129 19                   add  hl,de
1519+ A12A
1520+ A12A
1521+ A12A 06 01                ld b,1                 ; count for 1 blocks left or right of display file
1522+ A12C                                              ; 0 is not counted so loops 12 times
1523+ A12C ED 5B 15 FA          ld de,(var6)
1524+ A130
1525+ A130 EB                   ex   de,hl              ; transfer de to hl.
1526+ A131
1527+ A131
1528+ A131 E5           loop14r: push hl
1529+ A132
1530+ A132              ;*#########################################
1531+ A132              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
1532+ A132
1533+ A132 3A 28 FA             ld a,(maze_highbyte)
1534+ A135 BC                   cp h                    ;are we at the top part of the maze?
1535+ A136 CA 41 A1             jp z,cont_2a
1536+ A139                                              ;if we are on a different maze boundary
1537+ A139                                              ;then draw a maze wall as we are the top
1538+ A139                                              ;or north wall but maze data has no
1539+ A139                                              ;wall data.
1540+ A139
1541+ A139 3E 01                ld a,1
1542+ A13B 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
1543+ A13C C6 7F                add a,127               ;make sure we set a wall!
1544+ A13E C3 48 A1             jp draw_11r             ;jump straight to making an end wall
1545+ A141
1546+ A141              ;*#########################################
1547+ A141              cont_2a:
1548+ A141 7E                   ld a,(hl)
1549+ A142 17                   rla
1550+ A143 DA 48 A1             jp c,do_wall2r            ;bit 7 (128)
1551+ A146
1552+ A146
1553+ A146              go_back2r:
1554+ A146 E1                   pop hl
1555+ A147 C9                   ret
1556+ A148              ;now do the 2nd position
1557+ A148
1558+ A148
1559+ A148
1560+ A148              do_wall2r:
1561+ A148                      ;check if bit 2 is set as thats an end wall.
1562+ A148                      ;and b must then be changed to 1 to stop drawing.
1563+ A148              ;        bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
1564+ A148              ;        jr z,draw_11r
1565+ A148              ;        ld b,1                  ;set b so we exit on return
1566+ A148
1567+ A148              ;?? 2020 do we need this??????
1568+ A148              ;        ld a,(blockid)
1569+ A148              ;        cp 16
1570+ A148              ;        jp z,draw_11r           ;draw an endwall if blockid=16
1571+ A148              ;        pop hl
1572+ A148              ;        ret
1573+ A148
1574+ A148
1575+ A148              draw_11r:
1576+ A148              ;        push bc
1577+ A148 D5                   push de                 ;save our display pointer
1578+ A149 06 0E                ld b,14                  ;block is 14 blocks high
1579+ A14B 21 21 00             ld   hl,$0021           ;load with 32 to jump to line below us
1580+ A14E 3E B6                ld   a,_largewall            ;wall on sides facing us
1581+ A150
1582+ A150              ;draw 4 columns of bricks
1583+ A150              loop13r:
1584+ A150 12                   ld (de),a             ; insert the part of the wall.
1585+ A151 13                   inc de
1586+ A152 12                   ld (de),a               ;draw brick side
1587+ A153 13                   inc de
1588+ A154 12                   ld (de),a
1589+ A155 13                   inc de
1590+ A156 12                   ld (de),a
1591+ A157 13                   inc de
1592+ A158 12                   ld (de),a
1593+ A159 1B                   dec de
1594+ A15A 1B                   dec de
1595+ A15B 1B                   dec de
1596+ A15C 1B                   dec de
1597+ A15D EB                   ex de,hl
1598+ A15E 19                   add  hl,de              ; advance to the next row of the display file.
1599+ A15F EB                   ex de,hl
1600+ A160 10 EE               djnz loop13r             ;do this 3 times
1601+ A162
1602+ A162
1603+ A162
1604+ A162                      ;now draw the blank face to the left of the block
1605+ A162                      ;create first column of left face characters
1606+ A162 D1                   pop de                  ;back to our original position
1607+ A163 1B                   dec de
1608+ A164 EB                   ex  de,hl
1609+ A165 11 21 00             ld de,$0021
1610+ A168
1611+ A168 06 03                ld b,3                  ; for 4 face columns to draw to draw
1612+ A16A 22 13 FA             ld (var5),hl
1613+ A16D 3E 0D                ld a,13                 ; for 14 blocks high per column
1614+ A16F 32 04 FA             ld (var1),a
1615+ A172
1616+ A172              ;draw the black sides
1617+ A172              loop13br:
1618+ A172 C5                   push bc
1619+ A173 3A 04 FA             ld a,(var1)
1620+ A176 47                   ld b,a
1621+ A177 3E B2                ld a,_topcorner3
1622+ A179 77                   ld (hl),a
1623+ A17A
1624+ A17A              loop13ar:
1625+ A17A 19                   add hl,de
1626+ A17B 3E AF                ld  a,_black
1627+ A17D 77                   ld  (hl),a              ;draw 14 black blocks and 3 edges
1628+ A17E 10 FA                djnz loop13ar
1629+ A180
1630+ A180 3E B1                ld  a,_topcorner2
1631+ A182 77                   ld  (hl),a
1632+ A183
1633+ A183              ; now change the column count
1634+ A183 3A 04 FA             ld a,(var1)
1635+ A186 D6 02                sub 2
1636+ A188 32 04 FA             ld (var1),a
1637+ A18B C1                   pop bc
1638+ A18C
1639+ A18C 2A 13 FA             ld hl,(var5)
1640+ A18F 2B                   dec hl
1641+ A190 11 21 00             ld de,$21
1642+ A193 19                   add hl,de
1643+ A194 22 13 FA             ld (var5),hl
1644+ A197
1645+ A197 10 D9                djnz loop13br
1646+ A199
1647+ A199 18 AB                jr go_back2r              ; jump back to main loop
1648+ A19B
1649+ A19B
1650+ A19B
1651+ A19B              ;#############################################
1652+ A19B              ;#############################################
1653+ A19B              ; draw 1st layer right
1654+ A19B              ;#############################################
1655+ A19B              ;#############################################
1656+ A19B
1657+ A19B              draw_1r:
1658+ A19B
1659+ A19B              ; hl=maze location being drawn.
1660+ A19B              ; now determine what to draw for this section.
1661+ A19B
1662+ A19B
1663+ A19B 2A 25 FA             ld hl,(furthest_point)  ;load our last furthest point
1664+ A19E
1665+ A19E CD 7B 8E             call load_de            ;get left and right and front jump into de reg
1666+ A1A1
1667+ A1A1 19                   add hl,de               ;jump backwards along the user view 1 space
1668+ A1A2 22 25 FA             ld (furthest_point),hl ;re save it
1669+ A1A5
1670+ A1A5 11 01 00             ld de,$0001             ;to move the display position +1
1671+ A1A8 ED 53 11 FA          ld (var4),de
1672+ A1AC
1673+ A1AC ED 5B 0D FA          ld de,(right)
1674+ A1B0
1675+ A1B0              ;we need to move pointer 1 to the left for wall checking
1676+ A1B0 19                   add hl,de
1677+ A1B1 22 15 FA             ld (var6),hl
1678+ A1B4
1679+ A1B4              ;        ld de,$0001             ;to move the display position +1
1680+ A1B4 ED 53 0F FA          ld (var3),de
1681+ A1B8 11 38 00             ld  de,$038           ; offset to row 1 column 0 - left of  centre of the 3d view.
1682+ A1BB CD C1 A1             call do_draw_1r
1683+ A1BE
1684+ A1BE
1685+ A1BE C3 31 A2             jp draw_0r           ;now draw the 2nd level
1686+ A1C1
1687+ A1C1              do_draw_1r:
1688+ A1C1
1689+ A1C1 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
1690+ A1C4 19                   add  hl,de
1691+ A1C5
1692+ A1C5 06 01                ld b,1                 ; count for 2 blocks left or right of display file
1693+ A1C7                                              ; 0 is not counted so loops 12 times
1694+ A1C7 ED 5B 15 FA          ld de,(var6)
1695+ A1CB EB                   ex   de,hl              ; transfer de to hl.
1696+ A1CC
1697+ A1CC              ;       hl = furthest point in the maze
1698+ A1CC              ;       de = d_file location to store byte to display
1699+ A1CC
1700+ A1CC E5           loop15r: push hl
1701+ A1CD
1702+ A1CD              ;*#########################################
1703+ A1CD              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
1704+ A1CD
1705+ A1CD 3A 28 FA             ld a,(maze_highbyte)
1706+ A1D0 BC                   cp h                    ;are we at the top part of the maze?
1707+ A1D1 CA DC A1             jp z,cont_1a
1708+ A1D4                                              ;if we are on a different maze boundary
1709+ A1D4                                              ;then draw a maze wall as we are the top
1710+ A1D4                                              ;or north wall but maze data has no
1711+ A1D4                                              ;wall data.
1712+ A1D4
1713+ A1D4 3E 01                ld a,1
1714+ A1D6 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
1715+ A1D7 C6 7F                add a,127               ;make sure we set a wall!
1716+ A1D9 C3 E9 A1             jp draw_12r             ;jump straight to making an end wall
1717+ A1DC
1718+ A1DC              ;*#########################################
1719+ A1DC              cont_1a:
1720+ A1DC 7E                   ld a,(hl)
1721+ A1DD 17                   rla
1722+ A1DE DA E3 A1             jp c,do_wall1r            ;bit 7 (128)
1723+ A1E1
1724+ A1E1              go_back1r:
1725+ A1E1 E1                   pop hl
1726+ A1E2 C9                   ret
1727+ A1E3
1728+ A1E3              do_wall1r:
1729+ A1E3                      ;check if bit 2 is set as thats an end
1730+ A1E3                      ;and b must then be changed to 1 to stop drawing.
1731+ A1E3
1732+ A1E3 CB 4F                bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
1733+ A1E5 28 02                jr z,draw_12r
1734+ A1E7 06 01                ld b,1                  ;set b so we exit on return
1735+ A1E9
1736+ A1E9              ;**** Whats this for? Does it work!
1737+ A1E9
1738+ A1E9              ;        ld a,(blockid)
1739+ A1E9              ;        cp 16
1740+ A1E9              ;        jp z,draw_12r           ;draw an end wall if blockid=16
1741+ A1E9              ;        pop hl
1742+ A1E9              ;        ret
1743+ A1E9
1744+ A1E9
1745+ A1E9              ;draw the corridor bit to the left (1 column)
1746+ A1E9              draw_12r:
1747+ A1E9 D5                   push de                 ;save our display pointer
1748+ A1EA 06 16                ld b,22                  ;block is 22 blocks high
1749+ A1EC 21 21 00             ld   hl,$0021           ;load with 32 to jump to line below us
1750+ A1EF 3E B8                ld   a,_hugewall;_largewall            ;wall on sides facing us
1751+ A1F1              loop16r:                        ; insert thepart of the wall.
1752+ A1F1 13                   inc de
1753+ A1F2 12                   ld (de),a               ;put grey side to our right
1754+ A1F3 1B                   dec de
1755+ A1F4 EB                   ex de,hl
1756+ A1F5 19                   add  hl,de              ; advance to the next row of the display file.
1757+ A1F6 EB                   ex de,hl
1758+ A1F7 10 F8                djnz loop16r             ;do this 3 times
1759+ A1F9
1760+ A1F9                      ;now draw the blank face to the right of the block
1761+ A1F9                      ;create first column of right face characters
1762+ A1F9 D1                   pop de                  ;back to our original position
1763+ A1FA EB                   ex  de,hl
1764+ A1FB 11 21 00             ld de,$0021
1765+ A1FE
1766+ A1FE              ;now draw the face we see on our left as we walk forward
1767+ A1FE 06 04                ld b,4                  ; for 8 face columns to draw to draw
1768+ A200 22 13 FA             ld (var5),hl
1769+ A203 3E 15                ld a,21                 ; for 14 blocks high per column
1770+ A205 32 04 FA             ld (var1),a
1771+ A208
1772+ A208              loop14br:
1773+ A208 C5                   push bc
1774+ A209 3A 04 FA             ld a,(var1)
1775+ A20C 47                   ld b,a
1776+ A20D 3E B2                ld a,_topcorner3
1777+ A20F 77                   ld (hl),a
1778+ A210
1779+ A210              loop14ar:
1780+ A210 19                   add hl,de
1781+ A211 3E AF                ld  a,_black            ;triangle sloping to right bottom
1782+ A213 77                   ld  (hl),a              ;draw 14 black blocks and 3 edges
1783+ A214 10 FA                djnz loop14ar
1784+ A216
1785+ A216 3E B1                ld  a,_topcorner2
1786+ A218 77                   ld  (hl),a
1787+ A219
1788+ A219              ; now change the column count
1789+ A219 3A 04 FA             ld a,(var1)
1790+ A21C D6 02                sub 2
1791+ A21E 32 04 FA             ld (var1),a
1792+ A221 C1                   pop bc
1793+ A222
1794+ A222 2A 13 FA             ld hl,(var5)
1795+ A225 2B                   dec hl
1796+ A226 11 21 00             ld de,$21
1797+ A229 19                   add hl,de
1798+ A22A 22 13 FA             ld (var5),hl
1799+ A22D
1800+ A22D 10 D9                djnz loop14br
1801+ A22F
1802+ A22F 18 B0                jr go_back1r              ; jump back to main loop
1803+ A231
1804+ A231
1805+ A231              ;#############################################
1806+ A231              ;#############################################
1807+ A231              ; draw layer 0 right
1808+ A231              ;#############################################
1809+ A231              ;#############################################
1810+ A231
1811+ A231              draw_0r:
1812+ A231              ;ret
1813+ A231
1814+ A231
1815+ A231              ; hl=maze location being drawn.
1816+ A231              ; now determine what to draw for this section.
1817+ A231
1818+ A231 2A 25 FA             ld   hl,(furthest_point); retrieve the maze location.
1819+ A234
1820+ A234 CD 7B 8E             call load_de
1821+ A237
1822+ A237              ;**think we can lose these 2 lines.
1823+ A237                                  ;get left and right and front jump into de reg
1824+ A237 19                   add  hl,de
1825+ A238
1826+ A238              ;need to move pointer right for wall checking
1827+ A238 ED 5B 0D FA          ld de,(right)
1828+ A23C 19                   add hl,de
1829+ A23D 22 15 FA             ld (var6),hl
1830+ A240
1831+ A240 ED 53 0F FA          ld (var3),de
1832+ A244 11 18 00             ld  de,$18              ;offset to row0 column 24 - left of  centre of the 3d view.
1833+ A247                                              ;1 column of left face to draw
1834+ A247              ;draw the wall
1835+ A247 2A 86 81             ld   hl,(d_file)        ; fetch the location of the display file.
1836+ A24A 19                   add  hl,de
1837+ A24B
1838+ A24B
1839+ A24B ED 5B 15 FA          ld   de,(var6)
1840+ A24F EB                   ex   de,hl              ; transfer de to hl.
1841+ A250
1842+ A250
1843+ A250              loop17r:
1844+ A250
1845+ A250              ;*#########################################
1846+ A250              ;see if h is ouside the current maze 256 byte boundary - if so draw a wall.
1847+ A250
1848+ A250 3A 28 FA             ld a,(maze_highbyte)
1849+ A253 BC                   cp h                    ;are we at the top part of the maze?
1850+ A254 CA 5F A2             jp z,cont_0a
1851+ A257                                              ;if we are on a different maze boundary
1852+ A257                                              ;then draw a maze wall as we are the top
1853+ A257                                              ;or north wall but maze data has no
1854+ A257                                              ;wall data.
1855+ A257
1856+ A257 3E 01                ld a,1
1857+ A259 47                   ld b,a                  ;make the bc count 1 so we only draw 1 wall
1858+ A25A C6 7F                add a,127               ;make sure we set a wall!
1859+ A25C C3 6D A2             jp draw_13r             ;jump straight to making an end wall
1860+ A25F
1861+ A25F              ;*#########################################
1862+ A25F              cont_0a:
1863+ A25F 7E                   ld a,(hl)
1864+ A260 17                   rla
1865+ A261 DA 65 A2             jp c,do_wall0r           ;bit 7 (128)
1866+ A264 C9                   ret
1867+ A265
1868+ A265
1869+ A265              do_wall0r:
1870+ A265                      ;check if bit 2 is set as thats an end wall
1871+ A265                      ;and b must then be changed to 1 to stop drawing.
1872+ A265
1873+ A265 CB 4F                bit 1,a                 ; is this a side wall? (129 but we rla'd accu)
1874+ A267 DA 6D A2             jp c,draw_13r          ;yes if bit 2 = 1
1875+ A26A C3 84 A2             jp draw_wall0r           ;its a wall but not a side wall.
1876+ A26D
1877+ A26D
1878+ A26D
1879+ A26D
1880+ A26D              ;we need to draw 1 vertical line from pos 1,1 to show
1881+ A26D              ;the side of the block.
1882+ A26D
1883+ A26D              ;draw sidewall brick pattern
1884+ A26D              draw_13r:
1885+ A26D 3E B2                ld a,_topcorner3
1886+ A26F EB                   ex de,hl
1887+ A270
1888+ A270 77                   ld (hl),a
1889+ A271 11 21 00             ld de,$21                ;jp to next line below
1890+ A274 19                   add hl,de
1891+ A275 06 16                ld b,22                  ;block is 22 blocks high
1892+ A277 11 21 00             ld de,$021           ;load with 32 to jump to line below us
1893+ A27A 3E AF                ld a,_black            ;wall on sides facing us;
1894+ A27C              loop18r:
1895+ A27C 77                   ld (hl),a             ; insert the part of the wall.
1896+ A27D 19                   add  hl,de              ; advance to the next row of the display file.
1897+ A27E 10 FC                djnz loop18r
1898+ A280
1899+ A280              ;###this bit causes the direction indicator to fail
1900+ A280 3E B1                ld a,_topcorner2
1901+ A282 77                   ld (hl),a
1902+ A283 C9                   ret                     ;return to main program
1903+ A284
1904+ A284              draw_wall0r:                     ;draw brick pattern only
1905+ A284
1906+ A284 11 21 00             ld de,$21                ;jp to next line below
1907+ A287 19                   add hl,de
1908+ A288                     ; ex de,hl
1909+ A288
1910+ A288 06 16                ld b,22                  ;block is 24 blocks high
1911+ A28A 21 21 00             ld hl,$021           ;load with 32 to jump to line below us
1912+ A28D 3E B6                ld a,_largewall            ;wall on sides facing us;
1913+ A28F              loop19r:
1914+ A28F 77                   ld (hl),a             ; insert the part of the wall.
1915+ A290                     ; ex de,hl
1916+ A290 19                   add  hl,de              ; advance to the next row of the display file.
1917+ A291                     ; ex de,hl
1918+ A291 10 FC                djnz loop19r
1919+ A293
1920+ A293 C9                   ret                     ;return to main program
1921+ A294
# file closed: src/6-rd3dmazeV6.asm
 471  A294                  include 7-rd3dmazeV6.asm    ;the maze itself and other routines
# file opened: src/7-rd3dmazeV6.asm
   1+ A294              ;this is the maze data and colour exit routine
   2+ A294              ;also the screen char memory and colours
   3+ A294              ;exit animation logic
   4+ A294              ;sound routine
   5+ A294
   6+ A294
   7+ A294              ;##########################################################
   8+ A294              ;maze data
   9+ A294
  10+ A294                      org $a300
  11+ A300
  12+ A300              ;################################################################
  13+ A300              ; maze data
  14+ A300              ;################################################################
  15+ A300
  16+ A300              ; the maze lies on a 256 byte page boundary, allowing the code to check only the low byte of its address.
  17+ A300              ; the maze is 18 positions north-to-south (rows 0 to 17) and 16 positions west-to-east (columns 0 to 15).
  18+ A300              ;
  19+ A300              ;    n
  20+ A300              ;    |
  21+ A300              ; w -+- e
  22+ A300              ;    |
  23+ A300              ;    s
  24+ A300              ;
  25+ A300              ; key: x=wall, space=passageway, e=exit.
  26+ A300
  27+ A300
  28+ A300              ;#####################################################################################
  29+ A300              ;This is our 16 Maze's maze data = numbered 0 to 15
  30+ A300              ;#####################################################################################
  31+ A300
  32+ A300              ; maze constants
  33+ A300              ; --------------
  34+ A300              ; the code for the wall must have bit 7 set whereas the other codes must have bit 7 reset except switch and exit
  35+ A300              ;as we still need to draw a wall.
  36+ A300
  37+ A300              _mw     equ  128   ;bin 10000000              ; wall.
  38+ A300              _mp     equ  32    ;bin 00100000              ; passageway.
  39+ A300              _me     equ  192   ;bin 11000000              ; exit.
  40+ A300              _sp     equ  32    ;bin 00100000              ; passageway.
  41+ A300              _mh     equ  129   ;bin 10000001              ; seperator or end wall
  42+ A300              _ms     equ  224   ;bin 11100000              ; switch     ($e0)
  43+ A300
  44+ A300
  45+ A300              ; _mh - outside wall
  46+ A300              ; _mw - inner maze wall
  47+ A300              ; _mp - space=passageway
  48+ A300              ; _me - exit door
  49+ A300              ; _ms - switch
  50+ A300              ; maze starts at 34288 on a 256 byte boundary
  51+ A300
  52+ A300              ;col  1    2     3    4    5   6    7   8    9    10   11   12   13   14   15   16
  53+ A300              map_0:
  54+ A300 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
  54+ A304 20 20 20 20
  54+ A308 20 20 20 20
  54+ A30C 20 20 20 20
  55+ A310 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp ;2
  55+ A314 80 20 80 20
  55+ A318 80 20 80 20
  55+ A31C 80 20 80 20
  56+ A320 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
  56+ A324 20 20 20 20
  56+ A328 20 20 20 20
  56+ A32C 20 20 20 20
  57+ A330 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp ;4
  57+ A334 80 20 80 20
  57+ A338 80 20 80 20
  57+ A33C 80 20 80 20
  58+ A340 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
  58+ A344 20 20 20 20
  58+ A348 20 20 20 20
  58+ A34C 20 20 20 20
  59+ A350 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp ;6
  59+ A354 80 20 80 20
  59+ A358 80 20 80 20
  59+ A35C 80 20 80 20
  60+ A360 81 20 20 20   db _mh, _mp, _mp, _mp, _mw, _mw, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
  60+ A364 80 80 80 20
  60+ A368 20 20 20 20
  60+ A36C 20 20 20 20
  61+ A370 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mp, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp ;8
  61+ A374 80 20 20 20
  61+ A378 80 20 80 20
  61+ A37C 80 20 80 20
  62+ A380 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _me, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
  62+ A384 20 20 C0 80
  62+ A388 20 20 20 20
  62+ A38C 20 20 20 20
  63+ A390 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mp, _mp, _mw, _mw, _mp, _mp, _mw, _mp ;10
  63+ A394 80 20 80 20
  63+ A398 20 20 80 80
  63+ A39C 20 20 80 20
  64+ A3A0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _me, _mw, _mp, _mp, _mp ;11
  64+ A3A4 20 20 20 20
  64+ A3A8 80 20 20 C0
  64+ A3AC 80 20 20 20
  65+ A3B0 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mp, _mp, _mw, _mw, _mp, _mp, _mw, _mp ;12
  65+ A3B4 80 20 80 20
  65+ A3B8 20 20 80 80
  65+ A3BC 20 20 80 20
  66+ A3C0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
  66+ A3C4 20 20 20 20
  66+ A3C8 20 20 20 20
  66+ A3CC 20 20 20 20
  67+ A3D0 81 20 C0 20   db _mh, _mp, _me, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp ;14
  67+ A3D4 80 20 80 20
  67+ A3D8 80 20 80 20
  67+ A3DC 80 20 80 20
  68+ A3E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
  68+ A3E4 20 20 20 20
  68+ A3E8 20 20 20 20
  68+ A3EC 20 20 20 20
  69+ A3F0 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp ;16
  69+ A3F4 80 20 80 20
  69+ A3F8 80 20 80 20
  69+ A3FC 80 20 80 20
  70+ A400
  71+ A400              map_1:
  72+ A400 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
  72+ A404 20 20 20 20
  72+ A408 20 20 20 20
  72+ A40C 20 20 20 20
  73+ A410 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;2
  73+ A414 20 20 20 20
  73+ A418 20 80 20 20
  73+ A41C 20 20 20 20
  74+ A420 81 C0 20 80   db _mh, _me, _mp, _mw, _mp, _mw, _mw, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
  74+ A424 20 80 80 80
  74+ A428 20 20 20 20
  74+ A42C 20 20 20 20
  75+ A430 81 80 20 20   db _mh, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;4
  75+ A434 20 20 20 20
  75+ A438 20 80 20 20
  75+ A43C 20 20 20 20
  76+ A440 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
  76+ A444 20 20 80 20
  76+ A448 20 20 20 20
  76+ A44C 20 20 20 20
  77+ A450 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mw, _mw, _mw, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;6
  77+ A454 20 80 80 80
  77+ A458 20 80 20 20
  77+ A45C 20 20 20 20
  78+ A460 81 20 80 20   db _mh, _mp, _mw, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
  78+ A464 20 80 20 20
  78+ A468 20 20 20 20
  78+ A46C 20 20 20 20
  79+ A470 81 20 20 20   db _mh, _mp, _mp, _mp, _mw, _mw, _mp, _me, _mw, _mw, _mp, _mw, _mw, _mw, _mp, _mp ;8
  79+ A474 80 80 20 C0
  79+ A478 80 80 20 80
  79+ A47C 80 80 20 20
  80+ A480 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
  80+ A484 80 80 20 80
  80+ A488 20 20 20 20
  80+ A48C 20 20 20 20
  81+ A490 81 20 80 20   db _mh, _mp, _mw, _mp, _mp, _mw, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;10
  81+ A494 20 80 20 20
  81+ A498 20 80 20 20
  81+ A49C 20 20 20 20
  82+ A4A0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
  82+ A4A4 20 20 80 20
  82+ A4A8 20 20 20 20
  82+ A4AC 20 20 20 20
  83+ A4B0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;12
  83+ A4B4 20 20 20 20
  83+ A4B8 20 80 20 20
  83+ A4BC 20 20 20 20
  84+ A4C0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
  84+ A4C4 20 20 20 20
  84+ A4C8 20 20 20 20
  84+ A4CC 20 20 20 20
  85+ A4D0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;14
  85+ A4D4 20 20 20 20
  85+ A4D8 20 80 20 20
  85+ A4DC 20 20 20 20
  86+ A4E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
  86+ A4E4 20 20 20 20
  86+ A4E8 20 20 20 20
  86+ A4EC 20 20 20 20
  87+ A4F0 81 E0 20 20   db _mh, _ms, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;16
  87+ A4F4 20 20 20 20
  87+ A4F8 20 80 20 20
  87+ A4FC 20 20 20 20
  88+ A500
  89+ A500
  90+ A500              map_2:
  91+ A500 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
  91+ A504 20 20 20 20
  91+ A508 20 20 20 20
  91+ A50C 20 20 20 20
  92+ A510 81 C0 20 80   db _mh, _me, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
  92+ A514 80 80 80 80
  92+ A518 80 20 20 20
  92+ A51C 20 20 20 20
  93+ A520 81 80 20 80   db _mh, _mw, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
  93+ A524 20 20 20 20
  93+ A528 20 20 20 20
  93+ A52C 20 20 20 20
  94+ A530 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
  94+ A534 20 20 20 20
  94+ A538 20 20 20 20
  94+ A53C 20 20 20 20
  95+ A540 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
  95+ A544 20 20 80 20
  95+ A548 20 20 20 20
  95+ A54C 20 20 20 20
  96+ A550 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;6
  96+ A554 20 20 20 20
  96+ A558 20 80 20 20
  96+ A55C 20 20 20 20
  97+ A560 81 20 20 20   db _mh, _mp, _mp, _mp, _mw, _mw, _mw, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
  97+ A564 80 80 80 80
  97+ A568 20 20 20 20
  97+ A56C 20 20 20 20
  98+ A570 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mw, _mw, _mw, _mp, _mp ;8
  98+ A574 20 20 80 20
  98+ A578 20 20 20 80
  98+ A57C 80 80 20 20
  99+ A580 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _me, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
  99+ A584 20 C0 20 20
  99+ A588 20 20 20 20
  99+ A58C 20 20 20 20
 100+ A590 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _mw, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;10
 100+ A594 20 80 20 20
 100+ A598 20 80 20 20
 100+ A59C 20 20 20 20
 101+ A5A0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 101+ A5A4 20 20 20 20
 101+ A5A8 80 20 20 20
 101+ A5AC 20 20 20 20
 102+ A5B0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 102+ A5B4 20 20 20 20
 102+ A5B8 80 20 20 20
 102+ A5BC 20 20 20 20
 103+ A5C0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 103+ A5C4 20 20 20 20
 103+ A5C8 20 20 20 20
 103+ A5CC 20 20 20 20
 104+ A5D0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 104+ A5D4 20 20 20 20
 104+ A5D8 20 20 20 20
 104+ A5DC 20 20 20 20
 105+ A5E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 105+ A5E4 20 20 20 20
 105+ A5E8 20 20 20 20
 105+ A5EC 20 20 20 20
 106+ A5F0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 106+ A5F4 20 20 20 20
 106+ A5F8 20 20 20 20
 106+ A5FC 20 20 20 20
 107+ A600
 108+ A600              map_3
 109+ A600 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 109+ A604 20 20 20 20
 109+ A608 20 20 20 20
 109+ A60C 20 20 20 20
 110+ A610 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 110+ A614 20 20 20 80
 110+ A618 20 20 20 20
 110+ A61C 20 20 20 20
 111+ A620 81 C0 20 20   db _mh, _me, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 111+ A624 20 20 20 80
 111+ A628 20 20 20 20
 111+ A62C 20 20 20 20
 112+ A630 81 80 20 20   db _mh, _mw, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp ;4
 112+ A634 20 20 20 80
 112+ A638 20 20 20 20
 112+ A63C 20 20 80 20
 113+ A640 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp ;5
 113+ A644 20 20 20 20
 113+ A648 20 20 20 20
 113+ A64C 20 20 80 20
 114+ A650 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 114+ A654 20 20 20 80
 114+ A658 20 20 20 20
 114+ A65C 20 20 20 20
 115+ A660 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 115+ A664 20 20 20 20
 115+ A668 20 20 20 20
 115+ A66C 20 20 20 20
 116+ A670 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 116+ A674 20 20 20 80
 116+ A678 20 20 20 20
 116+ A67C 20 20 20 20
 117+ A680 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 117+ A684 20 20 20 20
 117+ A688 20 20 20 20
 117+ A68C 20 20 20 20
 118+ A690 81 20 20 80   db _mh, _mp, _mp, _mw, _mw, _mw, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 118+ A694 80 80 20 80
 118+ A698 20 20 20 20
 118+ A69C 20 20 20 20
 119+ A6A0 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 119+ A6A4 20 20 80 20
 119+ A6A8 20 20 20 20
 119+ A6AC 20 20 20 20
 120+ A6B0 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _me, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 120+ A6B4 20 C0 20 80
 120+ A6B8 20 20 20 20
 120+ A6BC 20 20 20 20
 121+ A6C0 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 121+ A6C4 20 20 20 20
 121+ A6C8 20 20 20 20
 121+ A6CC 20 20 20 20
 122+ A6D0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 122+ A6D4 20 20 20 80
 122+ A6D8 20 20 20 20
 122+ A6DC 20 20 20 20
 123+ A6E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 123+ A6E4 20 20 20 80
 123+ A6E8 20 20 20 20
 123+ A6EC 20 20 20 20
 124+ A6F0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 124+ A6F4 20 20 20 80
 124+ A6F8 20 20 20 20
 124+ A6FC 20 20 20 20
 125+ A700
 126+ A700              map_4:
 127+ A700 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 127+ A704 20 20 20 20
 127+ A708 20 20 20 20
 127+ A70C 20 20 20 20
 128+ A710 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mp, _mp ;2
 128+ A714 80 80 80 80
 128+ A718 80 80 80 80
 128+ A71C 80 80 20 20
 129+ A720 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mw, _mp, _mp ;3
 129+ A724 20 20 20 20
 129+ A728 20 20 20 80
 129+ A72C 20 80 20 20
 130+ A730 81 C0 20 20   db _mh, _me, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mw, _mp, _mw, _mp, _mp, _mp, _mp ;4
 130+ A734 20 20 20 20
 130+ A738 80 80 20 80
 130+ A73C 20 20 20 20
 131+ A740 81 80 20 20   db _mh, _mw, _mp, _mp, _mw, _mw, _mw, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mp ;5
 131+ A744 80 80 80 80
 131+ A748 20 80 20 80
 131+ A74C 20 80 20 20
 132+ A750 81 20 80 80   db _mh, _mp, _mw, _mw, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mw, _mw, _mw, _mp, _mp ;6
 132+ A754 20 20 20 20
 132+ A758 20 80 20 80
 132+ A75C 80 80 20 20
 133+ A760 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mw, _mw, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp ;7
 133+ A764 20 20 80 80
 133+ A768 20 20 20 80
 133+ A76C 20 20 20 20
 134+ A770 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mp, _mp, _mp, _mp, _mp, _mw, _mw, _mw, _mp, _mp ;8
 134+ A774 80 80 20 20
 134+ A778 20 20 20 80
 134+ A77C 80 80 20 20
 135+ A780 81 20 80 20   db _mh, _mp, _mw, _mp, _mp, _mp, _mp, _mw, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mp ;9
 135+ A784 20 20 20 80
 135+ A788 20 80 80 80
 135+ A78C 80 80 80 20
 136+ A790 81 80 20 20   db _mh, _mw, _mp, _mp, _mw, _mw, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;10
 136+ A794 80 80 20 20
 136+ A798 20 80 20 20
 136+ A79C 20 20 20 20
 137+ A7A0 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mw, _mp ;11
 137+ A7A4 20 20 80 20
 137+ A7A8 20 20 20 20
 137+ A7AC 20 80 80 20
 138+ A7B0 81 80 20 80   db _mh, _mw, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mp, _mp ;12
 138+ A7B4 80 80 80 80
 138+ A7B8 80 80 80 80
 138+ A7BC 80 80 20 20
 139+ A7C0 81 20 20 80   db _mh, _mp, _mp, _mw, _mp, _mw, _mp, _mp, _mw, _mp, _mp, _mp, _mw, _mw, _mp, _mp ;13
 139+ A7C4 20 80 20 20
 139+ A7C8 80 20 20 20
 139+ A7CC 80 80 20 20
 140+ A7D0 81 80 20 20   db _mh, _mw, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp ;14
 140+ A7D4 20 80 20 20
 140+ A7D8 20 20 20 20
 140+ A7DC 20 80 20 20
 141+ A7E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mw, _mw, _mw, _mw, _mw, _mp, _mp, _mw, _mw, _mp, _mp ;15
 141+ A7E4 20 80 80 80
 141+ A7E8 80 80 20 20
 141+ A7EC 80 80 20 20
 142+ A7F0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 142+ A7F4 20 20 20 20
 142+ A7F8 20 20 20 20
 142+ A7FC 20 20 20 20
 143+ A800
 144+ A800              map_5:
 145+ A800 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 145+ A804 20 20 20 20
 145+ A808 20 20 20 20
 145+ A80C 20 20 20 20
 146+ A810 81 20 20 80   db _mh, _mp, _mp, _mw, _mw, _mw, _mw, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mp ;2
 146+ A814 80 80 80 20
 146+ A818 80 80 80 80
 146+ A81C 80 80 80 20
 147+ A820 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 147+ A824 20 20 20 20
 147+ A828 20 20 20 20
 147+ A82C 20 20 20 20
 148+ A830 81 20 C0 20   db _mh, _mp, _me, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 148+ A834 20 20 20 20
 148+ A838 20 20 20 20
 148+ A83C 20 20 20 20
 149+ A840 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mw, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mp ;5
 149+ A844 80 80 80 20
 149+ A848 80 80 80 80
 149+ A84C 80 80 80 20
 150+ A850 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 150+ A854 20 20 20 20
 150+ A858 20 20 20 20
 150+ A85C 20 20 20 20
 151+ A860 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 151+ A864 20 20 20 20
 151+ A868 20 20 20 20
 151+ A86C 20 20 20 20
 152+ A870 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 152+ A874 20 20 20 20
 152+ A878 20 20 20 20
 152+ A87C 20 20 20 20
 153+ A880 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mw, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mp ;9
 153+ A884 80 80 80 20
 153+ A888 80 80 80 80
 153+ A88C 80 80 80 20
 154+ A890 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mw, _mp, _mp, _mp ;10
 154+ A894 20 20 20 20
 154+ A898 20 20 80 20
 154+ A89C 80 20 20 20
 155+ A8A0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mw, _mp, _mp ;11
 155+ A8A4 20 20 20 20
 155+ A8A8 20 80 20 20
 155+ A8AC 20 80 20 20
 156+ A8B0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mw, _mp, _mp, _mw, _mp ;12
 156+ A8B4 20 20 20 20
 156+ A8B8 80 20 20 80
 156+ A8BC 20 20 80 20
 157+ A8C0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mw, _mp, _mw, _mp, _mp, _mp ;13
 157+ A8C4 20 20 20 80
 157+ A8C8 20 20 80 20
 157+ A8CC 80 20 20 20
 158+ A8D0 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mw, _mp, _mp, _mw, _mp, _mp, _mp, _mw, _mw, _mp ;14
 158+ A8D4 80 80 80 20
 158+ A8D8 20 80 20 20
 158+ A8DC 20 80 80 20
 159+ A8E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mw, _mw, _mw, _mp, _mp, _mp, _mp ;15
 159+ A8E4 20 20 20 20
 159+ A8E8 80 80 80 80
 159+ A8EC 20 20 20 20
 160+ A8F0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mw, _mp, _mp ;16
 160+ A8F4 20 20 20 80
 160+ A8F8 80 80 80 80
 160+ A8FC 80 80 20 20
 161+ A900
 162+ A900              map_6:
 163+ A900 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 163+ A904 20 20 20 20
 163+ A908 20 20 20 20
 163+ A90C 20 20 20 20
 164+ A910 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mp, _mp, _mw, _mw, _mw, _mp ;2
 164+ A914 80 80 80 80
 164+ A918 80 80 20 20
 164+ A91C 80 80 80 20
 165+ A920 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mp, _mp, _mw, _mw, _mp, _mp, _mp, _mw, _mp, _mp ;3
 165+ A924 80 20 20 20
 165+ A928 80 80 20 20
 165+ A92C 20 80 20 20
 166+ A930 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _ms, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mp, _mp ;4
 166+ A934 80 20 E0 20
 166+ A938 80 80 80 80
 166+ A93C 80 80 20 20
 167+ A940 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mp, _mw, _mp, _mw, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;5
 167+ A944 80 20 80 20
 167+ A948 80 80 20 20
 167+ A94C 20 20 20 20
 168+ A950 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mp, _mw, _mp, _mp, _mp, _mw, _mw, _mp ;6
 168+ A954 80 20 80 20
 168+ A958 20 80 20 20
 168+ A95C 20 80 80 20
 169+ A960 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mw, _mp, _mp ;7
 169+ A964 20 20 20 20
 169+ A968 20 80 20 20
 169+ A96C 20 80 20 20
 170+ A970 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mp ;8
 170+ A974 80 80 80 80
 170+ A978 20 80 80 80
 170+ A97C 80 80 80 20
 171+ A980 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 171+ A984 20 20 20 80
 171+ A988 20 20 20 20
 171+ A98C 20 20 20 20
 172+ A990 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mp, _mw, _mp, _mw, _mw, _mp, _mw, _mw, _mw, _mp ;10
 172+ A994 80 80 20 80
 172+ A998 20 80 80 20
 172+ A99C 80 80 80 20
 173+ A9A0 81 20 80 20   db _mh, _mp, _mw, _mp, _mp, _mw, _mp, _mw, _mp, _mp, _mw, _mp, _mw, _mp, _mw, _mp ;11
 173+ A9A4 20 80 20 80
 173+ A9A8 20 20 80 20
 173+ A9AC 80 20 80 20
 174+ A9B0 81 20 20 20   db _mh, _mp, _mp, _mp, _me, _mw, _mp, _mw, _mp, _mw, _mp, _mw, _mp, _mp, _mw, _mp ;12
 174+ A9B4 C0 80 20 80
 174+ A9B8 20 80 20 80
 174+ A9BC 20 20 80 20
 175+ A9C0 81 20 80 20   db _mh, _mp, _mw, _mp, _mw, _mw, _mp, _mw, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp ;13
 175+ A9C4 80 80 20 80
 175+ A9C8 20 80 20 20
 175+ A9CC 20 20 20 20
 176+ A9D0 81 20 80 20   db _mh, _mp, _mw, _mp, _mp, _mp, _mp, _mw, _mp, _mw, _mw, _mw, _mp, _mp, _mp, _mp ;14
 176+ A9D4 20 20 20 80
 176+ A9D8 20 80 80 80
 176+ A9DC 20 20 20 20
 177+ A9E0 81 20 80 80   db _mh, _mp, _mw, _mw, _mw, _mw, _mw, _mw, _mp, _mw, _mw, _mw, _mw, _mp, _mw, _mp ;15
 177+ A9E4 80 80 80 80
 177+ A9E8 20 80 80 80
 177+ A9EC 80 20 80 20
 178+ A9F0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 178+ A9F4 20 20 20 20
 178+ A9F8 20 20 20 20
 178+ A9FC 20 20 20 20
 179+ AA00
 180+ AA00              map_7
 181+ AA00 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 181+ AA04 20 20 20 20
 181+ AA08 20 20 20 20
 181+ AA0C 20 20 20 20
 182+ AA10 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 182+ AA14 20 20 20 80
 182+ AA18 20 20 20 20
 182+ AA1C 20 20 20 20
 183+ AA20 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 183+ AA24 20 20 20 80
 183+ AA28 20 20 20 20
 183+ AA2C 20 20 20 20
 184+ AA30 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 184+ AA34 20 20 20 80
 184+ AA38 20 20 20 20
 184+ AA3C 20 20 20 20
 185+ AA40 81 80 20 20   db _mh, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp ;5
 185+ AA44 20 20 20 20
 185+ AA48 20 20 20 20
 185+ AA4C 20 20 80 20
 186+ AA50 81 80 20 20   db _mh, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp ;6
 186+ AA54 20 20 20 20
 186+ AA58 20 20 20 20
 186+ AA5C 20 20 80 20
 187+ AA60 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 187+ AA64 20 20 20 20
 187+ AA68 20 20 20 20
 187+ AA6C 20 20 20 20
 188+ AA70 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 188+ AA74 20 20 20 20
 188+ AA78 20 20 20 20
 188+ AA7C 20 20 20 20
 189+ AA80 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 189+ AA84 20 20 20 20
 189+ AA88 20 20 20 20
 189+ AA8C 20 20 20 20
 190+ AA90 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp ;10
 190+ AA94 20 20 20 20
 190+ AA98 20 20 20 80
 190+ AA9C 20 20 20 20
 191+ AAA0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 191+ AAA4 20 20 20 20
 191+ AAA8 20 20 20 20
 191+ AAAC 20 20 20 20
 192+ AAB0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 192+ AAB4 20 20 20 20
 192+ AAB8 20 20 20 20
 192+ AABC 20 20 20 20
 193+ AAC0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 193+ AAC4 20 20 20 20
 193+ AAC8 20 20 20 20
 193+ AACC 20 20 20 20
 194+ AAD0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 194+ AAD4 20 20 20 20
 194+ AAD8 20 20 20 20
 194+ AADC 20 20 20 20
 195+ AAE0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 195+ AAE4 20 20 20 20
 195+ AAE8 20 20 20 20
 195+ AAEC 20 20 20 20
 196+ AAF0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 196+ AAF4 20 20 20 20
 196+ AAF8 20 20 20 20
 196+ AAFC 20 20 20 20
 197+ AB00
 198+ AB00              map_8:
 199+ AB00 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 199+ AB04 20 20 20 20
 199+ AB08 20 20 20 20
 199+ AB0C 20 20 20 20
 200+ AB10 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 200+ AB14 20 20 20 80
 200+ AB18 20 20 20 20
 200+ AB1C 20 20 20 20
 201+ AB20 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 201+ AB24 20 20 20 80
 201+ AB28 20 20 20 20
 201+ AB2C 20 20 20 20
 202+ AB30 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 202+ AB34 20 20 20 80
 202+ AB38 20 20 20 20
 202+ AB3C 20 20 20 20
 203+ AB40 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
 203+ AB44 20 20 20 20
 203+ AB48 20 20 20 20
 203+ AB4C 20 20 20 20
 204+ AB50 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 204+ AB54 20 20 20 20
 204+ AB58 20 20 20 20
 204+ AB5C 20 20 20 20
 205+ AB60 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 205+ AB64 20 20 20 20
 205+ AB68 20 20 20 20
 205+ AB6C 20 20 20 20
 206+ AB70 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 206+ AB74 20 20 20 20
 206+ AB78 20 20 20 20
 206+ AB7C 20 20 20 20
 207+ AB80 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 207+ AB84 20 20 20 20
 207+ AB88 20 20 20 20
 207+ AB8C 20 20 20 20
 208+ AB90 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 208+ AB94 20 20 20 20
 208+ AB98 20 20 20 20
 208+ AB9C 20 20 20 20
 209+ ABA0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 209+ ABA4 20 20 80 20
 209+ ABA8 20 20 20 20
 209+ ABAC 20 20 20 20
 210+ ABB0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 210+ ABB4 20 20 20 80
 210+ ABB8 20 20 20 20
 210+ ABBC 20 20 20 20
 211+ ABC0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mw, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 211+ ABC4 20 20 80 20
 211+ ABC8 20 20 20 20
 211+ ABCC 20 20 20 20
 212+ ABD0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 212+ ABD4 20 20 20 20
 212+ ABD8 20 20 20 20
 212+ ABDC 20 20 20 20
 213+ ABE0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 213+ ABE4 20 20 20 20
 213+ ABE8 20 20 20 20
 213+ ABEC 20 20 20 20
 214+ ABF0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 214+ ABF4 20 20 20 20
 214+ ABF8 20 20 20 20
 214+ ABFC 20 20 20 20
 215+ AC00
 216+ AC00              map_9:
 217+ AC00 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 217+ AC04 20 20 20 20
 217+ AC08 20 20 20 20
 217+ AC0C 20 20 20 20
 218+ AC10 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 218+ AC14 20 20 20 20
 218+ AC18 20 20 20 20
 218+ AC1C 20 20 20 20
 219+ AC20 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 219+ AC24 20 20 20 20
 219+ AC28 20 20 20 20
 219+ AC2C 20 20 20 20
 220+ AC30 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 220+ AC34 20 20 20 20
 220+ AC38 20 20 20 20
 220+ AC3C 20 20 20 20
 221+ AC40 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
 221+ AC44 20 20 20 20
 221+ AC48 20 20 20 20
 221+ AC4C 20 20 20 20
 222+ AC50 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 222+ AC54 20 20 20 20
 222+ AC58 20 20 20 20
 222+ AC5C 20 20 20 20
 223+ AC60 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 223+ AC64 20 20 20 20
 223+ AC68 20 20 20 20
 223+ AC6C 20 20 20 20
 224+ AC70 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 224+ AC74 20 20 20 20
 224+ AC78 20 20 20 20
 224+ AC7C 20 20 20 20
 225+ AC80 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 225+ AC84 20 20 20 20
 225+ AC88 20 20 20 20
 225+ AC8C 20 20 20 20
 226+ AC90 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 226+ AC94 20 20 20 20
 226+ AC98 20 20 20 20
 226+ AC9C 20 20 20 20
 227+ ACA0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 227+ ACA4 20 20 20 20
 227+ ACA8 20 20 20 20
 227+ ACAC 20 20 20 20
 228+ ACB0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 228+ ACB4 20 20 20 20
 228+ ACB8 20 20 20 20
 228+ ACBC 20 20 20 20
 229+ ACC0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 229+ ACC4 20 20 20 20
 229+ ACC8 20 20 20 20
 229+ ACCC 20 20 20 20
 230+ ACD0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 230+ ACD4 20 20 20 20
 230+ ACD8 20 20 20 20
 230+ ACDC 20 20 20 20
 231+ ACE0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 231+ ACE4 20 20 20 20
 231+ ACE8 20 20 20 20
 231+ ACEC 20 20 20 20
 232+ ACF0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 232+ ACF4 20 20 20 20
 232+ ACF8 20 20 20 20
 232+ ACFC 20 20 20 20
 233+ AD00
 234+ AD00              map_10:
 235+ AD00 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 235+ AD04 20 20 20 20
 235+ AD08 20 20 20 20
 235+ AD0C 20 20 20 20
 236+ AD10 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 236+ AD14 20 20 20 20
 236+ AD18 20 20 20 20
 236+ AD1C 20 20 20 20
 237+ AD20 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 237+ AD24 20 20 20 20
 237+ AD28 20 20 20 20
 237+ AD2C 20 20 20 20
 238+ AD30 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 238+ AD34 20 20 20 20
 238+ AD38 20 20 20 20
 238+ AD3C 20 20 20 20
 239+ AD40 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
 239+ AD44 20 20 20 20
 239+ AD48 20 20 20 20
 239+ AD4C 20 20 20 20
 240+ AD50 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 240+ AD54 20 20 20 20
 240+ AD58 20 20 20 20
 240+ AD5C 20 20 20 20
 241+ AD60 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 241+ AD64 20 20 20 20
 241+ AD68 20 20 20 20
 241+ AD6C 20 20 20 20
 242+ AD70 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 242+ AD74 20 20 20 20
 242+ AD78 20 20 20 20
 242+ AD7C 20 20 20 20
 243+ AD80 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 243+ AD84 20 20 20 20
 243+ AD88 20 20 20 20
 243+ AD8C 20 20 20 20
 244+ AD90 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 244+ AD94 20 20 20 20
 244+ AD98 20 20 20 20
 244+ AD9C 20 20 20 20
 245+ ADA0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 245+ ADA4 20 20 20 20
 245+ ADA8 20 20 20 20
 245+ ADAC 20 20 20 20
 246+ ADB0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 246+ ADB4 20 20 20 20
 246+ ADB8 20 20 20 20
 246+ ADBC 20 20 20 20
 247+ ADC0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 247+ ADC4 20 20 20 20
 247+ ADC8 20 20 20 20
 247+ ADCC 20 20 20 20
 248+ ADD0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 248+ ADD4 20 20 20 20
 248+ ADD8 20 20 20 20
 248+ ADDC 20 20 20 20
 249+ ADE0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 249+ ADE4 20 20 20 20
 249+ ADE8 20 20 20 20
 249+ ADEC 20 20 20 20
 250+ ADF0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 250+ ADF4 20 20 20 20
 250+ ADF8 20 20 20 20
 250+ ADFC 20 20 20 20
 251+ AE00
 252+ AE00              map_11:
 253+ AE00 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 253+ AE04 20 20 20 20
 253+ AE08 20 20 20 20
 253+ AE0C 20 20 20 20
 254+ AE10 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 254+ AE14 20 20 20 20
 254+ AE18 20 20 20 20
 254+ AE1C 20 20 20 20
 255+ AE20 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 255+ AE24 20 20 20 20
 255+ AE28 20 20 20 20
 255+ AE2C 20 20 20 20
 256+ AE30 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 256+ AE34 20 20 20 20
 256+ AE38 20 20 20 20
 256+ AE3C 20 20 20 20
 257+ AE40 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
 257+ AE44 20 20 20 20
 257+ AE48 20 20 20 20
 257+ AE4C 20 20 20 20
 258+ AE50 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 258+ AE54 20 20 20 20
 258+ AE58 20 20 20 20
 258+ AE5C 20 20 20 20
 259+ AE60 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 259+ AE64 20 20 20 20
 259+ AE68 20 20 20 20
 259+ AE6C 20 20 20 20
 260+ AE70 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 260+ AE74 20 20 20 20
 260+ AE78 20 20 20 20
 260+ AE7C 20 20 20 20
 261+ AE80 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 261+ AE84 20 20 20 20
 261+ AE88 20 20 20 20
 261+ AE8C 20 20 20 20
 262+ AE90 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 262+ AE94 20 20 20 20
 262+ AE98 20 20 20 20
 262+ AE9C 20 20 20 20
 263+ AEA0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 263+ AEA4 20 20 20 20
 263+ AEA8 20 20 20 20
 263+ AEAC 20 20 20 20
 264+ AEB0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 264+ AEB4 20 20 20 20
 264+ AEB8 20 20 20 20
 264+ AEBC 20 20 20 20
 265+ AEC0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 265+ AEC4 20 20 20 20
 265+ AEC8 20 20 20 20
 265+ AECC 20 20 20 20
 266+ AED0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 266+ AED4 20 20 20 20
 266+ AED8 20 20 20 20
 266+ AEDC 20 20 20 20
 267+ AEE0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 267+ AEE4 20 20 20 20
 267+ AEE8 20 20 20 20
 267+ AEEC 20 20 20 20
 268+ AEF0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 268+ AEF4 20 20 20 20
 268+ AEF8 20 20 20 20
 268+ AEFC 20 20 20 20
 269+ AF00
 270+ AF00              map_12:
 271+ AF00 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 271+ AF04 20 20 20 20
 271+ AF08 20 20 20 20
 271+ AF0C 20 20 20 20
 272+ AF10 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 272+ AF14 20 20 20 20
 272+ AF18 20 20 20 20
 272+ AF1C 20 20 20 20
 273+ AF20 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 273+ AF24 20 20 20 20
 273+ AF28 20 20 20 20
 273+ AF2C 20 20 20 20
 274+ AF30 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 274+ AF34 20 20 20 20
 274+ AF38 20 20 20 20
 274+ AF3C 20 20 20 20
 275+ AF40 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
 275+ AF44 20 20 20 20
 275+ AF48 20 20 20 20
 275+ AF4C 20 20 20 20
 276+ AF50 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 276+ AF54 20 20 20 20
 276+ AF58 20 20 20 20
 276+ AF5C 20 20 20 20
 277+ AF60 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 277+ AF64 20 20 20 20
 277+ AF68 20 20 20 20
 277+ AF6C 20 20 20 20
 278+ AF70 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 278+ AF74 20 20 20 20
 278+ AF78 20 20 20 20
 278+ AF7C 20 20 20 20
 279+ AF80 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 279+ AF84 20 20 20 20
 279+ AF88 20 20 20 20
 279+ AF8C 20 20 20 20
 280+ AF90 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 280+ AF94 20 20 20 20
 280+ AF98 20 20 20 20
 280+ AF9C 20 20 20 20
 281+ AFA0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 281+ AFA4 20 20 20 20
 281+ AFA8 20 20 20 20
 281+ AFAC 20 20 20 20
 282+ AFB0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 282+ AFB4 20 20 20 20
 282+ AFB8 20 20 20 20
 282+ AFBC 20 20 20 20
 283+ AFC0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 283+ AFC4 20 20 20 20
 283+ AFC8 20 20 20 20
 283+ AFCC 20 20 20 20
 284+ AFD0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 284+ AFD4 20 20 20 20
 284+ AFD8 20 20 20 20
 284+ AFDC 20 20 20 20
 285+ AFE0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 285+ AFE4 20 20 20 20
 285+ AFE8 20 20 20 20
 285+ AFEC 20 20 20 20
 286+ AFF0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 286+ AFF4 20 20 20 20
 286+ AFF8 20 20 20 20
 286+ AFFC 20 20 20 20
 287+ B000
 288+ B000              map_13:
 289+ B000 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 289+ B004 20 20 20 20
 289+ B008 20 20 20 20
 289+ B00C 20 20 20 20
 290+ B010 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 290+ B014 20 20 20 20
 290+ B018 20 20 20 20
 290+ B01C 20 20 20 20
 291+ B020 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 291+ B024 20 20 20 20
 291+ B028 20 20 20 20
 291+ B02C 20 20 20 20
 292+ B030 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 292+ B034 20 20 20 20
 292+ B038 20 20 20 20
 292+ B03C 20 20 20 20
 293+ B040 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
 293+ B044 20 20 20 20
 293+ B048 20 20 20 20
 293+ B04C 20 20 20 20
 294+ B050 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 294+ B054 20 20 20 20
 294+ B058 20 20 20 20
 294+ B05C 20 20 20 20
 295+ B060 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 295+ B064 20 20 20 20
 295+ B068 20 20 20 20
 295+ B06C 20 20 20 20
 296+ B070 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 296+ B074 20 20 20 20
 296+ B078 20 20 20 20
 296+ B07C 20 20 20 20
 297+ B080 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 297+ B084 20 20 20 20
 297+ B088 20 20 20 20
 297+ B08C 20 20 20 20
 298+ B090 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 298+ B094 20 20 20 20
 298+ B098 20 20 20 20
 298+ B09C 20 20 20 20
 299+ B0A0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 299+ B0A4 20 20 20 20
 299+ B0A8 20 20 20 20
 299+ B0AC 20 20 20 20
 300+ B0B0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 300+ B0B4 20 20 20 20
 300+ B0B8 20 20 20 20
 300+ B0BC 20 20 20 20
 301+ B0C0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 301+ B0C4 20 20 20 20
 301+ B0C8 20 20 20 20
 301+ B0CC 20 20 20 20
 302+ B0D0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 302+ B0D4 20 20 20 20
 302+ B0D8 20 20 20 20
 302+ B0DC 20 20 20 20
 303+ B0E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 303+ B0E4 20 20 20 20
 303+ B0E8 20 20 20 20
 303+ B0EC 20 20 20 20
 304+ B0F0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 304+ B0F4 20 20 20 20
 304+ B0F8 20 20 20 20
 304+ B0FC 20 20 20 20
 305+ B100
 306+ B100              map_14:
 307+ B100 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 307+ B104 20 20 20 20
 307+ B108 20 20 20 20
 307+ B10C 20 20 20 20
 308+ B110 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 308+ B114 20 20 20 20
 308+ B118 20 20 20 20
 308+ B11C 20 20 20 20
 309+ B120 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 309+ B124 20 20 20 20
 309+ B128 20 20 20 20
 309+ B12C 20 20 20 20
 310+ B130 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 310+ B134 20 20 20 20
 310+ B138 20 20 20 20
 310+ B13C 20 20 20 20
 311+ B140 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
 311+ B144 20 20 20 20
 311+ B148 20 20 20 20
 311+ B14C 20 20 20 20
 312+ B150 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 312+ B154 20 20 20 20
 312+ B158 20 20 20 20
 312+ B15C 20 20 20 20
 313+ B160 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 313+ B164 20 20 20 20
 313+ B168 20 20 20 20
 313+ B16C 20 20 20 20
 314+ B170 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 314+ B174 20 20 20 20
 314+ B178 20 20 20 20
 314+ B17C 20 20 20 20
 315+ B180 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 315+ B184 20 20 20 20
 315+ B188 20 20 20 20
 315+ B18C 20 20 20 20
 316+ B190 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 316+ B194 20 20 20 20
 316+ B198 20 20 20 20
 316+ B19C 20 20 20 20
 317+ B1A0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 317+ B1A4 20 20 20 20
 317+ B1A8 20 20 20 20
 317+ B1AC 20 20 20 20
 318+ B1B0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 318+ B1B4 20 20 20 20
 318+ B1B8 20 20 20 20
 318+ B1BC 20 20 20 20
 319+ B1C0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 319+ B1C4 20 20 20 20
 319+ B1C8 20 20 20 20
 319+ B1CC 20 20 20 20
 320+ B1D0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 320+ B1D4 20 20 20 20
 320+ B1D8 20 20 20 20
 320+ B1DC 20 20 20 20
 321+ B1E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 321+ B1E4 20 20 20 20
 321+ B1E8 20 20 20 20
 321+ B1EC 20 20 20 20
 322+ B1F0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 322+ B1F4 20 20 20 20
 322+ B1F8 20 20 20 20
 322+ B1FC 20 20 20 20
 323+ B200
 324+ B200              map_15:
 325+ B200 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;1
 325+ B204 20 20 20 20
 325+ B208 20 20 20 20
 325+ B20C 20 20 20 20
 326+ B210 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;2
 326+ B214 20 20 20 20
 326+ B218 20 20 20 20
 326+ B21C 20 20 20 20
 327+ B220 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;3
 327+ B224 20 20 20 20
 327+ B228 20 20 20 20
 327+ B22C 20 20 20 20
 328+ B230 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;4
 328+ B234 20 20 20 20
 328+ B238 20 20 20 20
 328+ B23C 20 20 20 20
 329+ B240 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;5
 329+ B244 20 20 20 20
 329+ B248 20 20 20 20
 329+ B24C 20 20 20 20
 330+ B250 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;6
 330+ B254 20 20 20 20
 330+ B258 20 20 20 20
 330+ B25C 20 20 20 20
 331+ B260 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;7
 331+ B264 20 20 20 20
 331+ B268 20 20 20 20
 331+ B26C 20 20 20 20
 332+ B270 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;8
 332+ B274 20 20 20 20
 332+ B278 20 20 20 20
 332+ B27C 20 20 20 20
 333+ B280 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;9
 333+ B284 20 20 20 20
 333+ B288 20 20 20 20
 333+ B28C 20 20 20 20
 334+ B290 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;10
 334+ B294 20 20 20 20
 334+ B298 20 20 20 20
 334+ B29C 20 20 20 20
 335+ B2A0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;11
 335+ B2A4 20 20 20 20
 335+ B2A8 20 20 20 20
 335+ B2AC 20 20 20 20
 336+ B2B0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;12
 336+ B2B4 20 20 20 20
 336+ B2B8 20 20 20 20
 336+ B2BC 20 20 20 20
 337+ B2C0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;13
 337+ B2C4 20 20 20 20
 337+ B2C8 20 20 20 20
 337+ B2CC 20 20 20 20
 338+ B2D0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;14
 338+ B2D4 20 20 20 20
 338+ B2D8 20 20 20 20
 338+ B2DC 20 20 20 20
 339+ B2E0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;15
 339+ B2E4 20 20 20 20
 339+ B2E8 20 20 20 20
 339+ B2EC 20 20 20 20
 340+ B2F0 81 20 20 20   db _mh, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp, _mp ;16
 340+ B2F4 20 20 20 20
 340+ B2F8 20 20 20 20
 340+ B2FC 20 20 20 20
 341+ B300
 342+ B300              ;map start positions
 343+ B300
 344+ B300              ;map0
 345+ B300 00 00                dw  00
 346+ B302              ;map1
 347+ B302 00 00                dw  00
 348+ B304              ;map2
 349+ B304 00 00                dw  00
 350+ B306              ;map3
 351+ B306 00 00                dw  00
 352+ B308              ;map4
 353+ B308 00 00                dw  00
 354+ B30A              ;map5
 355+ B30A 00 00                dw  00
 356+ B30C              ;map6
 357+ B30C 00 00                dw  00
 358+ B30E              ;map7
 359+ B30E 00 00                dw  00
 360+ B310              ;map8
 361+ B310 00 00                dw  00
 362+ B312              ;map9
 363+ B312 00 00                dw  00
 364+ B314              ;map10
 365+ B314 00 00                dw  00
 366+ B316              ;map11
 367+ B316 00 00                dw  00
 368+ B318              ;map12
 369+ B318 00 00                dw  00
 370+ B31A              ;map13
 371+ B31A 00 00                dw  00
 372+ B31C              ;map14
 373+ B31C 00 00                dw  00
 374+ B31E              ;map15
 375+ B31E 00 00                dw  00
 376+ B320
 377+ B320 00                   nop
 378+ B321 00                   nop
 379+ B322 00                   nop
 380+ B323
 381+ B323              ;#################################################################
 382+ B323              ;Character screen reservation
 383+ B323                      org $c000
 384+ C000                     ; org $E600
 385+ C000
 386+ C000 00 00 00...  char_screen:   block 768    ;view screen built here from characters
 387+ C300
 388+ C300 00 00 00...  attr_screen:   block 768    ;colours held here for door animation
 389+ C600
 390+ C600              ;################################################
 391+ C600              ;##################################################################################
 392+ C600              ;door exit animation
 393+ C600              ;
 394+ C600              ;   if A==10: NR_69=0 (display Bank5)
 395+ C600              exit_anim:
 396+ C600
 397+ C600              ;first, make the REAL spectrum screen shows our exit door as we need to write to the screen LIVE
 398+ C600
 399+ C600 ED 91 52 0A              nextreg $52,10      ;select the real spectrum screen
 400+ C604                          ;now redraw our current screen
 401+ C604 CD 4F C6                 call redraw_screen
 402+ C607 CD 3D C7                 call copy_colours
 403+ C60A CD 83 85                 call draw_exit_door_open
 404+ C60D CD BE 9A                 call draw_screen_right
 405+ C610 21 ED C6                 ld hl,charset_1-256
 406+ C613 22 61 8C                 ld (base),hl
 407+ C616 CD 0C 8D                 call compass          ; draw compass
 408+ C619
 409+ C619 ED 91 69 00              nextreg $69,0       ;turn off screen buffering so we write directly to the screen
 410+ C61D 3E 0A                    ld a,10
 411+ C61F 32 D2 81                 ld (ULABank),a    ;tell the flip ula routine which page is being viewed
 412+ C622
 413+ C622 ED 91 07 00              nextreg 7,0
 414+ C626 CD 6B C6                 call do_exit_anim
 415+ C629 CD 73 81                 call pause
 416+ C62C
 417+ C62C              ;need to set the player start position now.
 418+ C62C
 419+ C62C 3A 22 FA                 ld a,(cur_map)
 420+ C62F 3D                       dec a               ;point to our next map
 421+ C630 32 30 FA                 ld (game_exit),a
 422+ C633 C8                       ret z
 423+ C634 CD CE C7                 call set_map      ;set our map
 424+ C637
 425+ C637
 426+ C637              ;need to exit to BASIC if we exit map_0
 427+ C637                       ;   sub 255              ;a will = 255 if exit map 0 - the end game
 428+ C637                       ;   ret z               ;exit the routine
 429+ C637
 430+ C637 2E 01                    ld l,01              ;top left of maze
 431+ C639 22 00 FA                 ld (player_pos),hl
 432+ C63C
 433+ C63C
 434+ C63C CD 4F C6                 call redraw_screen
 435+ C63F CD 08 C7                 call new_maze_anim
 436+ C642 CD 73 81                 call pause
 437+ C645 CD 73 81                 call pause
 438+ C648 CD 73 81                 call pause
 439+ C64B CD 73 81                 call pause
 440+ C64E
 441+ C64E C9                       ret                 ;return to normal game
 442+ C64F              ;------------------------------------------------------------------------------------------
 443+ C64F              redraw_screen:
 444+ C64F CD 88 81                   call clear_char_screen    ;clear screen @c000
 445+ C652 CD BE 8D                   call get_distance         ; get distance we can see
 446+ C655 CD 92 8F                   call draw_left_side       ; start drawing the left side of the
 447+ C658 CD BE 8D                   call get_distance         ; get distance we can see
 448+ C65B CD AB 9B                   call draw_right_side      ; start drawing the right side of the maze
 449+ C65E CD 35 97                   call draw_front_view      ; draw wall in front of player
 450+ C661 CD C1 97                   call draw_side_walls
 451+ C664                            ;my print used to print screen @c000 to 16384 inc udg's
 452+ C664 CD B9 8C                   call my_print             ;copy to screen from c000
 453+ C667 CD 43 99                   call draw_colours         ;colourise the display
 454+ C66A C9                         ret
 455+ C66B              ;end drawing the new screen
 456+ C66B
 457+ C66B
 458+ C66B              ;----------------------------------------------------------------------------------
 459+ C66B              ;draw a load of black boxes to hide the current screen. We then call part of this routine again to draw in the correct
 460+ C66B              ;colours to the new level - supposed to look cool lol!
 461+ C66B
 462+ C66B              do_exit_anim:
 463+ C66B ED 91 07 00             nextreg 7,0
 464+ C66F
 465+ C66F              ;Original base code by David Saphier from Facebook May 2018
 466+ C66F
 467+ C66F 97                       sub a
 468+ C670 32 03 C7                 ld (in_out),a       ;indicate we are drawing out from the middle
 469+ C673
 470+ C673
 471+ C673              ;reset the boxes to default
 472+ C673              ; this must be the same as the size of the square to draw
 473+ C673 3E 02                    ld a,2    ; reduce the size of the square to draw
 474+ C675 32 04 C7                 ld (size1),a
 475+ C678
 476+ C678              ; this must equal the number of squares to draw
 477+ C678 3E 02                    ld a,2  ;number of boxes to draw
 478+ C67A 32 05 C7                 ld (num2draw1),a
 479+ C67D
 480+ C67D 21 6C 59                 ld hl,256+11+22528+65+32 ;start point - middle of the screen nearly!
 481+ C680
 482+ C680 3E 5A                    ld a,90
 483+ C682 32 3C C7                 ld (sound_byte),a
 484+ C685
 485+ C685              d_box1:	    ;play some sound
 486+ C685 D5                       push de
 487+ C686 3A 3C C7                 ld a,(sound_byte)
 488+ C689 D6 06                    sub 6
 489+ C68B 5F                       ld e,a
 490+ C68C 32 3C C7                 ld (sound_byte),a
 491+ C68F CD 6A C7                 call walk_sound
 492+ C692 D1                       pop de
 493+ C693
 494+ C693 3E 00                    ld a,0              ;set colour
 495+ C695 CD B1 C6                 call box1           ;draw the box
 496+ C698 11 E0 FF                	ld de,65504         ; 65504  (-32)
 497+ C69B
 498+ C69B 19                       add hl,de           ;next box to draw
 499+ C69C 3A 04 C7                 ld a,(size1)     ; increase the size of the square to draw
 500+ C69F 3C                       inc a
 501+ C6A0 3C                       inc a
 502+ C6A1 32 04 C7                 ld (size1),a
 503+ C6A4
 504+ C6A4
 505+ C6A4 3A 05 C7                 ld a,(num2draw1)  ;number of boxes to draw
 506+ C6A7 3C                       inc a
 507+ C6A8 32 05 C7                 ld (num2draw1),a
 508+ C6AB FE 0E                    cp 14
 509+ C6AD C2 85 C6                 jp nz, d_box1     ; exit when we get to 2 as routine fails after that.
 510+ C6B0
 511+ C6B0 C9                       ret
 512+ C6B1
 513+ C6B1              ;davids code here amended by me....
 514+ C6B1              box1:
 515+ C6B1 3A 04 C7                 ld a,(size1)
 516+ C6B4 47                       ld b,a
 517+ C6B5
 518+ C6B5              ml11:
 519+ C6B5 CD F6 C6     	call docol1
 520+ C6B8 77           	ld (hl),a
 521+ C6B9 23           	inc hl
 522+ C6BA 10 F9        	djnz ml11
 523+ C6BC F5               push af
 524+ C6BD 3A 04 C7         ld a,(size1)
 525+ C6C0 3D               dec a
 526+ C6C1 47              	ld b,a
 527+ C6C2 F1               pop af
 528+ C6C3 2B           	dec hl
 529+ C6C4
 530+ C6C4              ml21:
 531+ C6C4 CD F6 C6     	call docol1
 532+ C6C7 11 20 00     	ld de,32     ;was 32
 533+ C6CA 19           	add hl,de
 534+ C6CB 77           	ld (hl),a
 535+ C6CC 10 F6        	djnz ml21
 536+ C6CE F5               push af
 537+ C6CF 3A 04 C7         ld a,(size1)
 538+ C6D2 47              	ld b,a
 539+ C6D3 F1               pop af
 540+ C6D4 2D           	dec l
 541+ C6D5
 542+ C6D5              ml31:
 543+ C6D5 CD F6 C6     	call docol1
 544+ C6D8 77            	ld (hl),a
 545+ C6D9 2B            	dec hl
 546+ C6DA 10 F9         	djnz ml31
 547+ C6DC F5               push af
 548+ C6DD 3A 04 C7         ld a,(size1)
 549+ C6E0 3D               dec a
 550+ C6E1 47              	ld b,a
 551+ C6E2 F1               pop af
 552+ C6E3 2C            	inc l
 553+ C6E4
 554+ C6E4              ml41:
 555+ C6E4 CD F6 C6     	call docol1
 556+ C6E7 11 E0 FF     	ld de,65504; was 65504  (-32)
 557+ C6EA 19           	add hl,de
 558+ C6EB 77           	ld (hl),a
 559+ C6EC 10 F6        	djnz ml41
 560+ C6EE F5               push af
 561+ C6EF 3A 04 C7         ld a,(size1)
 562+ C6F2 3D               dec a
 563+ C6F3 47              	ld b,a
 564+ C6F4 F1               pop af
 565+ C6F5 C9           	ret
 566+ C6F6
 567+ C6F6              ;end of davids code...
 568+ C6F6
 569+ C6F6              ;set square colours
 570+ C6F6              docol1:                     ;this routine draws black colours on existing level
 571+ C6F6                  ;    ld a,(in_out)
 572+ C6F6                  ;    dec a               ;check if a=0
 573+ C6F6                  ;    jr z,do_out         ;draw the attributes screen proper if a <> 0
 574+ C6F6 3E F0                ld a,240            ;black screen
 575+ C6F8 C9                   ret
 576+ C6F9              do_out                      ;this routine draws the colours on new level - but I cant get it working!
 577+ C6F9 E5                   push hl
 578+ C6FA 11 00 6B             ld de,$6b00         ;$5800 + $6b00 = $c300. point to our alternate attribute screen
 579+ C6FD                     ; ld de,(fadein)      ;fadein holds our memory pointer to attribut screen-22528
 580+ C6FD 19                   add hl,de
 581+ C6FE 7E                   ld a,(hl)           ;get the colour to print
 582+ C6FF                     ; inc de
 583+ C6FF                     ; ld (fadein),de
 584+ C6FF                     ; ld a,6
 585+ C6FF E1                   pop hl
 586+ C700 C9                   ret
 587+ C701
 588+ C701
 589+ C701 00 00        fadein     dw 0   ;holds address of colours to fetch for screen colouring
 590+ C703 00           in_out:    db 0   ;1=draw inward, 0=draw outward
 591+ C704 02           size1:     db 2   ; size of square to draw ;double the number to draw
 592+ C705 02           num2draw1: db 2   ;number of squares to draw
 593+ C706 00           cur_screen db 0   ;hold the current screen in view for the exit screen
 594+ C707 00           cur_page   db 0   ;hold the current screen thats paged in view for the exit screen
 595+ C708
 596+ C708              ;###########################################################################
 597+ C708
 598+ C708              new_maze_anim:
 599+ C708 CD BE 9A                   call draw_screen_right
 600+ C70B ED 91 07 01                nextreg 7,1
 601+ C70F 3E 0A                      ld a,10
 602+ C711 32 3C C7                   ld (sound_byte),a
 603+ C714
 604+ C714              ;we have 24 vertical columns of 24 blocks - swipe left to right
 605+ C714 06 18                      ld b,24
 606+ C716 21 00 C3                   ld hl,attr_screen     ;address of colours screen to copy
 607+ C719 11 00 58                   ld de,de_dest           ;attributes on main screen
 608+ C71C C5           again_1:      push bc
 609+ C71D 01 18 00                   ld bc,24              ;number of cells to copy
 610+ C720
 611+ C720              Loop_col_1:
 612+ C720 ED B0                      ldir
 613+ C722                            ;do the walking sound
 614+ C722 D5                         push de
 615+ C723 3A 3C C7                   ld a,(sound_byte)
 616+ C726 C6 06                      add a,6
 617+ C728 5F                         ld e,a
 618+ C729 32 3C C7                   ld (sound_byte),a
 619+ C72C CD 6A C7                   call walk_sound
 620+ C72F D1                         pop de
 621+ C730 C1                         pop bc
 622+ C731 ED 35 08 00                add de,8
 623+ C735 ED 34 08 00                add hl,8
 624+ C739 10 E1                      djnz again_1
 625+ C73B C9                         ret
 626+ C73C
 627+ C73C
 628+ C73C 0A           sound_byte    db 10
 629+ C73D              de_dest       equ 22528
 630+ C73D
 631+ C73D
 632+ C73D              ;*********************************************************************
 633+ C73D              ; Making LDIR 21% faster
 634+ C73D              ;taken from MSX Assembly page - http://map.grauw.nl/articles/fast_loops.php
 635+ C73D
 636+ C73D
 637+ C73D              ;LDI Performs a "LD (DE),(HL)", then increments DE and HL, and decrements BC.
 638+ C73D
 639+ C73D              ;Now, on with the lesson. Aside from OTIR you can also unroll other things. INIR, LDIR and LDDR will also greatly benefit from this method, and sometimes it is also ;beneficial to unroll normal loops which use DJNZ, JR or JP.
 640+ C73D
 641+ C73D              ;In the case of LDIR however, the number of loops is often too large to simply use an LDI that number of times. That would take up too much space. So what we can do ;instead is to unroll only part of the loop. Say, we need to LDIR something 256 (100H) times. Instead of LDIR we could write:
 642+ C73D
 643+ C73D              ;we need to move 768 bytes = 48 x 16
 644+ C73D              copy_colours:
 645+ C73D
 646+ C73D 01 00 03                   ld bc,768             ;number of cells to copy
 647+ C740 21 00 C3                   ld hl,attr_screen     ;address of colours screen to copy
 648+ C743 11 00 58                   ld de,22528           ;attributes on main screen
 649+ C746              Loop_col:
 650+ C746 ED A0            ldi  ; 16x LDI
 651+ C748 ED A0            ldi
 652+ C74A ED A0            ldi
 653+ C74C ED A0            ldi
 654+ C74E ED A0            ldi
 655+ C750 ED A0            ldi
 656+ C752 ED A0            ldi
 657+ C754 ED A0            ldi
 658+ C756 ED A0            ldi
 659+ C758 ED A0            ldi
 660+ C75A ED A0            ldi
 661+ C75C ED A0            ldi
 662+ C75E ED A0            ldi
 663+ C760 ED A0            ldi
 664+ C762 ED A0            ldi
 665+ C764 ED A0            ldi
 666+ C766 EA 46 C7         jp pe,Loop_col  ; Loop until bc = zero
 667+ C769
 668+ C769 C9                         ret
 669+ C76A
 670+ C76A              ;#################################################################
 671+ C76A              ;walking sound
 672+ C76A
 673+ C76A              walk_sound:
 674+ C76A
 675+ C76A              zap:
 676+ C76A D5                   push de
 677+ C76B C5                   push bc
 678+ C76C 16 10        	    ld d,16		;speaker = bit 4
 679+ C76E              ;e is set when the routine is called so we make different sounds for switch and footwalk
 680+ C76E              ;	    ld e,10		;distance between speaker move counter
 681+ C76E 06 FA        	    ld b,250 	;overall length counter
 682+ C770 7A           blp0:	ld a,d
 683+ C771 E6 F8        	    and 248		;keep border colour the same
 684+ C773 D3 FE        	    out (254),a	;move the speaker in or out depending on bit 4
 685+ C775 2F           	    cpl		    ;toggle, so we alternative between speaker in and out to make sound
 686+ C776 57           	    ld d,a		;store it
 687+ C777 4B           	    ld c,e		;now a pause
 688+ C778 0D           blp1:	dec c
 689+ C779 20 FD        	    jr nz,blp1
 690+ C77B              	   ; dec e		;change to inc e to reverse the sound, or remove to make it a note
 691+ C77B 10 F3        	    djnz blp0	;repeat B=255 times
 692+ C77D C1                   pop bc
 693+ C77E D1                   pop de
 694+ C77F C9           	    ret
 695+ C780              	;
 696+ C780
 697+ C780
# file closed: src/7-rd3dmazeV6.asm
 472  C780
 473  C780              ;moved 2 to here as it was causing a memory overwrite.
 474  C780                ;  INCLUDE "2-rd3dmazeV6.asm" ; draw maze on screen, player direction,
 475  C780              ;#####################################################
 476  C780
 477  C780
 478  C780              ;###################################################
 479  C780              ; Get Keystroke Routine from Your Sinclair Magazine
 480  C780              ; From Your Sinclair #22 (Oct.1987)
 481  C780              ;###################################################
 482  C780
 483  C780
 484  C780              get_keys:
 485  C780               ;
 486  C780               ;      YS_KEYS
 487  C780               ;
 488  C780               ;A,HL,DE corrupt
 489  C780               ;B=0, key in C
 490  C780
 491  C780
 492  C780               ;Keyboard Scanning
 493  C780               ;by Pete Cooke
 494  C780               ;from Your Sinclair #22 (Oct.1987)
 495  C780
 496  C780               ;prog for Your Sinclair
 497  C780               ;
 498  C780               ;file for Hisoft GENS
 499  C780               ;assembler but should
 500  C780               ;be suitable for most
 501  C780               ;assemblers on the market
 502  C780               ;
 503  C780               ;Reads the keyboard
 504  C780               ;Returns with C
 505  C780               ;holding L/R/U/D/F
 506  C780               ;
 507  C780               ;bit 4,C left
 508  C780               ;bit 3,C right
 509  C780               ;bit 2,C up
 510  C780               ;bit 1,C down
 511  C780               ;bit 0,C fire
 512  C780               ;
 513  C780               ;bit set to 1 if pressed
 514  C780               ;
 515  C780               ;keys are chosen by
 516  C780               ;values in KEYTAB
 517  C780               ;
 518  C780 21 C7 C7     readke  ld   hl,keytab
 519  C783 01 00 06             ld   bc,$0600
 520  C786               ;
 521  C786               ;5 keys to read
 522  C786               ;
 523  C786 7E           read_1  ld   a,(hl)
 524  C787 1F                   rra
 525  C788 1F                   rra
 526  C789 E6 1E                and  $1e
 527  C78B 5F                   ld   e,a
 528  C78C 16 00                ld   d,0
 529  C78E               ;
 530  C78E               ;2*the row number
 531  C78E               ;
 532  C78E 7E                   ld   a,(hl)
 533  C78F 23                   inc  hl
 534  C790 E5                   push hl
 535  C791               ;
 536  C791               ;save place in KEYTAB
 537  C791               ;
 538  C791 21 B5 C7             ld   hl,keyadd
 539  C794 19                   add  hl,de
 540  C795 57                   ld   d,a
 541  C796               ;
 542  C796               ;index port addresses
 543  C796               ;
 544  C796 C5                   push bc
 545  C797 4E                   ld   c,(hl)
 546  C798 23                   inc  hl
 547  C799 46                   ld   b,(hl)
 548  C79A ED 78                in   a,(c)
 549  C79C 04                   inc  b
 550  C79D 05                   dec  b
 551  C79E 28 01                jr   z,read_2
 552  C7A0 2F                   cpl
 553  C7A1 5F           read_2  ld   e,a
 554  C7A2               ;
 555  C7A2               ;read the port
 556  C7A2               ;and flip bits if not
 557  C7A2               ;Kempston
 558  C7A2               ;
 559  C7A2 C1                   pop  bc
 560  C7A3 E1                   pop  hl
 561  C7A4               ;
 562  C7A4               ;and get back BC+HL
 563  C7A4               ;
 564  C7A4 7A                   ld   a,d
 565  C7A5 E6 07                and  $07
 566  C7A7 28 05                jr   z,read_4
 567  C7A9               ;
 568  C7A9 CB 1B        read_3  rr   e
 569  C7AB 3D                   dec  a
 570  C7AC 20 FB                jr   nz,read_3
 571  C7AE               ;
 572  C7AE               ;rotate L so bit needed
 573  C7AE               ;is in bit 0
 574  C7AE               ;
 575  C7AE CB 1B        read_4  rr   e
 576  C7B0 CB 11                rl   c
 577  C7B2               ;
 578  C7B2               ;rotate the bit into C
 579  C7B2               ;
 580  C7B2 10 D2                djnz read_1
 581  C7B4 C9                   ret
 582  C7B5               ;
 583  C7B5               ;exit B=0
 584  C7B5               ;     C=keys
 585  C7B5               ;
 586  C7B5               ;A,HL,DE corrupt
 587  C7B5               ;
 588  C7B5               ;
 589  C7B5               ;port addresses of
 590  C7B5               ;the keyboard rows
 591  C7B5               ;
 592  C7B5 FE F7 FE FB  keyadd dw 63486,64510,65022,65278,61438,57342,49150,32766
 592  C7B9 FE FD FE FE
 592  C7BD FE EF FE DF
 592  C7C1 FE BF FE 7F
 593  C7C5 1F 00                dw 31 ;*Kempston*
 594  C7C7               ;
 595  C7C7               ;
 596  C7C7               ;KEYTAB holds the position
 597  C7C7               ;of each key as
 598  C7C7               ;1/2 row number*8 plus
 599  C7C7               ;distance from the edge
 600  C7C7               ;eg. P = 5*8+0
 601  C7C7               ;    O = 5*8+1
 602  C7C7               ;    Q = 1*8+0
 603  C7C7               ;    4 = 0*8+3
 604  C7C7               ;
 605  C7C7 04 24 23 22  keytab db 0*8+4, 4*8+4, 4*8+3, 4*8+2, 4*8+0, 3*8+2
 605  C7CB 20 1A
 606  C7CD               ;           5     6     7      8       0     X
 607  C7CD
 608  C7CD               ;old bit values before adding the x key
 609  C7CD               ;;bit values: 1 = 0 fire
 610  C7CD               ;             2 = 8 right
 611  C7CD               ;             4 = 7 up
 612  C7CD               ;             8 = 6 down
 613  C7CD               ;            16 = 5 left
 614  C7CD              ;new key table
 615  C7CD              ;;bit values:
 616  C7CD               ;             1 = x
 617  C7CD               ;             2 =  0 fire
 618  C7CD               ;             4 = 5 left
 619  C7CD               ;             8 =  7 up
 620  C7CD               ;             16 = 6 down
 621  C7CD               ;             32 =  8 right
 622  C7CD
 623  C7CD
 624  C7CD
 625  C7CD
 626  C7CD
 627  C7CD              ; keytab db 5*8+1,5*8+0,2*8+1,3*8+2,7*8+0
 628  C7CD               ;
 629  C7CD               ;set for O,P,S,X,space
 630  C7CD               ;
 631  C7CD               ;for a Kempston joystick
 632  C7CD               ;substitute
 633  C7CD               ;
 634  C7CD               ;       db 8*8+1,8*8+0,8*8+3,8*8+2,8*8+4
 635  C7CD               ;
 636  C7CD 00           end_k nop
 637  C7CE
 638  C7CE              ;##############################################
 639  C7CE              ;##############################################
 640  C7CE
 641  C7CE              ;set map - sets hl to start of map to draw
 642  C7CE              ;a holds the map number = 0 to 15
 643  C7CE
 644  C7CE              set_map:
 645  C7CE
 646  C7CE 21 00 A3             ld hl,map_0             ;start of map data 256 bytes each
 647  C7D1 32 22 FA             ld (cur_map),a          ;save our cur map
 648  C7D4 22 23 FA             ld (map_start),hl
 649  C7D7
 650  C7D7 3D                   dec a
 651  C7D8 3C                   inc a                   ;exit if its map 0
 652  C7D9
 653  C7D9 7C                   ld a,h
 654  C7DA 32 28 FA             ld (maze_highbyte),a
 655  C7DD C8                   ret z       ;if a is 0, just return for map_0
 656  C7DE
 657  C7DE 3A 22 FA             ld a,(cur_map)
 658  C7E1 24           loop3   inc h                   ; times by 256
 659  C7E2 3D                   dec a
 660  C7E3 20 FC                jr nz, loop3
 661  C7E5 22 23 FA             ld (map_start),hl
 662  C7E8 7C                   ld a, h
 663  C7E9 32 28 FA             ld (maze_highbyte),a
 664  C7EC C9                   ret
 665  C7ED
 666  C7ED
 667  C7ED
 668  C7ED
 669  C7ED              ;#################################################################
 670  C7ED              ;Character screen reservation
 671  C7ED               ;       org $c000
 672  C7ED              ;char_screen:   block 768    ;view screen built here from characters
 673  C7ED
 674  C7ED              ;attr_screen:   block 768    ;colours held here for door animation
 675  C7ED
 676  C7ED              ;################################################
 677  C7ED
 678  C7ED
 679  C7ED              ;##############################################
 680  C7ED              ; Alternate Character set
 681  C7ED              ;from https://www.jimblimey.com/blog/24-zx-spectrum-fonts/
 682  C7ED              ;##############################################
 683  C7ED              charset_1:
 684  C7ED 00 00 00 00    defb 0,0,0,0,0,0,0,0
 684  C7F1 00 00 00 00
 685  C7F5 10 38 38 38    defb 16,56,56,56,16,0,16,0
 685  C7F9 10 00 10 00
 686  C7FD 66 33 33 00    defb 102,51,51,0,0,0,0,0
 686  C801 00 00 00 00
 687  C805 66 66 FF 66    defb 102,102,255,102,102,255,102,102
 687  C809 66 FF 66 66
 688  C80D 14 7E D4 7E    defb 20,126,212,126,149,126,20,0
 688  C811 95 7E 14 00
 689  C815 60 94 68 10    defb 96,148,104,16,44,82,140,0
 689  C819 2C 52 8C 00
 690  C81D 30 48 30 48    defb 48,72,48,72,142,140,120,0
 690  C821 8E 8C 78 00
 691  C825 0C 0C 18 00    defb 12,12,24,0,0,0,0,0
 691  C829 00 00 00 00
 692  C82D 01 02 04 04    defb 1,2,4,4,4,4,2,1
 692  C831 04 04 02 01
 693  C835 80 40 20 20    defb 128,64,32,32,32,32,64,128
 693  C839 20 20 40 80
 694  C83D 00 54 38 FE    defb 0,84,56,254,56,84,0,0
 694  C841 38 54 00 00
 695  C845 00 18 18 7E    defb 0,24,24,126,24,24,0,0
 695  C849 18 18 00 00
 696  C84D 00 00 00 00    defb 0,0,0,0,0,0,48,96
 696  C851 00 00 30 60
 697  C855 00 00 00 7E    defb 0,0,0,126,0,0,0,0
 697  C859 00 00 00 00
 698  C85D 00 00 00 00    defb 0,0,0,0,0,0,48,0
 698  C861 00 00 30 00
 699  C865 01 02 04 08    defb 1,2,4,8,16,32,64,128
 699  C869 10 20 40 80
 700  C86D 7C 86 8A 92    defb 124,134,138,146,162,194,124,0
 700  C871 A2 C2 7C 00
 701  C875 10 30 70 10    defb 16,48,112,16,16,16,124,0
 701  C879 10 10 7C 00
 702  C87D 78 84 08 30    defb 120,132,8,48,64,128,252,0
 702  C881 40 80 FC 00
 703  C885 78 84 04 38    defb 120,132,4,56,4,132,120,0
 703  C889 04 84 78 00
 704  C88D 80 44 48 48    defb 128,68,72,72,252,8,8,0
 704  C891 FC 08 08 00
 705  C895 FE 80 80 7C    defb 254,128,128,124,2,130,124,0
 705  C899 02 82 7C 00
 706  C89D 7A 84 80 BC    defb 122,132,128,188,194,130,124,0
 706  C8A1 C2 82 7C 00
 707  C8A5 FE 84 08 10    defb 254,132,8,16,56,16,16,0
 707  C8A9 38 10 10 00
 708  C8AD 7C 82 7C 82    defb 124,130,124,130,130,130,124,0
 708  C8B1 82 82 7C 00
 709  C8B5 7C 82 86 7A    defb 124,130,134,122,2,130,124,0
 709  C8B9 02 82 7C 00
 710  C8BD 00 30 00 00    defb 0,48,0,0,0,48,0,0
 710  C8C1 00 30 00 00
 711  C8C5 00 30 00 00    defb 0,48,0,0,0,48,32,0
 711  C8C9 00 30 20 00
 712  C8CD 08 10 20 40    defb 8,16,32,64,32,16,8,0
 712  C8D1 20 10 08 00
 713  C8D5 00 00 7E 00    defb 0,0,126,0,126,0,0,0
 713  C8D9 7E 00 00 00
 714  C8DD 20 10 08 04    defb 32,16,8,4,8,16,32,0
 714  C8E1 08 10 20 00
 715  C8E5 7C 82 04 08    defb 124,130,4,8,16,0,16,0
 715  C8E9 10 00 10 00
 716  C8ED 7C 82 9A AA    defb 124,130,154,170,170,158,124,0
 716  C8F1 AA 9E 7C 00
 717  C8F5 F8 44 42 FE    defb 248,68,66,254,66,66,198,0
 717  C8F9 42 42 C6 00
 718  C8FD FC 42 42 FC    defb 252,66,66,252,66,66,252,0
 718  C901 42 42 FC 00
 719  C905 7A 84 80 80    defb 122,132,128,128,128,130,124,0
 719  C909 80 82 7C 00
 720  C90D FC 42 42 42    defb 252,66,66,66,66,66,252,0
 720  C911 42 42 FC 00
 721  C915 FE 42 40 70    defb 254,66,64,112,192,66,254,0
 721  C919 C0 42 FE 00
 722  C91D FE 42 40 70    defb 254,66,64,112,192,64,224,0
 722  C921 C0 40 E0 00
 723  C925 7A 84 80 80    defb 122,132,128,128,156,130,126,2
 723  C929 9C 82 7E 02
 724  C92D 82 44 44 5E    defb 130,68,68,94,244,68,130,0
 724  C931 F4 44 82 00
 725  C935 10 08 08 08    defb 16,8,8,8,8,8,4,0
 725  C939 08 08 04 00
 726  C93D 7E 08 04 04    defb 126,8,4,4,4,132,120,0
 726  C941 04 84 78 00
 727  C945 CC 44 48 F0    defb 204,68,72,240,72,68,198,0
 727  C949 48 44 C6 00
 728  C94D C0 40 40 40    defb 192,64,64,64,64,66,254,0
 728  C951 40 42 FE 00
 729  C955 C6 6A 5A 4A    defb 198,106,90,74,74,66,198,0
 729  C959 4A 42 C6 00
 730  C95D CC 64 54 54    defb 204,100,84,84,84,84,204,0
 730  C961 54 54 CC 00
 731  C965 78 84 84 84    defb 120,132,132,132,132,132,120,0
 731  C969 84 84 78 00
 732  C96D F8 44 44 F8    defb 248,68,68,248,64,64,224,0
 732  C971 40 40 E0 00
 733  C975 78 84 84 84    defb 120,132,132,132,132,140,125,2
 733  C979 84 8C 7D 02
 734  C97D FC 42 42 FC    defb 252,66,66,252,66,66,198,0
 734  C981 42 42 C6 00
 735  C985 74 88 80 78    defb 116,136,128,120,4,132,120,0
 735  C989 04 84 78 00
 736  C98D 7C 54 10 10    defb 124,84,16,16,16,16,48,0
 736  C991 10 10 30 00
 737  C995 C6 44 44 82    defb 198,68,68,130,130,130,124,0
 737  C999 82 82 7C 00
 738  C99D CC 44 44 44    defb 204,68,68,68,68,40,16,0
 738  C9A1 44 28 10 00
 739  C9A5 C6 42 42 4A    defb 198,66,66,74,90,106,204,0
 739  C9A9 5A 6A CC 00
 740  C9AD 82 44 28 10    defb 130,68,40,16,40,68,130,0
 740  C9B1 28 44 82 00
 741  C9B5 CC 44 44 38    defb 204,68,68,56,16,16,48,0
 741  C9B9 10 10 30 00
 742  C9BD FE 84 08 10    defb 254,132,8,16,32,66,254,0
 742  C9C1 20 42 FE 00
 743  C9C5 1C 10 10 10    defb 28,16,16,16,16,16,28,0
 743  C9C9 10 10 1C 00
 744  C9CD 80 40 20 10    defb 128,64,32,16,8,4,2,1
 744  C9D1 08 04 02 01
 745  C9D5 38 08 08 08    defb 56,8,8,8,8,8,56,0
 745  C9D9 08 08 38 00
 746  C9DD 00 00 10 38    defb 0,0,16,56,108,198,0,0
 746  C9E1 6C C6 00 00
 747  C9E5 00 00 00 00    defb 0,0,0,0,0,0,0,255
 747  C9E9 00 00 00 FF
 748  C9ED 30 30 18 00    defb 48,48,24,0,0,0,0,0
 748  C9F1 00 00 00 00
 749  C9F5 00 00 7A 04    defb 0,0,122,4,124,132,122,0
 749  C9F9 7C 84 7A 00
 750  C9FD 80 40 40 5C    defb 128,64,64,92,98,66,188,0
 750  CA01 62 42 BC 00
 751  CA05 00 00 7A 84    defb 0,0,122,132,128,130,124,0
 751  CA09 80 82 7C 00
 752  CA0D 02 04 74 8C    defb 2,4,116,140,132,132,122,0
 752  CA11 84 84 7A 00
 753  CA15 00 00 BC 42    defb 0,0,188,66,124,64,62,0
 753  CA19 7C 40 3E 00
 754  CA1D 34 48 40 E0    defb 52,72,64,224,64,64,128,0
 754  CA21 40 40 80 00
 755  CA25 00 00 7A 84    defb 0,0,122,132,140,116,4,120
 755  CA29 8C 74 04 78
 756  CA2D 80 40 78 44    defb 128,64,120,68,68,68,136,0
 756  CA31 44 44 88 00
 757  CA35 10 00 10 08    defb 16,0,16,8,8,8,4,0
 757  CA39 08 08 04 00
 758  CA3D 00 10 00 10    defb 0,16,0,16,8,8,136,112
 758  CA41 08 08 88 70
 759  CA45 C0 40 48 50    defb 192,64,72,80,224,80,200,0
 759  CA49 E0 50 C8 00
 760  CA4D 30 10 10 10    defb 48,16,16,16,16,16,56,0
 760  CA51 10 10 38 00
 761  CA55 00 00 AC 54    defb 0,0,172,84,84,68,204,0
 761  CA59 54 44 CC 00
 762  CA5D 00 00 B8 44    defb 0,0,184,68,68,68,204,0
 762  CA61 44 44 CC 00
 763  CA65 00 00 78 84    defb 0,0,120,132,132,132,120,0
 763  CA69 84 84 78 00
 764  CA6D 00 00 B8 44    defb 0,0,184,68,68,120,64,128
 764  CA71 44 78 40 80
 765  CA75 00 00 74 88    defb 0,0,116,136,136,120,4,2
 765  CA79 88 78 04 02
 766  CA7D 00 00 B0 48    defb 0,0,176,72,64,64,64,0
 766  CA81 40 40 40 00
 767  CA85 00 00 78 80    defb 0,0,120,128,112,8,240,0
 767  CA89 70 08 F0 00
 768  CA8D 00 20 10 7C    defb 0,32,16,124,16,16,8,0
 768  CA91 10 10 08 00
 769  CA95 00 00 90 48    defb 0,0,144,72,132,132,120,0
 769  CA99 84 84 78 00
 770  CA9D 00 00 82 44    defb 0,0,130,68,68,40,16,0
 770  CAA1 44 28 10 00
 771  CAA5 00 00 84 42    defb 0,0,132,66,82,106,70,0
 771  CAA9 52 6A 46 00
 772  CAAD 00 00 88 50    defb 0,0,136,80,32,80,136,0
 772  CAB1 20 50 88 00
 773  CAB5 00 00 82 44    defb 0,0,130,68,68,60,4,120
 773  CAB9 44 3C 04 78
 774  CABD 00 00 7C 88    defb 0,0,124,136,48,68,248,0
 774  CAC1 30 44 F8 00
 775  CAC5 0E 10 10 60    defb 14,16,16,96,16,16,14,0
 775  CAC9 10 10 0E 00
 776  CACD 18 18 18 00    defb 24,24,24,0,24,24,24,0
 776  CAD1 18 18 18 00
 777  CAD5 E0 10 10 0C    defb 224,16,16,12,16,16,224,0
 777  CAD9 10 10 E0 00
 778  CADD 00 00 70 9A    defb 0,0,112,154,12,0,0,0
 778  CAE1 0C 00 00 00
 779  CAE5 00 00 18 3C    defb 0,0,24,60,102,255,0,0
 779  CAE9 66 FF 00 00
 780  CAED
 781  CAED
 782  CAED
 783  CAED                ;  include 7-rd3dmazeV6.asm    ;the maze itself and other routines
 784  CAED
 785  CAED              ;##############################################
 786  CAED              ;misc data
 787  CAED              ;various variables
 788  CAED              ;udg charachter set
 789  CAED              ;##############################################
 790  CAED
 791  CAED                      org 64000       ;fa00
 792  FA00
 793  FA00              ;variables
 794  FA00              ;-----------------------------------------------
 795  FA00
 796  FA00 00 00        player_pos: dw $0                  ; only when in the main game loop
 797  FA02                                             ; holds the low byte of the current insertion location when inserting a passageway into the maze.
 798  FA02
 799  FA02              ;l4083:  db 134               ; high byte of the maze location data
 800  FA02              ;l4084:  db 08                ; holds the desired length of the passageway beign inserted when constructing the maze.
 801  FA02 06           maxview: db 6                   ;holds how far we can see before
 802  FA03                                              ;hitting a wall
 803  FA03              ;l4085:  db $01               ; holds the passageway direction when inserting a passageway into the maze ($00=north, $01=west, $02=south, $03=east).
 804  FA03
 805  FA03 00           flags:  db 0                 ; flags:
 806  FA04                                           ;na   bit 7: 1=the player has been caught.
 807  FA04                                           ;na   bit 6: 1=the player has moved forwards.408a
 808  FA04                                           ;na   bit 5: 1=the player has not moved and so there is no need to redraw the view of the maze.
 809  FA04                                           ;na   bit 4: 1=the exit is visible.
 810  FA04                                           ;na   bit 3: 1=rex has moved.
 811  FA04                                           ;na   bit 2: 1=rex has moved into a new location.
 812  FA04                                           ;na   bit 1: 1=rex has his left foot forward, 0=rex has his right foot forward.
 813  FA04                                           ; bit 0: maxview used bit
 814  FA04
 815  FA04 00           var1:   db 0  ; used for printing
 816  FA05
 817  FA05 00           var2:   db 0  ; used for printing
 818  FA06
 819  FA06 00           depth:  db 0  ; stores our depth of field when we are looking
 820  FA07 00           l4086:  db 0
 821  FA08
 822  FA08              player_dir:
 823  FA08 00                   db 0  ;; only when in the main game loop
 824  FA09              de_count:
 825  FA09 00 00                dw 0  ;used to hold 2 bytes of reg de for maze locating info
 826  FA0B
 827  FA0B 00 00        left     dw 0000
 828  FA0D 00 00        right    dw 0000
 829  FA0F 00 00        var3     dw 0000     ;misc. used in drawing walls
 830  FA11 00 00        var4     dw 0000     ;misc. used in drawing walls
 831  FA13 00 00        var5     dw 0000     ;misc - used in drawing walls
 832  FA15 00 00        var6     dw 0000     ;stores current maze block check position
 833  FA17
 834  FA17 00           end_wall db 0        ;stores whether current wall being draw is
 835  FA18                                   ;an outside maze wall or not (as we want to treat
 836  FA18                                   ;this differnetly when drawn in future
 837  FA18 00 00        var7     dw 0        ;misc loop counter in walls
 838  FA1A 00 00        var8     dw 0        ;not used
 839  FA1C 00 00        var9     dw 0        ;not used
 840  FA1E 00           var10    db 0        ;used for maze wall drawing at depth 5
 841  FA1F 00           lr_wall  db 0        ;used for left and right wall drawing in draw_side_walls routine
 842  FA20 00 00        w5_start dw 0        ;not used
 843  FA22 00           cur_map  db 0        ;stores current map to draw or show
 844  FA23 00 00        map_start dw 0       ;tores the map start address
 845  FA25
 846  FA25 00 00        furthest_point dw 0   ;store the address of the furthest point
 847  FA27                                    ;we can see in the maze from our position.
 848  FA27 00           blockid  db 0         ;stores  block position of layer 5 for wall drawing
 849  FA28 71           maze_highbyte db $71  ;holds high byte of current maze in use
 850  FA29 00           map_show    db  0     ;tells is if we are already showing the map
 851  FA2A 00           show_exit       db 0  ;used to say whether to draw the full size exit door or not
 852  FA2B                                    ;0 = draw a closed exit door
 853  FA2B                                    ;1 = draw an open exit door
 854  FA2B 00           switch_pulled   db  0 ; 0 and 1 for on and off - default off
 855  FA2C 00 00        sp_store        dw  0   ;save and restore the SP
 856  FA2E 00 00        switch_sound    dw 0    ;shows if switch sound already sounded = 0=no, 1=yes
 857  FA30 00           game_exit       db  0   ;set to 255 if we need to exit the game as we got passed level 0
 858  FA31
 859  FA31              ;#############################################################
 860  FA31              ;reserve 200 bytes for the stack - points here from BASIC
 861  FA31              ;stack pointer lives here
 862  FA31 00 00 00...  stack_p        block 200
 863  FAF9
 864  FAF9              ;stack pointer is at 64511
 865  FAF9
 866  FAF9              ;##############################################
 867  FAF9              ;udg charachter set starts at 64512
 868  FAF9              ;##############################################
 869  FAF9
 870  FAF9                      org 64512
 871  FC00
 872  FC00              ;##############################################
 873  FC00                    ;UDG Charachter Defs
 874  FC00              ;##############################################
 875  FC00              _chars:
 876  FC00 48 4B 97 93   db	72,75,151,147,137,68,36,18      ;80	65080	;door wood effect 1
 876  FC04 89 44 24 12
 877  FC08 A8 44 A2 A9   db	168,68,162,169,41,66,148,164	;81	65088   ;door wood effect 2
 877  FC0C 29 42 94 A4
 878  FC10 11 2A 52 54   db	17,42,82,84,78,78,37,18  	    ;82	65096   ;door wood effect 3
 878  FC14 4E 4E 25 12
 879  FC18 28 48 A4 94   db	40,72,164,148,74,146,36,72  	;83	65104   ;door wood effect 4
 879  FC1C 4A 92 24 48
 880  FC20 34 34 34 F7   db	52,52,52,247,247,52,52,52     	;84	65112	;Door Barsvertical
 880  FC24 F7 34 34 34
 881  FC28 00 00 00 FF   db	0,0,0,255,255,0,0,0   	        ;85	65120   ;Door Bars Crossbars
 881  FC2C FF 00 00 00
 882  FC30 AC EC 6C 2C   db	172,236,108,44,44,46,47,45	    ;86	65128	;door bars left side
 882  FC34 2C 2E 2F 2D
 883  FC38 35 37 36 34   db	53,55,54,52,52,116,244,180	    ;87	65136	;door bars right side
 883  FC3C 34 74 F4 B4
 884  FC40              ;rest of door graphic chars are at $b9 onwards below
 885  FC40
 886  FC40 C0 F0 FC FF   db	192,240,252,255,255,252,240,192 ;88	65144   left hand triangle pointed
 886  FC44 FF FC F0 C0
 887  FC48 03 0F 3F FF   db	3,15,63,255,255,63,15,3         ;89	65152	right hand triangle pointed
 887  FC4C FF 3F 0F 03
 888  FC50 00 00 00 00   db	0,0,0,0,0,0,0,0	                ;8a	65160
 888  FC54 00 00 00 00
 889  FC58 FF 55 FF AF   db	255,85,255,175,255,95,255,255   ;8b	65168	upper wall 5 right bottom
 889  FC5C FF 5F FF FF
 890  FC60 FF D5 FF FA   db	255,213,255,250,255,253,255,255	;8c	upper wall 5 left bottom
 890  FC64 FF FD FF FF
 891  FC68
 892  FC68              ;extra layer 5 chars
 893  FC68 FF 3F F3 9F   db	255,63,243,159,244,47,249,143 	 ;8d	small wall stretched (layer 3)
 893  FC6C F4 2F F9 8F
 894  FC70 FF 8C FF 26   db	255,140,255,38,255,140,255,38 	 ;8e	small wall stretched (layer 3)
 894  FC74 FF 8C FF 26
 895  FC78
 896  FC78               ;Section 2 left and right UDG
 897  FC78 00 00 00 00   DB 0,0,0,0,0,3,31,255              ;8f 65200  top right Section 2 (1)
 897  FC7C 00 03 1F FF
 898  FC80 00 00 01 0F   DB 0,0,1,15,127,255,255,255        ;90 65208  top right Section 2 (2)
 898  FC84 7F FF FF FF
 899  FC88 07 3F FF FF   DB 7,63,255,255,255,255,255,255    ;91 65216  top right Section 2 (3)
 899  FC8C FF FF FF FF
 900  FC90
 901  FC90 FF 1F 03 00   DB 255,31,3,0,0,0,0,0              ;92 65224   bottom right Section 2 (1)
 901  FC94 00 00 00 00
 902  FC98 FF FF FF 7F   DB 255,255,255,127,15,1,0,0        ;93 65232   bottom right Section 2 (2)
 902  FC9C 0F 01 00 00
 903  FCA0 FF FF FF FF   DB 255,255,255,255,255,255,63,7    ;94 65240   bottom right Section 2 (3)
 903  FCA4 FF FF 3F 07
 904  FCA8
 905  FCA8 E0 FC FF FF   DB 224,252,255,255,255,255,255,255 ;95 65248   top left Section 2 (1)
 905  FCAC FF FF FF FF
 906  FCB0 00 00 80 F0   DB 0,0,128,240,254,255,255,255     ;96 65256   top left Section 2 (2)
 906  FCB4 FE FF FF FF
 907  FCB8 00 00 00 00   DB 0,0,0,0,0,192,248,255           ;97 65264   top left Section 2 (3)
 907  FCBC 00 C0 F8 FF
 908  FCC0
 909  FCC0 FF FF FF FF   DB 255,255,255,255,255,255,252,224 ;98 65272   bottom left Section 2 (1)
 909  FCC4 FF FF FC E0
 910  FCC8 FF FF FF FE   DB 255,255,255,254,240,128,0,0     ;99 65280   bottom left Section 2 (2)
 910  FCCC F0 80 00 00
 911  FCD0 FF F8 C0 00   DB 255,248,192,0,0,0,0,0           ;9a 65288   bottom left Section 2 (3)
 911  FCD4 00 00 00 00
 912  FCD8
 913  FCD8 80 C0 E0 F0   DB	128,192,224,240,245,250,245,250	;9b	65296	layer 5 left top
 913  FCDC F5 FA F5 FA
 914  FCE0 F5 FA F5 FA   DB	245,250,245,250,240,224,192,128	;9c	65304	layer 5 left bottom
 914  FCE4 F0 E0 C0 80
 915  FCE8 01 03 07 0F   DB	1,3,7,15,95,175,95,175         	;9d	65312   layer 5 right top
 915  FCEC 5F AF 5F AF
 916  FCF0 5F AF 5F AF   DB	95,175,95,175,15,7,3,1         	;9e	65320	layer 5 right bottom
 916  FCF4 0F 07 03 01
 917  FCF8 55 AA 55 AA   DB	85,170,85,170,85,170,85,170    	;9f	65328	chequer
 917  FCFC 55 AA 55 AA
 918  FD00 55 AA 55 AA   DB	85,170,85,170,0,0,0,0          	;a0	65336	top chequer
 918  FD04 00 00 00 00
 919  FD08 00 00 00 00   DB	0,0,0,0,85,170,85,170          	;a1	65344	bottom chequer
 919  FD0C 55 AA 55 AA
 920  FD10 00 00 00 00   DB	0,0,0,0,255,255,255,255        	;a2	65352		bottom black
 920  FD14 FF FF FF FF
 921  FD18 FF FF FF FF   DB	255,255,255,255,0,0,0,0        	;a3	65360		top black
 921  FD1C 00 00 00 00
 922  FD20 FF 08 08 08   DB	255,8,8,8,255,128,128,255      	;a4	65368		brick pattern
 922  FD24 FF 80 80 FF
 923  FD28 99 C8 64 32   DB	153,200,100,50,25,140,206,171  	;a5	65376		top left brick diag
 923  FD2C 19 8C CE AB
 924  FD30 10 28 10 7C   DB	16,40,16,124,16,40,40,68       	;a6	65384		man
 924  FD34 10 28 28 44
 925  FD38 00 78 6B 7E   DB	0,120,107,126,124,104,120,0    	;a7	65392		switch
 925  FD3C 7C 68 78 00
 926  FD40 FF A5 FF A5   DB	255,165,255,165,165,255,165,255	;a8	65400		fancy square
 926  FD44 A5 FF A5 FF
 927  FD48 80 C0 E0 F0   DB	128,192,224,240,255,255,255,255	;a9	65408		top left 5
 927  FD4C FF FF FF FF
 928  FD50 01 03 07 0F   DB	1,3,7,15,255,255,255,255       	;aa	65416		top right 5
 928  FD54 FF FF FF FF
 929  FD58 FF FF FF FF   DB	255,255,255,255,240,224,192,128	;ab	65424		bot left  5
 929  FD5C F0 E0 C0 80
 930  FD60 FF FF FF FF   DB	255,255,255,255,15,7,3,1       	;ac	65432		bot right 5
 930  FD64 0F 07 03 01
 931  FD68 FF E5 FF FD   DB	255,229,255,253,253,255,255,255	;ad	65440		top right fancy
 931  FD6C FD FF FF FF
 932  FD70 FF A7 FF BF   DB	255,167,255,191,191,255,255,255	;ae	65448		top left fancy
 932  FD74 BF FF FF FF
 933  FD78 FF FF FF FF   DB	255,255,255,255,255,255,255,255	;af	65456		all black
 933  FD7C FF FF FF FF
 934  FD80 FF FE FC F8   DB	255,254,252,248,240,224,192,128	;b0	65464		top left triangle
 934  FD84 F0 E0 C0 80
 935  FD88 FF 7F 3F 1F   DB	255,127,63,31,15,7,3,1         	;b1	65472		top right triangle
 935  FD8C 0F 07 03 01
 936  FD90 01 03 07 0F   DB	1,3,7,15,31,63,127,255         	;b2	65480		bot right triangle
 936  FD94 1F 3F 7F FF
 937  FD98 80 C0 E0 F0   DB	128,192,224,240,248,252,254,255	;b3	65488		bot right triangle
 937  FD9C F8 FC FE FF
 938  FDA0
 939  FDA0 FF 55 FF AA   DB	255,85,255,170,255,85,255,170	;b4	65496		small wall
 939  FDA4 FF 55 FF AA
 940  FDA8 FF 88 88 FF   DB	255,136,136,255,162,162,255,128	;b5	65504		mediumwall
 940  FDAC A2 A2 FF 80
 941  FDB0 FF 88 88 88   DB	255,136,136,136,255,224,192,128	;b6	65512		largewall
 941  FDB4 FF E0 C0 80
 942  FDB8 FF AA FF AA   DB	255,170,255,170,255,170,255,170 ;b7	65520		mediumwall_1
 942  FDBC FF AA FF AA
 943  FDC0 FF 88 88 88   DB	255,136,136,136,255,128,128,128 ;b8	65528		hugewall
 943  FDC4 FF 80 80 80
 944  FDC8
 945  FDC8              ;layer 5 section 3 right TOP
 946  FDC8
 947  FDC8 00 00 00 FF   DB 0,0,0,255,255,255,255,255       ;b9 top right section 3 (4)
 947  FDCC FF FF FF FF
 948  FDD0 00 00 FF FF   DB 0,0,255,255,255,255,255,255     ;ba top right section 3 (3)
 948  FDD4 FF FF FF FF
 949  FDD8 00 FF FF FF   DB 0,255,255,255,255,255,255,255   ;bb top right section 3 (2)
 949  FDDC FF FF FF FF
 950  FDE0 FF FF FF FF   DB 255,255,255,255,255,255,255,255 ;bc top right section 3 (1)
 950  FDE4 FF FF FF FF
 951  FDE8
 952  FDE8              ;layer 5 section 3 right BOTTOM
 953  FDE8
 954  FDE8 FF FF FF FF   DB 255,255,255,255,255,0,0,0       ;bd top right section 3 (6)
 954  FDEC FF 00 00 00
 955  FDF0 FF FF FF FF   DB 255,255,255,255,255,255,0,0     ;be top right section 3 (6)
 955  FDF4 FF FF 00 00
 956  FDF8 FF FF FF FF   DB 255,255,255,255,255,255,255,0   ;bf top right section 3 (6)
 956  FDFC FF FF FF 00
 957  FE00 FF FF FF FF   DB 255,255,255,255,255,255,255,255 ;c0 top right section 3 (6)
 957  FE04 FF FF FF FF
 958  FE08
 959  FE08              ;layer 5 section 3 left TOP TBD
 960  FE08
 961  FE08 FF FF FF FF   DB 255,255,255,255,255,0,0,0       ;c1 bottom right section 3 (5)
 961  FE0C FF 00 00 00
 962  FE10 FF FF FF FF   DB 255,255,255,255,255,255,0,0     ;c2 bottom right section 3 (6)
 962  FE14 FF FF 00 00
 963  FE18 FF FF FF FF   DB 255,255,255,255,255,255,255,0   ;c3 bottom right section 3 (6)
 963  FE1C FF FF FF 00
 964  FE20 FF FF FF FF   DB 255,255,255,255,255,255,255,255 ;c4 bottom right section 3 (6)
 964  FE24 FF FF FF FF
 965  FE28
 966  FE28              ;layer 5 section 3 left BOTTOM TBD
 967  FE28
 968  FE28 00 00 00 FF   DB 0,0,0,255,255,255,255,255       ;c5 bottom right section 3 (5)
 968  FE2C FF FF FF FF
 969  FE30 00 00 FF FF   DB 0,0,255,255,255,255,255,255     ;c6 bottom right section 3 (6)
 969  FE34 FF FF FF FF
 970  FE38 00 FF FF FF   DB 0,255,255,255,255,255,255,255   ;c7 bottom right section 3 (6)
 970  FE3C FF FF FF FF
 971  FE40 FF FF FF FF   DB 255,255,255,255,255,255,255,255 ;c8 bottom right section 3 (6)
 971  FE44 FF FF FF FF
 972  FE48
 973  FE48
 974  FE48              ;layer 5 section 4 right TOP
 975  FE48
 976  FE48 00 00 00 00   DB 0,0,0,0,0,0,0,255               ;c9 top right section 3 (4)
 976  FE4C 00 00 00 FF
 977  FE50 00 00 00 00   DB 0,0,0,0,0,0,255,255             ;ca top right section 3 (4)
 977  FE54 00 00 FF FF
 978  FE58 00 00 00 00   DB 0,0,0,0,255,255,255,255         ;cb top right section 3 (3)
 978  FE5C FF FF FF FF
 979  FE60 00 00 FF FF   DB 0,0,255,255,255,255,255,255     ;cc top right section 3 (2)
 979  FE64 FF FF FF FF
 980  FE68 00 FF FF FF   DB 0,255,255,255,255,255,255,255   ;cd top right section 3 (1)
 980  FE6C FF FF FF FF
 981  FE70
 982  FE70              ;layer 5 section 4 right BOTTOM
 983  FE70
 984  FE70 FF 00 00 00   db 255,0,0,0,0,0,0,0               ;ce top right section 3 (6)
 984  FE74 00 00 00 00
 985  FE78 FF FF 00 00   db 255,255,0,0,0,0,0,0             ;cf top right section 3 (6)
 985  FE7C 00 00 00 00
 986  FE80 FF FF FF FF   db 255,255,255,255,0,0,0,0         ;d0 top right section 3 (6)
 986  FE84 00 00 00 00
 987  FE88 FF FF FF FF   db 255,255,255,255,255,255,0,0     ;d1 top right section 3 (6)
 987  FE8C FF FF 00 00
 988  FE90 FF FF FF FF   db 255,255,255,255,255,255,255,0   ;d2 top right section 3 (6)
 988  FE94 FF FF FF 00
 989  FE98
 990  FE98
 991  FE98              ;Extra wall5
 992  FE98              ; db	249,63,243,159,244,47,249,143 	;c9	small wall stretched more
 993  FE98              ; db 255,15,255,31,255,15,255,15	   	;ca	small wall stretched
 994  FE98              ; db 240,15,224,31,224,15,112,15	   	;cb	small wall stretched
 995  FE98
 996  FE98              ;triangular door wood parts
 997  FE98 FF FF FE FB   db	255,255,254,251,249,228,228,146     ;d3	   ;door wood effect top corner 1 right side($80)
 997  FE9C F9 E4 E4 92
 998  FEA0 88 CB E7 F3   db	136,203,231,243,249,252,254,255	    ;d4	   ;door wood effect bottom corner 1 (80)
 998  FEA4 F9 FC FE FF
 999  FEA8 FF FE FE FC   db	255,254,254,252,254,238,229,146     ;d5	   ;door wood effect top corner 3 right side($82)
 999  FEAC FE EE E5 92
1000  FEB0 91 CA E2 F4   db	145,202,226,244,250,252,254,255    	;d6    ;door wood effect bottom corner 1 (82)
1000  FEB4 FA FC FE FF
1001  FEB8
1002  FEB8              ;additional characters for level numbers printed on right of display
1003  FEB8              ;single caracter 10,11,12,13,14,15
1004  FEB8 00 4C 52 52    db  0,76,82,82,82,82,76,0             ;d7
1004  FEBC 52 52 4C 00
1005  FEC0 00 48 48 48    db  0,72,72,72,72,72,72,0             ;d8
1005  FEC4 48 48 48 00
1006  FEC8 00 4C 52 42    db  0,76,82,66,68,72,94,0             ;d9
1006  FECC 44 48 5E 00
1007  FED0 00 4C 52 46    db  0,76,82,70,66,82,76,0             ;da
1007  FED4 42 52 4C 00
1008  FED8 00 42 46 4A    db  0,66,70,74,94,66,66,0             ;db
1008  FEDC 5E 42 42 00
1009  FEE0 00 4E 50 4C    db  0,78,80,76,66,82,76,0             ;dc
1009  FEE4 42 52 4C 00
1010  FEE8
1011  FEE8              ;characters to print around the switch
1012  FEE8 FF 00 FF 00    db  255,0,255,0,255,0,255,0           ;dd  ;horizontal bars x 4
1012  FEEC FF 00 FF 00
1013  FEF0 FF 80 BF A0    db  255,128,191,160,175,168,171,170   ;de  ;top left corner
1013  FEF4 AF A8 AB AA
1014  FEF8 AA AB A8 AF    db  170,171,168,175,160,191,128,255   ;df  ;bot left corner
1014  FEFC A0 BF 80 FF
1015  FF00 AA AA AA AA    db  170,170,170,170,170,170,170,170   ;e0  ;vertical bars
1015  FF04 AA AA AA AA
1016  FF08 FF 01 FD 05    db  255,1,253,5,245,21,213,85         ;e1  ;top right corner
1016  FF0C F5 15 D5 55
1017  FF10 55 D5 15 F5    db  85,213,21,245,5,253,1,255         ;e2  ;bot right corner
1017  FF14 05 FD 01 FF
1018  FF18 00 FF 00 FF    db  0,255,0,255,0,255,0,255           ;e3  ;bot horizontal bars
1018  FF1C 00 FF 00 FF
1019  FF20 55 55 55 55    db  85,85,85,85,85,85,85,85           ;e4  ;right vertical bars
1019  FF24 55 55 55 55
1020  FF28
1021  FF28              ;side view switch chars
1022  FF28 FF FF FE FC    db  255,255,254,252,249,242,228,201   ;e5 ;top triangle bit
1022  FF2C F9 F2 E4 C9
1023  FF30 92 A4 A9 AA    db  146,164,169,170,170,170,170,170   ;e6 ; top left corner
1023  FF34 AA AA AA AA
1024  FF38 FF 01 7D 85    db  255,1,125,133,53,85,149,21        ;e7 ;top right corner
1024  FF3C 35 55 95 15
1025  FF40 55 D5 55 55    db  85,213,85,85,85,85,85,85          ;e8 ;2nd top line bottom right bit
1025  FF44 55 55 55 55
1026  FF48 40 80 00 00    db  64,128,0,0,0,0,0,0                ;e9 ;3rd top line bottom 2nd right bit
1026  FF4C 00 00 00 00
1027  FF50 92 24 49 92    db  146,36,73,146,36,72,144,32        ;ea ;top horizontal line
1027  FF54 24 48 90 20
1028  FF58
1029  FF58 C9 E4 F2 F9    db  201,228,242,249,252,254,255,255  ;eb   ;bottom triangle bit
1029  FF5C FC FE FF FF
1030  FF60 15 95 55 35    db  21,149,85,53,133,125,1,255       ;ec ;bottom right corner
1030  FF64 85 7D 01 FF
1031  FF68 55 55 55 55    db  85,85,85,85,85,85,213,85         ;ed ;2nd bottom line bottom right bit
1031  FF6C 55 55 D5 55
1032  FF70 AA AA AA AA    db  170,170,170,170,170,169,164,146  ;ee   ;bottom left corner
1032  FF74 AA A9 A4 92
1033  FF78 00 00 00 00    db  0,0,0,0,0,0,128,64               ;ef ;3rd top line bottom 2nd right bit
1033  FF7C 00 00 80 40
1034  FF80 20 90 48 24    db  32,144,72,36,146,73,36,146       ;f0 ;bottom horizontal line
1034  FF84 92 49 24 92
1035  FF88
1036  FF88 00 00 00 00    db   0,0,0,0,32,0,0,1                ;f1 ;stars for the inside of the closed door
1036  FF8C 20 00 00 01
1037  FF90 00 08 00 00    db   0,8,0,0,0,0,0,0                 ;f2 ;stars for the inside of the closed door
1037  FF94 00 00 00 00
1038  FF98
1039  FF98
1040  FF98
1041  FF98              ;END_PROGRAM
1042  FF98
1043  FF98
1044  FF98              ;for SJASMPLUS
1045  FF98              ;;
1046  FF98              ;; Set up the Nex output
1047  FF98              ;;
1048  FF98
1049  FF98                      ; This sets the name of the project, the start address,
1050  FF98                      ; and the initial stack pointer.
1051  FF98               ;       SAVENEX OPEN "3dmaze.nex";, start_game  ;, END_PROGRAM
1052  FF98                      SAVEBIN "3dmaze.bin",32768,32767
1053  FF98
1054  FF98                      ; This asserts the minimum core version.  Set it to the core version
1055  FF98                      ; you are developing on.
1056  FF98              ;        SAVENEX CORE 2,0,0
1057  FF98
1058  FF98                      ; This sets the border colour while loading (in this case white),
1059  FF98                      ; what to do with the file handle of the nex file when starting (0 =
1060  FF98                      ; close file handle as we're not going to access the project.nex
1061  FF98                      ; file after starting.  See sjasmplus documentation), whether
1062  FF98                      ; we preserve the next registers (0 = no, we set to default), and
1063  FF98                      ; whether we require the full 2MB expansion (0 = no we don't).
1064  FF98              ;        SAVENEX CFG 7,0,0,0
1065  FF98
1066  FF98                      ; Generate the Nex file automatically based on which pages you use.
1067  FF98              ;        SAVENEX AUTO
1068  FF98
# file closed: src/rd3dmazeV6-sj.asm
